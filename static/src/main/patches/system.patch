diff -rupN shibboleth-idp/system/conf/access-control-system.xml shibboleth-idp/system/conf/access-control-system.xml
--- shibboleth-idp/system/conf/access-control-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/access-control-system.xml	2019-07-01 13:03:37.433961740 -0400
@@ -1,28 +1,28 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="net.shibboleth.idp.security.ReloadingAccessControlService">
-        <constructor-arg>
-            <bean class="net.shibboleth.utilities.java.support.security.BasicAccessControlService"
-                p:policyMap-ref="shibboleth.AccessControlPolicies" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="shibboleth.IPRangeAccessControl" abstract="true"
-        class="net.shibboleth.utilities.java.support.security.IPRangeAccessControl" />
-
-    <bean id="shibboleth.PredicateAccessControl" abstract="true"
-        class="org.opensaml.profile.logic.PredicateAccessControl" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="net.shibboleth.idp.security.ReloadingAccessControlService">
+        <constructor-arg>
+            <bean class="net.shibboleth.utilities.java.support.security.BasicAccessControlService"
+                p:policyMap-ref="shibboleth.AccessControlPolicies" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="shibboleth.IPRangeAccessControl" abstract="true"
+        class="net.shibboleth.utilities.java.support.security.IPRangeAccessControl" />
+
+    <bean id="shibboleth.PredicateAccessControl" abstract="true"
+        class="org.opensaml.profile.logic.PredicateAccessControl" />
+
+</beans>
diff -rupN shibboleth-idp/system/conf/audit-system.xml shibboleth-idp/system/conf/audit-system.xml
--- shibboleth-idp/system/conf/audit-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/audit-system.xml	2019-07-01 13:03:37.433961740 -0400
@@ -1,792 +1,792 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-	   xmlns:context="http://www.springframework.org/schema/context"
-	   xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
-	   xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-	   default-init-method="initialize"
-       default-destroy-method="destroy">
-    
-    <bean id="shibboleth.DefaultSuppressedEvents" lazy-init="true"
-            class="org.springframework.beans.factory.config.ListFactoryBean">
-        <property name="sourceList">
-            <list>
-                <value>NoPotentialFlow</value>
-                <value>AttributeReleaseRejected</value>
-                <value>TermsRejected</value>
-                <value>ContextCheckDenied</value>
-            </list>
-        </property>
-    </bean>
-    
-    <!-- Controls which profiles get audited. -->
-    <bean id="shibboleth.ProfileAuditingCondition" class="com.google.common.base.Predicates" factory-method="not">
-        <constructor-arg>
-            <bean class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
-                <constructor-arg name="objectStrategy">
-                    <bean class="org.opensaml.profile.context.navigate.ProfileIdLookup" />
-                </constructor-arg>
-                <constructor-arg name="collection">
-                    <ref bean="shibboleth.AuditSuppressedProfiles" />
-                </constructor-arg>
-            </bean>
-        </constructor-arg>
-    </bean>
-    
-    <!-- Reusable bean for extracting a username and hashing it for F-TICKS. -->
-    <bean id="shibboleth.UsernameHasher" class="com.google.common.base.Functions" factory-method="compose">
-        <constructor-arg name="g">
-            <bean class="net.shibboleth.utilities.java.support.codec.StringDigester"
-                c:algorithm="#{'%{idp.fticks.algorithm:SHA-256}'.trim()}" c:format="HEX_LOWER"
-                p:salt="%{idp.fticks.salt:}" p:requireSalt="true" />
-        </constructor-arg>
-        <constructor-arg name="f">
-            <bean class="com.google.common.base.Functions" factory-method="compose">
-                <constructor-arg name="g">
-                    <bean class="net.shibboleth.idp.authn.context.navigate.SubjectContextPrincipalLookupFunction" />
-                </constructor-arg>
-                <constructor-arg name="f">
-                    <ref bean="shibboleth.ChildLookup.SubjectContext" />
-                </constructor-arg>
-            </bean>
-        </constructor-arg>
-    </bean>
-    
-    <!--
-    The actual beans used are in user-space, but they inherit from the maps below. We have to use a
-    MapFactoryBean instead of util:map because merging isn't supported by the util:map schema.
-    -->
-    <import resource="../../conf/audit.xml"/>
-
-    <bean id="shibboleth.DefaultPostDecodeAuditExtractors" lazy-init="true"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.PROTOCOL"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="constant"
-                        c:value-ref="shibboleth.MetadataLookup.Protocol" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.REQUEST_BINDING"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLBindingContextBindingFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.ChildLookup.SAMLBindingContext"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.REQUEST_ID"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageInfoContextIDFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.REQUEST_ISSUE_INSTANT"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageInfoContextIssueInstantFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IN_RESPONSE_TO"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.InResponseToAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.STATUS_CODE"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.StatusCodeAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SUBSTATUS_CODE"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.SubStatusCodeAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.STATUS_MESSAGE"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.StatusMessageAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IS_PASSIVE"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.IsPassiveAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.AuthnRequest"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.FORCE_AUTHN"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.ForceAuthnAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.AuthnRequest"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-            </map>
-        </property>
-    </bean>
-        
-    <bean id="shibboleth.DefaultPostLookupAuditExtractors"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SERVICE_PROVIDER"/>
-                    </key>
-                    <ref bean="shibboleth.RelyingPartyIdLookup.Simple" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IDENTITY_PROVIDER"/>
-                    </key>
-                    <ref bean="shibboleth.ResponderIdLookup.Simple" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-    
-    <bean id="shibboleth.DefaultPostAssertionAuditExtractors"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.ASSERTION_ID"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.AssertionIDAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.ASSERTION_ISSUE_INSTANT"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.AssertionInstantAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.AUTHN_INSTANT"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.AuthnInstantAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SESSION_INDEX"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.SessionIndexAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.AUTHN_CONTEXT"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.AuthnContextAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID_FORMAT"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDFormatAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-            </map>
-        </property>
-    </bean>
-        
-    <bean id="shibboleth.DefaultPostResponseAuditExtractors"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.AUTHN_FLOW_ID"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.authn.audit.impl.AuthenticationFlowAuditExtractor" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.SSO"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="net.shibboleth.idp.authn.context.navigate.PreviousResultLookupFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.ChildLookup.AuthenticationContext" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose"
-                        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
-                    </key>
-                    <ref bean="shibboleth.UsernameHasher" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.ChildLookup.SessionContext" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.ATTRIBUTES"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.profile.audit.impl.AttributesAuditExtractor">
-                        <property name="activationCondition">
-                            <bean parent="shibboleth.Conditions.OR">
-                                <constructor-arg>
-                                    <list>
-                                        <bean parent="shibboleth.Conditions.Expression"
-                                            c:_0="#profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/resolvertest')" />
-                                        <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
-                                    </list>
-                                </constructor-arg>
-                            </bean>
-                        </property>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.RESPONSE_BINDING"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLBindingContextBindingFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.ChildLookup.SAMLBindingContext"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.RESPONSE_ID"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageInfoContextIDFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.RESPONSE_ISSUE_INSTANT"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageInfoContextIssueInstantFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IN_RESPONSE_TO"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.InResponseToAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.STATUS_CODE"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.StatusCodeAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SUBSTATUS_CODE"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.SubStatusCodeAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.STATUS_MESSAGE"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.StatusMessageAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-            </map>
-        </property>
-    </bean>
-    
-    <bean id="shibboleth.DefaultLogoutRequestAuditExtractors"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID_FORMAT"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDFormatAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SESSION_INDEX"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.SessionIndexAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-            </map>
-        </property>
-    </bean>
-    
-    <bean id="shibboleth.DefaultLogoutAuditExtractors"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose"
-                        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
-                    </key>
-                    <ref bean="shibboleth.UsernameHasher" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.ChildLookup.SessionContext" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDAuditExtractor">
-                        <constructor-arg>
-                            <bean class="com.google.common.base.Functions" factory-method="compose"
-                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
-                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-            </map>
-        </property>
-    </bean>
-        
-    <bean id="shibboleth.DefaultErrorViewAuditExtractors"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.AUTHN_FLOW_ID"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.authn.audit.impl.AuthenticationFlowAuditExtractor" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.SSO"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="net.shibboleth.idp.authn.context.navigate.PreviousResultLookupFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.ChildLookup.AuthenticationContext" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose"
-                        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
-                    </key>
-                    <ref bean="shibboleth.UsernameHasher" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.ChildLookup.SessionContext" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-            </map>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.DefaultCASLoginAuditExtractors"
-          class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.AUTHN_FLOW_ID"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.authn.audit.impl.AuthenticationFlowAuditExtractor" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.SSO"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="net.shibboleth.idp.authn.context.navigate.PreviousResultLookupFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.ChildLookup.AuthenticationContext" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose"
-                          c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                          c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
-                    </key>
-                    <ref bean="shibboleth.UsernameHasher" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.USER"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose"
-                          c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                          c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.SERVICE_URL"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.ServiceLookupFunction" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.GATEWAY"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.GatewayLookupFunction" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.RENEW"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.RenewLookupFunction" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.ChildLookup.SessionContext" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.SERVICE_TICKET"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.TicketLookupFunction" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.DefaultCASValidationAuditExtractors"
-          class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose"
-                          c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                          c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
-                    </key>
-                    <ref bean="shibboleth.UsernameHasher" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.USER"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose"
-                          c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                          c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.SERVICE_URL"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.ServiceLookupFunction" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.ChildLookup.SessionContext" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.SERVICE_TICKET"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.TicketLookupFunction" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.STATUS_CODE"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.StatusCodeLookupFunction" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.STATUS_DETAIL"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.StatusDetailLookupFunction" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.ATTRIBUTES"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.profile.audit.impl.AttributesAuditExtractor" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.DefaultCASProxyAuditExtractors"
-          class="org.springframework.beans.factory.config.MapFactoryBean"
-          parent="shibboleth.DefaultCASValidationAuditExtractors">
-        <property name="sourceMap">
-            <map merge="true">
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.GRANTING_TICKET"/>
-                    </key>
-                    <bean class="net.shibboleth.idp.cas.audit.impl.ProxyGrantingTicketLookupFunction" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	   xmlns:context="http://www.springframework.org/schema/context"
+	   xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
+	   xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+	   default-init-method="initialize"
+       default-destroy-method="destroy">
+    
+    <bean id="shibboleth.DefaultSuppressedEvents" lazy-init="true"
+            class="org.springframework.beans.factory.config.ListFactoryBean">
+        <property name="sourceList">
+            <list>
+                <value>NoPotentialFlow</value>
+                <value>AttributeReleaseRejected</value>
+                <value>TermsRejected</value>
+                <value>ContextCheckDenied</value>
+            </list>
+        </property>
+    </bean>
+    
+    <!-- Controls which profiles get audited. -->
+    <bean id="shibboleth.ProfileAuditingCondition" class="com.google.common.base.Predicates" factory-method="not">
+        <constructor-arg>
+            <bean class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
+                <constructor-arg name="objectStrategy">
+                    <bean class="org.opensaml.profile.context.navigate.ProfileIdLookup" />
+                </constructor-arg>
+                <constructor-arg name="collection">
+                    <ref bean="shibboleth.AuditSuppressedProfiles" />
+                </constructor-arg>
+            </bean>
+        </constructor-arg>
+    </bean>
+    
+    <!-- Reusable bean for extracting a username and hashing it for F-TICKS. -->
+    <bean id="shibboleth.UsernameHasher" class="com.google.common.base.Functions" factory-method="compose">
+        <constructor-arg name="g">
+            <bean class="net.shibboleth.utilities.java.support.codec.StringDigester"
+                c:algorithm="#{'%{idp.fticks.algorithm:SHA-256}'.trim()}" c:format="HEX_LOWER"
+                p:salt="%{idp.fticks.salt:}" p:requireSalt="true" />
+        </constructor-arg>
+        <constructor-arg name="f">
+            <bean class="com.google.common.base.Functions" factory-method="compose">
+                <constructor-arg name="g">
+                    <bean class="net.shibboleth.idp.authn.context.navigate.SubjectContextPrincipalLookupFunction" />
+                </constructor-arg>
+                <constructor-arg name="f">
+                    <ref bean="shibboleth.ChildLookup.SubjectContext" />
+                </constructor-arg>
+            </bean>
+        </constructor-arg>
+    </bean>
+    
+    <!--
+    The actual beans used are in user-space, but they inherit from the maps below. We have to use a
+    MapFactoryBean instead of util:map because merging isn't supported by the util:map schema.
+    -->
+    <import resource="../../conf/audit.xml"/>
+
+    <bean id="shibboleth.DefaultPostDecodeAuditExtractors" lazy-init="true"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.PROTOCOL"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="constant"
+                        c:value-ref="shibboleth.MetadataLookup.Protocol" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.REQUEST_BINDING"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLBindingContextBindingFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.ChildLookup.SAMLBindingContext"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.REQUEST_ID"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageInfoContextIDFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.REQUEST_ISSUE_INSTANT"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageInfoContextIssueInstantFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IN_RESPONSE_TO"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.InResponseToAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.STATUS_CODE"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.StatusCodeAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SUBSTATUS_CODE"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.SubStatusCodeAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.STATUS_MESSAGE"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.StatusMessageAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IS_PASSIVE"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.IsPassiveAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.AuthnRequest"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.FORCE_AUTHN"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.ForceAuthnAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.AuthnRequest"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+            </map>
+        </property>
+    </bean>
+        
+    <bean id="shibboleth.DefaultPostLookupAuditExtractors"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SERVICE_PROVIDER"/>
+                    </key>
+                    <ref bean="shibboleth.RelyingPartyIdLookup.Simple" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IDENTITY_PROVIDER"/>
+                    </key>
+                    <ref bean="shibboleth.ResponderIdLookup.Simple" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+    
+    <bean id="shibboleth.DefaultPostAssertionAuditExtractors"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.ASSERTION_ID"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.AssertionIDAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.ASSERTION_ISSUE_INSTANT"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.AssertionInstantAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.AUTHN_INSTANT"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.AuthnInstantAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SESSION_INDEX"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.SessionIndexAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.AUTHN_CONTEXT"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.AuthnContextAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID_FORMAT"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDFormatAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+            </map>
+        </property>
+    </bean>
+        
+    <bean id="shibboleth.DefaultPostResponseAuditExtractors"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.AUTHN_FLOW_ID"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.authn.audit.impl.AuthenticationFlowAuditExtractor" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.SSO"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="net.shibboleth.idp.authn.context.navigate.PreviousResultLookupFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.ChildLookup.AuthenticationContext" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose"
+                        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
+                    </key>
+                    <ref bean="shibboleth.UsernameHasher" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.ChildLookup.SessionContext" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.ATTRIBUTES"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.profile.audit.impl.AttributesAuditExtractor">
+                        <property name="activationCondition">
+                            <bean parent="shibboleth.Conditions.OR">
+                                <constructor-arg>
+                                    <list>
+                                        <bean parent="shibboleth.Conditions.Expression"
+                                            c:_0="#profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/resolvertest')" />
+                                        <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
+                                    </list>
+                                </constructor-arg>
+                            </bean>
+                        </property>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.RESPONSE_BINDING"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLBindingContextBindingFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.ChildLookup.SAMLBindingContext"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.RESPONSE_ID"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageInfoContextIDFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.RESPONSE_ISSUE_INSTANT"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageInfoContextIssueInstantFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IN_RESPONSE_TO"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.InResponseToAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.STATUS_CODE"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.StatusCodeAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SUBSTATUS_CODE"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.SubStatusCodeAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.STATUS_MESSAGE"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.StatusMessageAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+            </map>
+        </property>
+    </bean>
+    
+    <bean id="shibboleth.DefaultLogoutRequestAuditExtractors"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID_FORMAT"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDFormatAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SESSION_INDEX"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.SessionIndexAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+            </map>
+        </property>
+    </bean>
+    
+    <bean id="shibboleth.DefaultLogoutAuditExtractors"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose"
+                        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
+                    </key>
+                    <ref bean="shibboleth.UsernameHasher" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.ChildLookup.SessionContext" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.NAMEID"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.saml.audit.impl.NameIDAuditExtractor">
+                        <constructor-arg>
+                            <bean class="com.google.common.base.Functions" factory-method="compose"
+                                c:g-ref="shibboleth.MessageLookup.SAMLObject"
+                                c:f-ref="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+            </map>
+        </property>
+    </bean>
+        
+    <bean id="shibboleth.DefaultErrorViewAuditExtractors"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.AUTHN_FLOW_ID"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.authn.audit.impl.AuthenticationFlowAuditExtractor" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.SSO"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="net.shibboleth.idp.authn.context.navigate.PreviousResultLookupFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.ChildLookup.AuthenticationContext" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose"
+                        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
+                    </key>
+                    <ref bean="shibboleth.UsernameHasher" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.ChildLookup.SessionContext" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+            </map>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.DefaultCASLoginAuditExtractors"
+          class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.AUTHN_FLOW_ID"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.authn.audit.impl.AuthenticationFlowAuditExtractor" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.authn.AuthnAuditFields.SSO"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="net.shibboleth.idp.authn.context.navigate.PreviousResultLookupFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.ChildLookup.AuthenticationContext" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose"
+                          c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                          c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
+                    </key>
+                    <ref bean="shibboleth.UsernameHasher" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.USER"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose"
+                          c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                          c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.SERVICE_URL"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.ServiceLookupFunction" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.GATEWAY"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.GatewayLookupFunction" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.RENEW"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.RenewLookupFunction" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.ChildLookup.SessionContext" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.SERVICE_TICKET"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.TicketLookupFunction" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.DefaultCASValidationAuditExtractors"
+          class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose"
+                          c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                          c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.HASHED_USERNAME"/>
+                    </key>
+                    <ref bean="shibboleth.UsernameHasher" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.USER"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose"
+                          c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                          c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.SERVICE_URL"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.ServiceLookupFunction" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.SESSION_ID"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextIDLookupFunction" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.ChildLookup.SessionContext" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.SERVICE_TICKET"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.TicketLookupFunction" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.STATUS_CODE"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.StatusCodeLookupFunction" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.STATUS_DETAIL"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.StatusDetailLookupFunction" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.ATTRIBUTES"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.profile.audit.impl.AttributesAuditExtractor" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.DefaultCASProxyAuditExtractors"
+          class="org.springframework.beans.factory.config.MapFactoryBean"
+          parent="shibboleth.DefaultCASValidationAuditExtractors">
+        <property name="sourceMap">
+            <map merge="true">
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.cas.protocol.CASAuditFields.GRANTING_TICKET"/>
+                    </key>
+                    <bean class="net.shibboleth.idp.cas.audit.impl.ProxyGrantingTicketLookupFunction" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+    
+</beans>
diff -rupN shibboleth-idp/system/conf/cas-protocol-system.xml shibboleth-idp/system/conf/cas-protocol-system.xml
--- shibboleth-idp/system/conf/cas-protocol-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/cas-protocol-system.xml	2019-07-01 13:03:37.433961740 -0400
@@ -1,43 +1,43 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-	   default-init-method="initialize"
-       default-destroy-method="destroy">
-
-
-    <bean id="simpleTicketService" class="net.shibboleth.idp.cas.ticket.impl.SimpleTicketService"
-          c:service-ref="#{'%{idp.cas.StorageService:shibboleth.StorageService}'.trim()}" />
-
-    <bean id="encodingTicketService" class="net.shibboleth.idp.cas.ticket.impl.EncodingTicketService"
-          c:service-ref="#{'%{idp.cas.StorageService:shibboleth.StorageService}'.trim()}"
-          c:sealer-ref="encodedTicketSealer"/>
-
-    <bean id="encodedTicketSealer" lazy-init="true"
-          class="net.shibboleth.utilities.java.support.security.DataSealer"
-          p:keyStrategy-ref="shibboleth.DataSealerKeyStrategy"
-          p:encoder-ref="base64Codec"
-          p:decoder-ref="base64Codec" />
-
-    <bean id="base64Codec" class="org.apache.commons.codec.binary.Base64"
-          c:lineLength="0"
-          c:lineSeparator="#{new byte[] {10} }"
-          c:urlSafe="true" />
-
-    <alias name="simpleTicketService" alias="shibboleth.DefaultCASTicketService" />
-
-    <bean id="shibboleth.DefaultCASProxyAuthenticator"
-          class="net.shibboleth.idp.cas.proxy.impl.HttpClientProxyAuthenticator" />
-
-    <bean id="shibboleth.DefaultCASProxyValidateIdPSessionPredicate"
-          class="com.google.common.base.Predicates"
-          factory-method="alwaysFalse" />
-
-    <import resource="../../conf/cas-protocol.xml" />
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+	   default-init-method="initialize"
+       default-destroy-method="destroy">
+
+
+    <bean id="simpleTicketService" class="net.shibboleth.idp.cas.ticket.impl.SimpleTicketService"
+          c:service-ref="#{'%{idp.cas.StorageService:shibboleth.StorageService}'.trim()}" />
+
+    <bean id="encodingTicketService" class="net.shibboleth.idp.cas.ticket.impl.EncodingTicketService"
+          c:service-ref="#{'%{idp.cas.StorageService:shibboleth.StorageService}'.trim()}"
+          c:sealer-ref="encodedTicketSealer"/>
+
+    <bean id="encodedTicketSealer" lazy-init="true"
+          class="net.shibboleth.utilities.java.support.security.DataSealer"
+          p:keyStrategy-ref="shibboleth.DataSealerKeyStrategy"
+          p:encoder-ref="base64Codec"
+          p:decoder-ref="base64Codec" />
+
+    <bean id="base64Codec" class="org.apache.commons.codec.binary.Base64"
+          c:lineLength="0"
+          c:lineSeparator="#{new byte[] {10} }"
+          c:urlSafe="true" />
+
+    <alias name="simpleTicketService" alias="shibboleth.DefaultCASTicketService" />
+
+    <bean id="shibboleth.DefaultCASProxyAuthenticator"
+          class="net.shibboleth.idp.cas.proxy.impl.HttpClientProxyAuthenticator" />
+
+    <bean id="shibboleth.DefaultCASProxyValidateIdPSessionPredicate"
+          class="com.google.common.base.Predicates"
+          factory-method="alwaysFalse" />
+
+    <import resource="../../conf/cas-protocol.xml" />
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/conf/general-authn-system.xml shibboleth-idp/system/conf/general-authn-system.xml
--- shibboleth-idp/system/conf/general-authn-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/general-authn-system.xml	2019-07-01 13:03:37.433961740 -0400
@@ -1,180 +1,180 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-	<import resource="../../conf/authn/authn-comparison.xml" />
-	<import resource="../../conf/authn/general-authn.xml" />
-
-    <!-- Parent beans for custom principal types. -->
-    
-    <bean id="shibboleth.SAML2AuthnContextClassRef"
-        class="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal" abstract="true" />
-    <bean id="shibboleth.SAML2AuthnContextDeclRef"
-        class="net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal" abstract="true" />
-    <bean id="shibboleth.SAML1AuthenticationMethod"
-        class="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal" abstract="true" />
-
-    <!-- A parent bean to default some of the flow boilerplate. -->
-
-    <bean id="shibboleth.AuthenticationFlow" abstract="true"
-            class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor"
-            p:resultSerializer-ref="shibboleth.DefaultAuthenticationResultSerializer"
-            p:passiveAuthenticationSupported="false"
-            p:forcedAuthenticationSupported="false"
-            p:nonBrowserSupported="true"
-            p:lifetime="%{idp.authn.defaultLifetime:PT60M}"
-            p:inactivityTimeout="%{idp.authn.defaultTimeout:PT30M}">
-        <property name="supportedPrincipals">
-            <list>
-                <bean parent="shibboleth.SAML2AuthnContextClassRef"
-                    c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" />
-                <bean parent="shibboleth.SAML2AuthnContextClassRef"
-                    c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" />
-                <bean parent="shibboleth.SAML1AuthenticationMethod"
-                    c:method="urn:oasis:names:tc:SAML:1.0:am:password" />
-            </list>
-        </property>
-    </bean>
-
-    <!-- Default list of custom Principal serializers; users can define their own list and merge it with this one. -->
-    <bean id="shibboleth.DefaultPrincipalSerializers"
-            class="org.springframework.beans.factory.config.ListFactoryBean">
-        <property name="sourceList">
-            <list>
-                <bean class="net.shibboleth.idp.authn.principal.impl.UsernamePrincipalSerializer" />
-                <bean class="net.shibboleth.idp.authn.principal.impl.LDAPPrincipalSerializer" />
-                <bean class="net.shibboleth.idp.authn.duo.impl.DuoPrincipalSerializer" />
-                <bean class="net.shibboleth.idp.authn.principal.impl.IdPAttributePrincipalSerializer" />
-                <bean class="net.shibboleth.idp.authn.principal.impl.PasswordPrincipalSerializer"
-                    p:dataSealer="#{'%{idp.sealer.storeResource:}'.trim().length() > 0 ? getObject('shibboleth.DataSealer') : null}" />
-            </list>
-        </property>
-    </bean>
-    
-    <!--
-    Defining this allows us to specify symbolic text replacements that shrink the size of results
-    saved to client-side storage such as cookies.
-    -->
-    <bean id="shibboleth.DefaultPrincipalSymbolics"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <!-- Custom principal types. -->
-                <entry key="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal" value="1" />
-                <entry key="net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal" value="2" />
-                <entry key="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal" value="3" />
-                <entry key="javax.security.auth.kerberos.KerberosPrincipal" value="4" />
-                
-                <!-- SAML 2 authn context classes. -->
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocol" value="100" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocolPassword" value="101" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Kerberos" value="102" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileOneFactorUnregistered" value="103" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorUnregistered" value="104" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileOneFactorContract" value="105" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract" value="106" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" value="107" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" value="108" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PreviousSession" value="109" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:X509" value="110" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PGP" value="111" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SPKI" value="112" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:XMLDSig" value="113" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Smartcard" value="114" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SmartcardPKI" value="115" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SoftwarePKI" value="116" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Telephony" value="117" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:NomadTelephony" value="118" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PersonalTelephony" value="119" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:AuthenticatedTelephony" value="120" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SecureRemotePassword" value="121" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:TLSClient" value="122" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:TimeSyncToken" value="123" />
-                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified" value="124" />
-
-                <!-- SAML 1 authn methods -->
-                <entry key="urn:oasis:names:tc:SAML:1.0:am:password" value="200" />
-                <entry key="urn:ietf:rfc:1510" value="201" />
-                <entry key="urn:oasis:names:tc:SAML:1.0:am:HardwareToken" value="202" />
-                <entry key="urn:oasis:names:tc:SAML:1.0:am:X509-PKI" value="203" />
-                <entry key="urn:oasis:names:tc:SAML:1.0:am:PGP" value="204" />
-                <entry key="urn:oasis:names:tc:SAML:1.0:am:SPKI" value="205" />
-                <entry key="urn:oasis:names:tc:SAML:1.0:am:XKMS" value="206" />
-                <entry key="urn:ietf:rfc:3075" value="207" />
-                <entry key="urn:ietf:rfc:2945" value="208" />
-                <entry key="urn:ietf:rfc:2246" value="209" />
-                <entry key="urn:oasis:names:tc:SAML:1.0:am:unspecified" value="210" />
-                
-                <!-- Community-defined assurance profiles. -->
-                <entry key="http://id.incommon.org/assurance/silver" value="300" />
-                <entry key="http://id.incommon.org/assurance/bronze" value="301" />
-            </map>
-        </property>
-    </bean>
-    
-    <!-- The serializer machinery injected into authentication flows by default. -->
-    <bean id="shibboleth.DefaultAuthenticationResultSerializer"
-            class="net.shibboleth.idp.authn.impl.DefaultAuthenticationResultSerializer">
-        <property name="principalSerializers">
-            <ref bean="#{getObject('shibboleth.PrincipalSerializers') != null
-                ? 'shibboleth.PrincipalSerializers' : 'shibboleth.DefaultPrincipalSerializers'}" />
-        </property>
-        <property name="genericPrincipalSerializer.symbolics">
-            <ref bean="#{getObject('shibboleth.PrincipalSymbolics') != null
-                ? 'shibboleth.PrincipalSymbolics' : 'shibboleth.DefaultPrincipalSymbolics'}" />
-        </property>
-    </bean>
-
-    <!-- Registry of comparison rules configured by deployer and injected into authentication flow. -->
-    <bean id="shibboleth.AuthnComparisonRegistry"
-            class="net.shibboleth.idp.authn.principal.PrincipalEvalPredicateFactoryRegistry"
-            c:fromMap-ref="shibboleth.AuthnComparisonRules" />
-
-    <!-- Exact matching for SAML AC Classes and Declarations (or anything else really). -->
-    <bean id="shibboleth.ExactMatchFactory"
-        class="net.shibboleth.idp.authn.principal.impl.ExactPrincipalEvalPredicateFactory"/>
-
-    <!-- Parent bean for inexact matching factories defined by deployer. -->
-    <bean id="shibboleth.InexactMatchFactory" abstract="true"
-        class="net.shibboleth.idp.authn.principal.impl.InexactPrincipalEvalPredicateFactory" />
-
-    <!-- Boilerplate objects needed to key the installation of matching rules in the comparison registry. -->
-
-    <bean id="shibboleth.SAMLAuthnMethodExact" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal) }" p:second="exact"/>
-    
-    <bean id="shibboleth.SAMLACClassRefExact" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="exact"/>
-
-    <bean id="shibboleth.SAMLACDeclRefExact" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="exact"/>
-
-    <bean id="shibboleth.SAMLACClassRefMinimum" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="minimum"/>
-
-    <bean id="shibboleth.SAMLACDeclRefMinimum" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="minimum"/>
-
-    <bean id="shibboleth.SAMLACClassRefMaximum" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="maximum"/>
-
-    <bean id="shibboleth.SAMLACDeclRefMaximum" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="maximum"/>
-
-    <bean id="shibboleth.SAMLACClassRefBetter" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="better"/>
-
-    <bean id="shibboleth.SAMLACDeclRefBetter" class="net.shibboleth.utilities.java.support.collection.Pair"
-        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="better"/>
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+	<import resource="../../conf/authn/authn-comparison.xml" />
+	<import resource="../../conf/authn/general-authn.xml" />
+
+    <!-- Parent beans for custom principal types. -->
+    
+    <bean id="shibboleth.SAML2AuthnContextClassRef"
+        class="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal" abstract="true" />
+    <bean id="shibboleth.SAML2AuthnContextDeclRef"
+        class="net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal" abstract="true" />
+    <bean id="shibboleth.SAML1AuthenticationMethod"
+        class="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal" abstract="true" />
+
+    <!-- A parent bean to default some of the flow boilerplate. -->
+
+    <bean id="shibboleth.AuthenticationFlow" abstract="true"
+            class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor"
+            p:resultSerializer-ref="shibboleth.DefaultAuthenticationResultSerializer"
+            p:passiveAuthenticationSupported="false"
+            p:forcedAuthenticationSupported="false"
+            p:nonBrowserSupported="true"
+            p:lifetime="%{idp.authn.defaultLifetime:PT60M}"
+            p:inactivityTimeout="%{idp.authn.defaultTimeout:PT30M}">
+        <property name="supportedPrincipals">
+            <list>
+                <bean parent="shibboleth.SAML2AuthnContextClassRef"
+                    c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" />
+                <bean parent="shibboleth.SAML2AuthnContextClassRef"
+                    c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" />
+                <bean parent="shibboleth.SAML1AuthenticationMethod"
+                    c:method="urn:oasis:names:tc:SAML:1.0:am:password" />
+            </list>
+        </property>
+    </bean>
+
+    <!-- Default list of custom Principal serializers; users can define their own list and merge it with this one. -->
+    <bean id="shibboleth.DefaultPrincipalSerializers"
+            class="org.springframework.beans.factory.config.ListFactoryBean">
+        <property name="sourceList">
+            <list>
+                <bean class="net.shibboleth.idp.authn.principal.impl.UsernamePrincipalSerializer" />
+                <bean class="net.shibboleth.idp.authn.principal.impl.LDAPPrincipalSerializer" />
+                <bean class="net.shibboleth.idp.authn.duo.impl.DuoPrincipalSerializer" />
+                <bean class="net.shibboleth.idp.authn.principal.impl.IdPAttributePrincipalSerializer" />
+                <bean class="net.shibboleth.idp.authn.principal.impl.PasswordPrincipalSerializer"
+                    p:dataSealer="#{'%{idp.sealer.storeResource:}'.trim().length() > 0 ? getObject('shibboleth.DataSealer') : null}" />
+            </list>
+        </property>
+    </bean>
+    
+    <!--
+    Defining this allows us to specify symbolic text replacements that shrink the size of results
+    saved to client-side storage such as cookies.
+    -->
+    <bean id="shibboleth.DefaultPrincipalSymbolics"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <!-- Custom principal types. -->
+                <entry key="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal" value="1" />
+                <entry key="net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal" value="2" />
+                <entry key="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal" value="3" />
+                <entry key="javax.security.auth.kerberos.KerberosPrincipal" value="4" />
+                
+                <!-- SAML 2 authn context classes. -->
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocol" value="100" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocolPassword" value="101" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Kerberos" value="102" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileOneFactorUnregistered" value="103" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorUnregistered" value="104" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileOneFactorContract" value="105" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract" value="106" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" value="107" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" value="108" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PreviousSession" value="109" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:X509" value="110" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PGP" value="111" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SPKI" value="112" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:XMLDSig" value="113" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Smartcard" value="114" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SmartcardPKI" value="115" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SoftwarePKI" value="116" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Telephony" value="117" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:NomadTelephony" value="118" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PersonalTelephony" value="119" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:AuthenticatedTelephony" value="120" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SecureRemotePassword" value="121" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:TLSClient" value="122" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:TimeSyncToken" value="123" />
+                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified" value="124" />
+
+                <!-- SAML 1 authn methods -->
+                <entry key="urn:oasis:names:tc:SAML:1.0:am:password" value="200" />
+                <entry key="urn:ietf:rfc:1510" value="201" />
+                <entry key="urn:oasis:names:tc:SAML:1.0:am:HardwareToken" value="202" />
+                <entry key="urn:oasis:names:tc:SAML:1.0:am:X509-PKI" value="203" />
+                <entry key="urn:oasis:names:tc:SAML:1.0:am:PGP" value="204" />
+                <entry key="urn:oasis:names:tc:SAML:1.0:am:SPKI" value="205" />
+                <entry key="urn:oasis:names:tc:SAML:1.0:am:XKMS" value="206" />
+                <entry key="urn:ietf:rfc:3075" value="207" />
+                <entry key="urn:ietf:rfc:2945" value="208" />
+                <entry key="urn:ietf:rfc:2246" value="209" />
+                <entry key="urn:oasis:names:tc:SAML:1.0:am:unspecified" value="210" />
+                
+                <!-- Community-defined assurance profiles. -->
+                <entry key="http://id.incommon.org/assurance/silver" value="300" />
+                <entry key="http://id.incommon.org/assurance/bronze" value="301" />
+            </map>
+        </property>
+    </bean>
+    
+    <!-- The serializer machinery injected into authentication flows by default. -->
+    <bean id="shibboleth.DefaultAuthenticationResultSerializer"
+            class="net.shibboleth.idp.authn.impl.DefaultAuthenticationResultSerializer">
+        <property name="principalSerializers">
+            <ref bean="#{getObject('shibboleth.PrincipalSerializers') != null
+                ? 'shibboleth.PrincipalSerializers' : 'shibboleth.DefaultPrincipalSerializers'}" />
+        </property>
+        <property name="genericPrincipalSerializer.symbolics">
+            <ref bean="#{getObject('shibboleth.PrincipalSymbolics') != null
+                ? 'shibboleth.PrincipalSymbolics' : 'shibboleth.DefaultPrincipalSymbolics'}" />
+        </property>
+    </bean>
+
+    <!-- Registry of comparison rules configured by deployer and injected into authentication flow. -->
+    <bean id="shibboleth.AuthnComparisonRegistry"
+            class="net.shibboleth.idp.authn.principal.PrincipalEvalPredicateFactoryRegistry"
+            c:fromMap-ref="shibboleth.AuthnComparisonRules" />
+
+    <!-- Exact matching for SAML AC Classes and Declarations (or anything else really). -->
+    <bean id="shibboleth.ExactMatchFactory"
+        class="net.shibboleth.idp.authn.principal.impl.ExactPrincipalEvalPredicateFactory"/>
+
+    <!-- Parent bean for inexact matching factories defined by deployer. -->
+    <bean id="shibboleth.InexactMatchFactory" abstract="true"
+        class="net.shibboleth.idp.authn.principal.impl.InexactPrincipalEvalPredicateFactory" />
+
+    <!-- Boilerplate objects needed to key the installation of matching rules in the comparison registry. -->
+
+    <bean id="shibboleth.SAMLAuthnMethodExact" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal) }" p:second="exact"/>
+    
+    <bean id="shibboleth.SAMLACClassRefExact" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="exact"/>
+
+    <bean id="shibboleth.SAMLACDeclRefExact" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="exact"/>
+
+    <bean id="shibboleth.SAMLACClassRefMinimum" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="minimum"/>
+
+    <bean id="shibboleth.SAMLACDeclRefMinimum" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="minimum"/>
+
+    <bean id="shibboleth.SAMLACClassRefMaximum" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="maximum"/>
+
+    <bean id="shibboleth.SAMLACDeclRefMaximum" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="maximum"/>
+
+    <bean id="shibboleth.SAMLACClassRefBetter" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="better"/>
+
+    <bean id="shibboleth.SAMLACDeclRefBetter" class="net.shibboleth.utilities.java.support.collection.Pair"
+        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="better"/>
+    
+</beans>
diff -rupN shibboleth-idp/system/conf/global-system.xml shibboleth-idp/system/conf/global-system.xml
--- shibboleth-idp/system/conf/global-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/global-system.xml	2019-07-01 13:03:37.433961740 -0400
@@ -1,376 +1,376 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="shibboleth.PropertySourcesPlaceholderConfigurer"
-        class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <!-- This bean MUST be called "conversionService" to work properly. -->
-    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
-        <property name="converters">
-            <set>
-                <bean class="net.shibboleth.ext.spring.config.DurationToLongConverter" />
-                <bean class="net.shibboleth.ext.spring.config.StringToIPRangeConverter" />
-                <bean class="net.shibboleth.ext.spring.config.BooleanToPredicateConverter" />
-                <bean class="net.shibboleth.ext.spring.config.StringBooleanToPredicateConverter" />
-                <bean class="net.shibboleth.ext.spring.config.StringToResourceConverter" />
-            </set>
-        </property>
-    </bean>
-
-    <!-- This BeanPostProcessor auto-sets identifiable beans with the bean name (if not already set). -->
-    <bean id="shibboleth.IdentifiableBeanPostProcessor"
-        class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-
-    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
-            p:cacheSeconds="%{idp.message.cacheSeconds:300}"
-            p:basenames-ref="#{'%{idp.message.resources:shibboleth.MessageSourceResources}'.trim()}"
-            p:defaultEncoding="UTF-8" />
-
-    <import resource="../../conf/global.xml" />
-    <import resource="../../conf/errors.xml" />
-    <import resource="general-authn-system.xml" />
-    <import resource="session-manager-system.xml" />
-    <import resource="services-system.xml" />
-    <import resource="saml-binding-config.xml" />
-    <import resource="subject-c14n-system.xml" />
-    <import resource="profile-intercept-system.xml" />
-    <import resource="cas-protocol-system.xml" />
-    <import resource="general-admin-system.xml" />
-    <import resource="utilities.xml" />
-
-    <bean id="shibboleth.OpenSAMLConfig" class="net.shibboleth.idp.spring.OpenSAMLConfigBean"
-        depends-on="shibboleth.LoggingService,shibboleth.ParserPool,shibboleth.metrics.MetricRegistry"
-        p:parserPool-ref="shibboleth.ParserPool"
-        p:metricRegistry-ref="shibboleth.metrics.MetricRegistry" />
-
-    <bean id="shibboleth.VelocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean"
-            depends-on="shibboleth.LoggingService">
-        <property name="overrideLogging" value="false"/>
-        <property name="velocityProperties">
-            <props>
-                <prop key="runtime.log.logsystem.class">
-                    net.shibboleth.utilities.java.support.velocity.SLF4JLogChute
-                </prop>
-                <prop key="input.encoding">UTF-8</prop>
-                <prop key="output.encoding">UTF-8</prop>
-                <prop key="resource.loader">file, classpath, string</prop>
-                <prop key="classpath.resource.loader.class">
-                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
-                </prop>
-                <prop key="string.resource.loader.class">
-                    org.apache.velocity.runtime.resource.loader.StringResourceLoader
-                </prop>
-                <prop key="file.resource.loader.class">
-                    org.apache.velocity.runtime.resource.loader.FileResourceLoader
-                </prop>
-                <prop key="file.resource.loader.path">#{'%{idp.views:%{idp.home}/views}'.trim()}</prop>
-                <prop key="file.resource.loader.cache">false</prop>
-            </props>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.ParserPool" class="net.shibboleth.utilities.java.support.xml.BasicParserPool"
-            depends-on="shibboleth.LoggingService"
-            p:maxPoolSize="100"
-            p:coalescing="true"
-            p:ignoreComments="true"
-            p:ignoreElementContentWhitespace="true"
-            p:namespaceAware="true">
-        <property name="builderAttributes">
-            <map>
-                <!-- Sun/Oracle is the default, for Xerces, set property to org.apache.xerces.util.SecurityManager -->
-                <entry key="http://apache.org/xml/properties/security-manager">
-                    <bean class="%{idp.xml.securityManager:com.sun.org.apache.xerces.internal.util.SecurityManager}" />
-                </entry>
-            </map>
-        </property>
-        <property name="builderFeatures">
-            <map>
-                <entry key="http://apache.org/xml/features/disallow-doctype-decl">
-                    <util:constant static-field="java.lang.Boolean.TRUE" />
-                </entry>
-                <entry key="http://apache.org/xml/features/validation/schema/normalized-value">
-                    <util:constant static-field="java.lang.Boolean.FALSE" />
-                </entry>
-                <entry key="http://javax.xml.XMLConstants/feature/secure-processing">
-                    <util:constant static-field="java.lang.Boolean.TRUE" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-
-    <!--  Bean used by the SchemaValidation metadata filter and anything else doing basic schema validation. -->
-    <bean id="shibboleth.SchemaBuilder" lazy-init="true"
-        class="org.opensaml.saml.common.xml.SAMLSchemaBuilder" c:ver="SAML_11" >
-        <property name="schemaBuilder">
-            <bean class="net.shibboleth.utilities.java.support.xml.SchemaBuilder">
-                <property name="resourceResolver">
-                    <bean class="net.shibboleth.utilities.java.support.xml.ClasspathResolver" />
-                </property>
-                <property name="schemaResources">
-                    <list>
-                        <value>#{'classpath:' + T(org.opensaml.saml.common.xml.SAMLConstants).XMLSIG_SCHEMA_LOCATION }</value>
-                        <value>#{'classpath:' + T(net.shibboleth.idp.saml.xmlobject.ExtensionsConstants).SHIB_MDEXT10_SCHEMA_LOCATION }</value>
-                    </list>
-                </property>
-            </bean>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.HttpServletRequest" class="net.shibboleth.utilities.java.support.net.ThreadLocalHttpServletRequestProxy" />
-    <bean id="shibboleth.HttpServletResponse" class="net.shibboleth.utilities.java.support.net.ThreadLocalHttpServletResponseProxy" />
-
-    <bean id="shibboleth.BuilderFactory" factory-method="getBuilderFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpenSAMLConfig" />
-    <bean id="shibboleth.MarshallerFactory" factory-method="getMarshallerFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpenSAMLConfig" />
-    <bean id="shibboleth.UnmarshallerFactory" factory-method="getUnmarshallerFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpenSAMLConfig" />
-
-    <bean id="shibboleth.EndpointResolver" class="org.opensaml.saml.common.binding.impl.DefaultEndpointResolver" />
-
-    <bean id="shibboleth.CookieManager" class="net.shibboleth.utilities.java.support.net.CookieManager"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-        p:secure="%{idp.cookie.secure:false}"
-        p:httpOnly="%{idp.cookie.httpOnly:true}"
-        p:cookieDomain="%{idp.cookie.domain:}"
-        p:cookiePath="%{idp.cookie.path:}"
-        p:maxAge="-1" />
-
-    <bean id="shibboleth.PersistentCookieManager" class="net.shibboleth.utilities.java.support.net.CookieManager"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-        p:secure="%{idp.cookie.secure:false}"
-        p:httpOnly="%{idp.cookie.httpOnly:true}"
-        p:cookieDomain="%{idp.cookie.domain:}"
-        p:cookiePath="%{idp.cookie.path:}"
-        p:maxAge="%{idp.cookie.maxAge:31536000}" />
-
-    <bean id="shibboleth.UserPrefsCookieManager" class="net.shibboleth.utilities.java.support.net.CookieManager"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-        p:secure="%{idp.cookie.secure:false}"
-        p:httpOnly="false"
-        p:cookieDomain="%{idp.cookie.domain:}"
-        p:cookiePath="%{idp.cookie.path:}"
-        p:maxAge="%{idp.cookie.maxAge:31536000}" />
-
-    <bean id="shibboleth.DataSealerKeyStrategy" lazy-init="true"
-            class="net.shibboleth.utilities.java.support.security.BasicKeystoreKeyStrategy"
-        p:keystoreType="%{idp.sealer.storeType:JCEKS}"
-        p:keystoreResource="%{idp.sealer.storeResource:}"
-        p:keyVersionResource="%{idp.sealer.versionResource:}"
-        p:keystorePassword="%{idp.sealer.storePassword:}"
-        p:keyAlias="%{idp.sealer.aliasBase:secret}"
-        p:keyPassword="%{idp.sealer.keyPassword:}"
-        p:updateInterval="%{idp.sealer.updateInterval:PT15M}" />
-
-    <bean id="shibboleth.DataSealer" lazy-init="true"
-        class="net.shibboleth.utilities.java.support.security.DataSealer"
-        p:keyStrategy-ref="shibboleth.DataSealerKeyStrategy" />
-
-    <!-- This is a convenience for compatibility with the examples for configuring this in V2. -->
-    <alias name="shibboleth.DataSealer" alias="shibboleth.TransientIDDataSealer"/>
-
-    <bean id="shibboleth.StorageService" lazy-init="true"
-        class="%{idp.storage.StorageService:org.opensaml.storage.impl.MemoryStorageService}"
-        p:cleanupInterval="%{idp.storage.cleanupInterval:PT10M}" />
-
-    <bean id="shibboleth.ClientSessionStorageService" lazy-init="true"
-        class="org.opensaml.storage.impl.client.ClientStorageService"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:cookieManager-ref="shibboleth.CookieManager"
-        p:storageName="%{idp.storage.clientSessionStorageName:shib_idp_session_ss}"
-        p:dataSealer-ref="shibboleth.DataSealer" />
-
-    <bean id="shibboleth.ClientPersistentStorageService" lazy-init="true"
-        class="org.opensaml.storage.impl.client.ClientStorageService"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:cookieManager-ref="shibboleth.PersistentCookieManager"
-        p:storageName="%{idp.storage.clientPersistentStorageName:shib_idp_persistent_ss}"
-        p:dataSealer-ref="shibboleth.DataSealer"
-        p:keyStrategy-ref="shibboleth.DataSealerKeyStrategy" />
-
-    <!--
-    Default list of ClientStorageService plugins needed for injection into storage read/write flows.
-    Declared here for compatibility with pre-3.2 installs that don't declare this list inside
-    session-manager.xml
-    -->
-    <bean id="shibboleth.DefaultClientStorageServices" lazy-init="true"
-            class="org.springframework.beans.factory.config.ListFactoryBean">
-        <property name="sourceList">
-            <list>
-                <ref bean="shibboleth.ClientSessionStorageService" />
-                <ref bean="shibboleth.ClientPersistentStorageService" />
-            </list>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.ReplayCache" class="org.opensaml.storage.ReplayCache" depends-on="shibboleth.LoggingService"
-        p:storage-ref="#{'%{idp.replayCache.StorageService:shibboleth.StorageService}'.trim()}" p:strict="true" />
-
-    <bean id="shibboleth.SAMLArtifactMap" depends-on="shibboleth.StorageService"
-        class="org.opensaml.saml.common.binding.artifact.impl.StorageServiceSAMLArtifactMap"
-        p:storageService-ref="#{'%{idp.artifact.StorageService:shibboleth.StorageService}'.trim()}" />
-
-    <bean id="shibboleth.DefaultIdentifierGenerationStrategy"
-        class="net.shibboleth.utilities.java.support.security.SecureRandomIdentifierGenerationStrategy" />
-
-    <!-- Parent beans for Signature/Encryption/TLS Configuration objects. -->
-        
-    <bean id="shibboleth.BasicSignatureValidationConfiguration" abstract="true"
-        class="org.opensaml.xmlsec.impl.BasicSignatureValidationConfiguration"
-        p:whitelistedAlgorithms="#{getObject('shibboleth.SignatureWhitelist')}"
-        p:blacklistedAlgorithms="#{getObject('shibboleth.SignatureBlacklist')}" />
-    
-    <bean id="shibboleth.BasicClientTLSValidationConfiguration" abstract="true"
-        class="org.opensaml.security.x509.tls.impl.BasicClientTLSValidationConfiguration" />
-    
-    <bean id="shibboleth.BasicSignatureSigningConfiguration" abstract="true"
-        class="org.opensaml.xmlsec.impl.BasicSignatureSigningConfiguration"
-        p:whitelistedAlgorithms="#{getObject('shibboleth.SignatureWhitelist')}"
-        p:blacklistedAlgorithms="#{getObject('shibboleth.SignatureBlacklist')}" />
-    
-    <bean id="shibboleth.BasicEncryptionConfiguration" abstract="true"
-        class="org.opensaml.xmlsec.impl.BasicEncryptionConfiguration"
-        p:whitelistedAlgorithms="#{getObject('shibboleth.EncryptionWhitelist')}"
-        p:blacklistedAlgorithms="#{getObject('shibboleth.EncryptionBlacklist')}" />
-
-    <bean id="shibboleth.BasicDecryptionConfiguration" abstract="true"
-        class="org.opensaml.xmlsec.impl.BasicDecryptionConfiguration"
-        p:whitelistedAlgorithms="#{getObject('shibboleth.EncryptionWhitelist')}"
-        p:blacklistedAlgorithms="#{getObject('shibboleth.EncryptionBlacklist')}" />
-
-    <!-- Beans that implement the mashing of security configurations into final parameter sets. -->
-    
-    <bean id="shibboleth.SignatureValidationParametersResolver"
-        class="org.opensaml.xmlsec.impl.BasicSignatureValidationParametersResolver" />
-    <bean id="shibboleth.SignatureSigningParametersResolver"
-        class="org.opensaml.saml.security.impl.SAMLMetadataSignatureSigningParametersResolver" />
-    <bean id="shibboleth.DecryptionParametersResolver"
-        class="org.opensaml.xmlsec.impl.BasicDecryptionParametersResolver" />
-    <bean id="shibboleth.EncryptionParametersResolver"
-        class="org.opensaml.saml.security.impl.SAMLMetadataEncryptionParametersResolver"
-        c:resolver-ref="shibboleth.MetadataCredentialResolver" />
-    <bean id="shibboleth.ClientTLSValidationParametersResolver"
-        class="org.opensaml.security.x509.tls.impl.BasicClientTLSValidationParametersResolver" />
-
-    <!--
-    The beans below are primarily used by trust engines in relying-party-system.xml, but also in the
-    resolver for encryption parameters above.
-    -->
-
-    <bean id="shibboleth.MetadataCredentialResolver"
-        class="org.opensaml.saml.security.impl.MetadataCredentialResolver"
-         p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
-         p:keyInfoCredentialResolver-ref="shibboleth.KeyInfoCredentialResolver">
-    </bean>
-
-    <bean id="shibboleth.KeyInfoCredentialResolver"
-        class="org.opensaml.xmlsec.config.DefaultSecurityConfigurationBootstrap"
-        factory-method="buildBasicInlineKeyInfoCredentialResolver" />
-        
-    <!--  These are the common HttpClients wired to by multiple components, such as HTTPResources. -->
-
-    <bean id="shibboleth.NonCachingHttpClient"
-        lazy-init="true"
-        class="net.shibboleth.idp.profile.spring.relyingparty.metadata.HttpClientFactoryBean"
-        p:tLSSocketFactory="#{ %{idp.httpclient.useTrustEngineTLSSocketFactory:false} or %{idp.httpclient.useSecurityEnhancedTLSSocketFactory:false} ? @'shibboleth.SecurityEnhancedTLSSocketFactory' : null }"
-        p:connectionDisregardTLSCertificate="%{idp.httpclient.connectionDisregardTLSCertificate:false}"
-        p:connectionTimeout="%{idp.httpclient.connectionTimeout:60000}"
-        p:connectionRequestTimeout="%{idp.httpclient.connectionRequestTimeout:60000}"
-        p:socketTimeout="%{idp.httpclient.socketTimeout:60000}" 
-        p:maxConnectionsTotal="%{idp.httpclient.maxConnectionsTotal:100}"
-        p:maxConnectionsPerRoute="%{idp.httpclient.maxConnectionsPerRoute:100}" />
-    
-    <bean id="shibboleth.FileCachingHttpClient"
-        lazy-init="true"
-        class="net.shibboleth.idp.profile.spring.relyingparty.metadata.FileCachingHttpClientFactoryBean"
-        p:tLSSocketFactory="#{ %{idp.httpclient.useTrustEngineTLSSocketFactory:false} or %{idp.httpclient.useSecurityEnhancedTLSSocketFactory:false} ? @'shibboleth.SecurityEnhancedTLSSocketFactory' : null }"
-        p:connectionDisregardTLSCertificate="%{idp.httpclient.connectionDisregardTLSCertificate:false}"
-        p:connectionTimeout="%{idp.httpclient.connectionTimeout:60000}"
-        p:connectionRequestTimeout="%{idp.httpclient.connectionRequestTimeout:60000}"
-        p:socketTimeout="%{idp.httpclient.socketTimeout:60000}" 
-        p:maxConnectionsTotal="%{idp.httpclient.maxConnectionsTotal:100}"
-        p:maxConnectionsPerRoute="%{idp.httpclient.maxConnectionsPerRoute:100}"
-        p:cacheDirectory="%{idp.httpclient.filecaching.cacheDirectory}"
-        p:maxCacheEntries="%{idp.httpclient.filecaching.maxCacheEntries:100}"
-        p:maxCacheEntrySize="%{idp.httpclient.filecaching.maxCacheEntrySize:10485760}" />
-        
-    <bean id="shibboleth.MemoryCachingHttpClient"
-        lazy-init="true"
-        class="net.shibboleth.idp.profile.spring.relyingparty.metadata.InMemoryCachingHttpClientFactoryBean"
-        p:tLSSocketFactory="#{ %{idp.httpclient.useTrustEngineTLSSocketFactory:false} or %{idp.httpclient.useSecurityEnhancedTLSSocketFactory:false} ? @'shibboleth.SecurityEnhancedTLSSocketFactory' : null }"
-        p:connectionDisregardTLSCertificate="%{idp.httpclient.connectionDisregardTLSCertificate:false}"
-        p:connectionTimeout="%{idp.httpclient.connectionTimeout:60000}"
-        p:connectionRequestTimeout="%{idp.httpclient.connectionRequestTimeout:60000}"
-        p:socketTimeout="%{idp.httpclient.socketTimeout:60000}" 
-        p:maxConnectionsTotal="%{idp.httpclient.maxConnectionsTotal:100}"
-        p:maxConnectionsPerRoute="%{idp.httpclient.maxConnectionsPerRoute:100}"
-        p:maxCacheEntries="%{idp.httpclient.memorycaching.maxCacheEntries:50}"
-        p:maxCacheEntrySize="%{idp.httpclient.memorycaching.maxCacheEntrySize:1048576}" />
-        
-    <bean id="shibboleth.SecurityEnhancedTLSSocketFactory" name="shibboleth.TrustEngineTLSSocketFactory" 
-        lazy-init="true"
-        class="org.opensaml.security.httpclient.impl.SecurityEnhancedHttpClientSupport"
-        factory-method="buildTLSSocketFactory" />
-    
-    <bean id="shibboleth.SecurityEnhancedTLSSocketFactoryWithClientTLS"
-        lazy-init="true"
-        class="org.opensaml.security.httpclient.impl.SecurityEnhancedHttpClientSupport"
-        factory-method="buildTLSSocketFactoryWithClientTLS" />
-    
-    <bean id="shibboleth.StaticExplicitTrustEngine" abstract="true"
-        class="net.shibboleth.idp.profile.spring.factory.StaticExplicitKeyFactoryBean" />
-    
-    <bean id="shibboleth.StaticPKIXTrustEngine" abstract="true"
-        class="net.shibboleth.idp.profile.spring.factory.StaticPKIXFactoryBean" />
-    
-    <!-- Default Jackson ObjectMapper with JodaTime support. -->
-    
-    <bean id="shibboleth.JSONObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
-
-    <bean class="org.springframework.beans.factory.config.MethodInvokingBean"
-            p:targetObject-ref="shibboleth.JSONObjectMapper"
-            p:targetMethod="setSerializationInclusion">
-        <property name="arguments">
-            <util:constant static-field="com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL" />
-        </property>
-    </bean>
-    
-    <bean class="org.springframework.beans.factory.config.MethodInvokingBean"
-            p:targetObject-ref="shibboleth.JSONObjectMapper"
-            p:targetMethod="registerModule">
-        <property name="arguments">
-            <bean class="com.fasterxml.jackson.datatype.joda.JodaModule" />
-        </property>
-    </bean>
-
-    <bean class="org.springframework.beans.factory.config.MethodInvokingBean"
-            p:targetObject-ref="shibboleth.JSONObjectMapper"
-            p:targetMethod="setDateFormat">
-        <property name="arguments">
-            <bean class="java.text.SimpleDateFormat" c:_0="YYYY-MM-dd'T'HH:mm:ss.SSSZZ" />
-        </property>
-    </bean>
-    
-    <!-- Action bean templates. -->
-    
-    <bean id="shibboleth.AbstractPopulateAuditContext" abstract="true"
-        class="net.shibboleth.idp.profile.audit.impl.PopulateAuditContext" scope="prototype"
-        p:formattingMap-ref="shibboleth.AuditFormattingMap"
-        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
-        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
-        p:fieldReplacements="#{getObject('shibboleth.AuditFieldReplacementMap')}" />
-        
- </beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="shibboleth.PropertySourcesPlaceholderConfigurer"
+        class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <!-- This bean MUST be called "conversionService" to work properly. -->
+    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
+        <property name="converters">
+            <set>
+                <bean class="net.shibboleth.ext.spring.config.DurationToLongConverter" />
+                <bean class="net.shibboleth.ext.spring.config.StringToIPRangeConverter" />
+                <bean class="net.shibboleth.ext.spring.config.BooleanToPredicateConverter" />
+                <bean class="net.shibboleth.ext.spring.config.StringBooleanToPredicateConverter" />
+                <bean class="net.shibboleth.ext.spring.config.StringToResourceConverter" />
+            </set>
+        </property>
+    </bean>
+
+    <!-- This BeanPostProcessor auto-sets identifiable beans with the bean name (if not already set). -->
+    <bean id="shibboleth.IdentifiableBeanPostProcessor"
+        class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+
+    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
+            p:cacheSeconds="%{idp.message.cacheSeconds:300}"
+            p:basenames-ref="#{'%{idp.message.resources:shibboleth.MessageSourceResources}'.trim()}"
+            p:defaultEncoding="UTF-8" />
+
+    <import resource="../../conf/global.xml" />
+    <import resource="../../conf/errors.xml" />
+    <import resource="general-authn-system.xml" />
+    <import resource="session-manager-system.xml" />
+    <import resource="services-system.xml" />
+    <import resource="saml-binding-config.xml" />
+    <import resource="subject-c14n-system.xml" />
+    <import resource="profile-intercept-system.xml" />
+    <import resource="cas-protocol-system.xml" />
+    <import resource="general-admin-system.xml" />
+    <import resource="utilities.xml" />
+
+    <bean id="shibboleth.OpenSAMLConfig" class="net.shibboleth.idp.spring.OpenSAMLConfigBean"
+        depends-on="shibboleth.LoggingService,shibboleth.ParserPool,shibboleth.metrics.MetricRegistry"
+        p:parserPool-ref="shibboleth.ParserPool"
+        p:metricRegistry-ref="shibboleth.metrics.MetricRegistry" />
+
+    <bean id="shibboleth.VelocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean"
+            depends-on="shibboleth.LoggingService">
+        <property name="overrideLogging" value="false"/>
+        <property name="velocityProperties">
+            <props>
+                <prop key="runtime.log.logsystem.class">
+                    net.shibboleth.utilities.java.support.velocity.SLF4JLogChute
+                </prop>
+                <prop key="input.encoding">UTF-8</prop>
+                <prop key="output.encoding">UTF-8</prop>
+                <prop key="resource.loader">file, classpath, string</prop>
+                <prop key="classpath.resource.loader.class">
+                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
+                </prop>
+                <prop key="string.resource.loader.class">
+                    org.apache.velocity.runtime.resource.loader.StringResourceLoader
+                </prop>
+                <prop key="file.resource.loader.class">
+                    org.apache.velocity.runtime.resource.loader.FileResourceLoader
+                </prop>
+                <prop key="file.resource.loader.path">#{'%{idp.views:%{idp.home}/views}'.trim()}</prop>
+                <prop key="file.resource.loader.cache">false</prop>
+            </props>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.ParserPool" class="net.shibboleth.utilities.java.support.xml.BasicParserPool"
+            depends-on="shibboleth.LoggingService"
+            p:maxPoolSize="100"
+            p:coalescing="true"
+            p:ignoreComments="true"
+            p:ignoreElementContentWhitespace="true"
+            p:namespaceAware="true">
+        <property name="builderAttributes">
+            <map>
+                <!-- Sun/Oracle is the default, for Xerces, set property to org.apache.xerces.util.SecurityManager -->
+                <entry key="http://apache.org/xml/properties/security-manager">
+                    <bean class="%{idp.xml.securityManager:com.sun.org.apache.xerces.internal.util.SecurityManager}" />
+                </entry>
+            </map>
+        </property>
+        <property name="builderFeatures">
+            <map>
+                <entry key="http://apache.org/xml/features/disallow-doctype-decl">
+                    <util:constant static-field="java.lang.Boolean.TRUE" />
+                </entry>
+                <entry key="http://apache.org/xml/features/validation/schema/normalized-value">
+                    <util:constant static-field="java.lang.Boolean.FALSE" />
+                </entry>
+                <entry key="http://javax.xml.XMLConstants/feature/secure-processing">
+                    <util:constant static-field="java.lang.Boolean.TRUE" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+
+    <!--  Bean used by the SchemaValidation metadata filter and anything else doing basic schema validation. -->
+    <bean id="shibboleth.SchemaBuilder" lazy-init="true"
+        class="org.opensaml.saml.common.xml.SAMLSchemaBuilder" c:ver="SAML_11" >
+        <property name="schemaBuilder">
+            <bean class="net.shibboleth.utilities.java.support.xml.SchemaBuilder">
+                <property name="resourceResolver">
+                    <bean class="net.shibboleth.utilities.java.support.xml.ClasspathResolver" />
+                </property>
+                <property name="schemaResources">
+                    <list>
+                        <value>#{'classpath:' + T(org.opensaml.saml.common.xml.SAMLConstants).XMLSIG_SCHEMA_LOCATION }</value>
+                        <value>#{'classpath:' + T(net.shibboleth.idp.saml.xmlobject.ExtensionsConstants).SHIB_MDEXT10_SCHEMA_LOCATION }</value>
+                    </list>
+                </property>
+            </bean>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.HttpServletRequest" class="net.shibboleth.utilities.java.support.net.ThreadLocalHttpServletRequestProxy" />
+    <bean id="shibboleth.HttpServletResponse" class="net.shibboleth.utilities.java.support.net.ThreadLocalHttpServletResponseProxy" />
+
+    <bean id="shibboleth.BuilderFactory" factory-method="getBuilderFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpenSAMLConfig" />
+    <bean id="shibboleth.MarshallerFactory" factory-method="getMarshallerFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpenSAMLConfig" />
+    <bean id="shibboleth.UnmarshallerFactory" factory-method="getUnmarshallerFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpenSAMLConfig" />
+
+    <bean id="shibboleth.EndpointResolver" class="org.opensaml.saml.common.binding.impl.DefaultEndpointResolver" />
+
+    <bean id="shibboleth.CookieManager" class="net.shibboleth.utilities.java.support.net.CookieManager"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+        p:secure="%{idp.cookie.secure:false}"
+        p:httpOnly="%{idp.cookie.httpOnly:true}"
+        p:cookieDomain="%{idp.cookie.domain:}"
+        p:cookiePath="%{idp.cookie.path:}"
+        p:maxAge="-1" />
+
+    <bean id="shibboleth.PersistentCookieManager" class="net.shibboleth.utilities.java.support.net.CookieManager"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+        p:secure="%{idp.cookie.secure:false}"
+        p:httpOnly="%{idp.cookie.httpOnly:true}"
+        p:cookieDomain="%{idp.cookie.domain:}"
+        p:cookiePath="%{idp.cookie.path:}"
+        p:maxAge="%{idp.cookie.maxAge:31536000}" />
+
+    <bean id="shibboleth.UserPrefsCookieManager" class="net.shibboleth.utilities.java.support.net.CookieManager"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+        p:secure="%{idp.cookie.secure:false}"
+        p:httpOnly="false"
+        p:cookieDomain="%{idp.cookie.domain:}"
+        p:cookiePath="%{idp.cookie.path:}"
+        p:maxAge="%{idp.cookie.maxAge:31536000}" />
+
+    <bean id="shibboleth.DataSealerKeyStrategy" lazy-init="true"
+            class="net.shibboleth.utilities.java.support.security.BasicKeystoreKeyStrategy"
+        p:keystoreType="%{idp.sealer.storeType:JCEKS}"
+        p:keystoreResource="%{idp.sealer.storeResource:}"
+        p:keyVersionResource="%{idp.sealer.versionResource:}"
+        p:keystorePassword="%{idp.sealer.storePassword:}"
+        p:keyAlias="%{idp.sealer.aliasBase:secret}"
+        p:keyPassword="%{idp.sealer.keyPassword:}"
+        p:updateInterval="%{idp.sealer.updateInterval:PT15M}" />
+
+    <bean id="shibboleth.DataSealer" lazy-init="true"
+        class="net.shibboleth.utilities.java.support.security.DataSealer"
+        p:keyStrategy-ref="shibboleth.DataSealerKeyStrategy" />
+
+    <!-- This is a convenience for compatibility with the examples for configuring this in V2. -->
+    <alias name="shibboleth.DataSealer" alias="shibboleth.TransientIDDataSealer"/>
+
+    <bean id="shibboleth.StorageService" lazy-init="true"
+        class="%{idp.storage.StorageService:org.opensaml.storage.impl.MemoryStorageService}"
+        p:cleanupInterval="%{idp.storage.cleanupInterval:PT10M}" />
+
+    <bean id="shibboleth.ClientSessionStorageService" lazy-init="true"
+        class="org.opensaml.storage.impl.client.ClientStorageService"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:cookieManager-ref="shibboleth.CookieManager"
+        p:storageName="%{idp.storage.clientSessionStorageName:shib_idp_session_ss}"
+        p:dataSealer-ref="shibboleth.DataSealer" />
+
+    <bean id="shibboleth.ClientPersistentStorageService" lazy-init="true"
+        class="org.opensaml.storage.impl.client.ClientStorageService"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:cookieManager-ref="shibboleth.PersistentCookieManager"
+        p:storageName="%{idp.storage.clientPersistentStorageName:shib_idp_persistent_ss}"
+        p:dataSealer-ref="shibboleth.DataSealer"
+        p:keyStrategy-ref="shibboleth.DataSealerKeyStrategy" />
+
+    <!--
+    Default list of ClientStorageService plugins needed for injection into storage read/write flows.
+    Declared here for compatibility with pre-3.2 installs that don't declare this list inside
+    session-manager.xml
+    -->
+    <bean id="shibboleth.DefaultClientStorageServices" lazy-init="true"
+            class="org.springframework.beans.factory.config.ListFactoryBean">
+        <property name="sourceList">
+            <list>
+                <ref bean="shibboleth.ClientSessionStorageService" />
+                <ref bean="shibboleth.ClientPersistentStorageService" />
+            </list>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.ReplayCache" class="org.opensaml.storage.ReplayCache" depends-on="shibboleth.LoggingService"
+        p:storage-ref="#{'%{idp.replayCache.StorageService:shibboleth.StorageService}'.trim()}" p:strict="true" />
+
+    <bean id="shibboleth.SAMLArtifactMap" depends-on="shibboleth.StorageService"
+        class="org.opensaml.saml.common.binding.artifact.impl.StorageServiceSAMLArtifactMap"
+        p:storageService-ref="#{'%{idp.artifact.StorageService:shibboleth.StorageService}'.trim()}" />
+
+    <bean id="shibboleth.DefaultIdentifierGenerationStrategy"
+        class="net.shibboleth.utilities.java.support.security.SecureRandomIdentifierGenerationStrategy" />
+
+    <!-- Parent beans for Signature/Encryption/TLS Configuration objects. -->
+        
+    <bean id="shibboleth.BasicSignatureValidationConfiguration" abstract="true"
+        class="org.opensaml.xmlsec.impl.BasicSignatureValidationConfiguration"
+        p:whitelistedAlgorithms="#{getObject('shibboleth.SignatureWhitelist')}"
+        p:blacklistedAlgorithms="#{getObject('shibboleth.SignatureBlacklist')}" />
+    
+    <bean id="shibboleth.BasicClientTLSValidationConfiguration" abstract="true"
+        class="org.opensaml.security.x509.tls.impl.BasicClientTLSValidationConfiguration" />
+    
+    <bean id="shibboleth.BasicSignatureSigningConfiguration" abstract="true"
+        class="org.opensaml.xmlsec.impl.BasicSignatureSigningConfiguration"
+        p:whitelistedAlgorithms="#{getObject('shibboleth.SignatureWhitelist')}"
+        p:blacklistedAlgorithms="#{getObject('shibboleth.SignatureBlacklist')}" />
+    
+    <bean id="shibboleth.BasicEncryptionConfiguration" abstract="true"
+        class="org.opensaml.xmlsec.impl.BasicEncryptionConfiguration"
+        p:whitelistedAlgorithms="#{getObject('shibboleth.EncryptionWhitelist')}"
+        p:blacklistedAlgorithms="#{getObject('shibboleth.EncryptionBlacklist')}" />
+
+    <bean id="shibboleth.BasicDecryptionConfiguration" abstract="true"
+        class="org.opensaml.xmlsec.impl.BasicDecryptionConfiguration"
+        p:whitelistedAlgorithms="#{getObject('shibboleth.EncryptionWhitelist')}"
+        p:blacklistedAlgorithms="#{getObject('shibboleth.EncryptionBlacklist')}" />
+
+    <!-- Beans that implement the mashing of security configurations into final parameter sets. -->
+    
+    <bean id="shibboleth.SignatureValidationParametersResolver"
+        class="org.opensaml.xmlsec.impl.BasicSignatureValidationParametersResolver" />
+    <bean id="shibboleth.SignatureSigningParametersResolver"
+        class="org.opensaml.saml.security.impl.SAMLMetadataSignatureSigningParametersResolver" />
+    <bean id="shibboleth.DecryptionParametersResolver"
+        class="org.opensaml.xmlsec.impl.BasicDecryptionParametersResolver" />
+    <bean id="shibboleth.EncryptionParametersResolver"
+        class="org.opensaml.saml.security.impl.SAMLMetadataEncryptionParametersResolver"
+        c:resolver-ref="shibboleth.MetadataCredentialResolver" />
+    <bean id="shibboleth.ClientTLSValidationParametersResolver"
+        class="org.opensaml.security.x509.tls.impl.BasicClientTLSValidationParametersResolver" />
+
+    <!--
+    The beans below are primarily used by trust engines in relying-party-system.xml, but also in the
+    resolver for encryption parameters above.
+    -->
+
+    <bean id="shibboleth.MetadataCredentialResolver"
+        class="org.opensaml.saml.security.impl.MetadataCredentialResolver"
+         p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
+         p:keyInfoCredentialResolver-ref="shibboleth.KeyInfoCredentialResolver">
+    </bean>
+
+    <bean id="shibboleth.KeyInfoCredentialResolver"
+        class="org.opensaml.xmlsec.config.DefaultSecurityConfigurationBootstrap"
+        factory-method="buildBasicInlineKeyInfoCredentialResolver" />
+        
+    <!--  These are the common HttpClients wired to by multiple components, such as HTTPResources. -->
+
+    <bean id="shibboleth.NonCachingHttpClient"
+        lazy-init="true"
+        class="net.shibboleth.idp.profile.spring.relyingparty.metadata.HttpClientFactoryBean"
+        p:tLSSocketFactory="#{ %{idp.httpclient.useTrustEngineTLSSocketFactory:false} or %{idp.httpclient.useSecurityEnhancedTLSSocketFactory:false} ? @'shibboleth.SecurityEnhancedTLSSocketFactory' : null }"
+        p:connectionDisregardTLSCertificate="%{idp.httpclient.connectionDisregardTLSCertificate:false}"
+        p:connectionTimeout="%{idp.httpclient.connectionTimeout:60000}"
+        p:connectionRequestTimeout="%{idp.httpclient.connectionRequestTimeout:60000}"
+        p:socketTimeout="%{idp.httpclient.socketTimeout:60000}" 
+        p:maxConnectionsTotal="%{idp.httpclient.maxConnectionsTotal:100}"
+        p:maxConnectionsPerRoute="%{idp.httpclient.maxConnectionsPerRoute:100}" />
+    
+    <bean id="shibboleth.FileCachingHttpClient"
+        lazy-init="true"
+        class="net.shibboleth.idp.profile.spring.relyingparty.metadata.FileCachingHttpClientFactoryBean"
+        p:tLSSocketFactory="#{ %{idp.httpclient.useTrustEngineTLSSocketFactory:false} or %{idp.httpclient.useSecurityEnhancedTLSSocketFactory:false} ? @'shibboleth.SecurityEnhancedTLSSocketFactory' : null }"
+        p:connectionDisregardTLSCertificate="%{idp.httpclient.connectionDisregardTLSCertificate:false}"
+        p:connectionTimeout="%{idp.httpclient.connectionTimeout:60000}"
+        p:connectionRequestTimeout="%{idp.httpclient.connectionRequestTimeout:60000}"
+        p:socketTimeout="%{idp.httpclient.socketTimeout:60000}" 
+        p:maxConnectionsTotal="%{idp.httpclient.maxConnectionsTotal:100}"
+        p:maxConnectionsPerRoute="%{idp.httpclient.maxConnectionsPerRoute:100}"
+        p:cacheDirectory="%{idp.httpclient.filecaching.cacheDirectory}"
+        p:maxCacheEntries="%{idp.httpclient.filecaching.maxCacheEntries:100}"
+        p:maxCacheEntrySize="%{idp.httpclient.filecaching.maxCacheEntrySize:10485760}" />
+        
+    <bean id="shibboleth.MemoryCachingHttpClient"
+        lazy-init="true"
+        class="net.shibboleth.idp.profile.spring.relyingparty.metadata.InMemoryCachingHttpClientFactoryBean"
+        p:tLSSocketFactory="#{ %{idp.httpclient.useTrustEngineTLSSocketFactory:false} or %{idp.httpclient.useSecurityEnhancedTLSSocketFactory:false} ? @'shibboleth.SecurityEnhancedTLSSocketFactory' : null }"
+        p:connectionDisregardTLSCertificate="%{idp.httpclient.connectionDisregardTLSCertificate:false}"
+        p:connectionTimeout="%{idp.httpclient.connectionTimeout:60000}"
+        p:connectionRequestTimeout="%{idp.httpclient.connectionRequestTimeout:60000}"
+        p:socketTimeout="%{idp.httpclient.socketTimeout:60000}" 
+        p:maxConnectionsTotal="%{idp.httpclient.maxConnectionsTotal:100}"
+        p:maxConnectionsPerRoute="%{idp.httpclient.maxConnectionsPerRoute:100}"
+        p:maxCacheEntries="%{idp.httpclient.memorycaching.maxCacheEntries:50}"
+        p:maxCacheEntrySize="%{idp.httpclient.memorycaching.maxCacheEntrySize:1048576}" />
+        
+    <bean id="shibboleth.SecurityEnhancedTLSSocketFactory" name="shibboleth.TrustEngineTLSSocketFactory" 
+        lazy-init="true"
+        class="org.opensaml.security.httpclient.impl.SecurityEnhancedHttpClientSupport"
+        factory-method="buildTLSSocketFactory" />
+    
+    <bean id="shibboleth.SecurityEnhancedTLSSocketFactoryWithClientTLS"
+        lazy-init="true"
+        class="org.opensaml.security.httpclient.impl.SecurityEnhancedHttpClientSupport"
+        factory-method="buildTLSSocketFactoryWithClientTLS" />
+    
+    <bean id="shibboleth.StaticExplicitTrustEngine" abstract="true"
+        class="net.shibboleth.idp.profile.spring.factory.StaticExplicitKeyFactoryBean" />
+    
+    <bean id="shibboleth.StaticPKIXTrustEngine" abstract="true"
+        class="net.shibboleth.idp.profile.spring.factory.StaticPKIXFactoryBean" />
+    
+    <!-- Default Jackson ObjectMapper with JodaTime support. -->
+    
+    <bean id="shibboleth.JSONObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
+
+    <bean class="org.springframework.beans.factory.config.MethodInvokingBean"
+            p:targetObject-ref="shibboleth.JSONObjectMapper"
+            p:targetMethod="setSerializationInclusion">
+        <property name="arguments">
+            <util:constant static-field="com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL" />
+        </property>
+    </bean>
+    
+    <bean class="org.springframework.beans.factory.config.MethodInvokingBean"
+            p:targetObject-ref="shibboleth.JSONObjectMapper"
+            p:targetMethod="registerModule">
+        <property name="arguments">
+            <bean class="com.fasterxml.jackson.datatype.joda.JodaModule" />
+        </property>
+    </bean>
+
+    <bean class="org.springframework.beans.factory.config.MethodInvokingBean"
+            p:targetObject-ref="shibboleth.JSONObjectMapper"
+            p:targetMethod="setDateFormat">
+        <property name="arguments">
+            <bean class="java.text.SimpleDateFormat" c:_0="YYYY-MM-dd'T'HH:mm:ss.SSSZZ" />
+        </property>
+    </bean>
+    
+    <!-- Action bean templates. -->
+    
+    <bean id="shibboleth.AbstractPopulateAuditContext" abstract="true"
+        class="net.shibboleth.idp.profile.audit.impl.PopulateAuditContext" scope="prototype"
+        p:formattingMap-ref="shibboleth.AuditFormattingMap"
+        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
+        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
+        p:fieldReplacements="#{getObject('shibboleth.AuditFieldReplacementMap')}" />
+        
+ </beans>
diff -rupN shibboleth-idp/system/conf/legacy-relying-party-defaults.xml shibboleth-idp/system/conf/legacy-relying-party-defaults.xml
--- shibboleth-idp/system/conf/legacy-relying-party-defaults.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/legacy-relying-party-defaults.xml	2019-07-01 13:03:37.433961740 -0400
@@ -1,101 +1,101 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
-	   xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
-	   xmlns:context="http://www.springframework.org/schema/context"
-	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-        default-init-method="initialize"
-        default-destroy-method="destroy">
-	
-    <!--  SAML2 -->
-    <alias alias="shibboleth.SAML2.Artifact.ServletRequest" name="shibboleth.HttpServletRequest" />
-    <bean id="shibboleth.SAML2.Artifact.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/saml-soap" />
-        
-    <alias alias="shibboleth.SAML2.Logout.ServletRequest" name="shibboleth.HttpServletRequest" />
-    <bean id="shibboleth.SAML2.Logout.ArtifactServiceIndex" class="java.lang.String"
-        c:_0="%{idp.artifact.endpointIndex:2}" />
-    <bean id="shibboleth.SAML2.Logout.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/saml2-slo" />
-
-    <alias alias="shibboleth.SAML2.AttributeQuery.ServletRequest" name="shibboleth.HttpServletRequest" />
-    <bean id="shibboleth.SAML2.AttributeQuery.ArtifactServiceIndex" class="java.lang.String"
-        c:_0="%{idp.artifact.endpointIndex:2}" />
-    <bean id="shibboleth.SAML2.AttributeQuery.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/saml-soap" />
-
-    <alias alias="shibboleth.SAML2.BrowserSSO.ServletRequest" name="shibboleth.HttpServletRequest" />
-    <bean id="shibboleth.SAML2.BrowserSSO.ArtifactServiceIndex" class="java.lang.String"
-        c:_0="%{idp.artifact.endpointIndex:2}" />
-    <bean id="shibboleth.SAML2.BrowserSSO.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/saml2-sso" />
-
-    <alias alias="shibboleth.SAML2.ECP.ServletRequest" name="shibboleth.HttpServletRequest" />        
-    <bean id="shibboleth.SAML2.ECP.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/saml2-ecp" />
-
-    <!--  SAML2 - Liberty -->
-    <alias alias="shibboleth.SAML2.SSOS.ServletRequest" name="shibboleth.HttpServletRequest" />
-    <bean id="shibboleth.SAML2.SSOS.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/saml2-ssos" />
-
-    <!--  SAML1 -->
-    <alias alias="shibboleth.SAML1.Artifact.ServletRequest" name="shibboleth.HttpServletRequest" />
-    <bean id="shibboleth.SAML1.Artifact.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/saml-soap" />
-    
-    <alias alias="shibboleth.SAML1.AttributeQuery.ServletRequest" name="shibboleth.HttpServletRequest" />
-    <bean id="shibboleth.SAML1.AttributeQuery.ArtifactServiceIndex" class="java.lang.String"
-        c:_0="%{idp.artifact.endpointIndex:2}" />
-    <bean id="shibboleth.SAML1.AttributeQuery.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/saml-soap" />
-    
-    <alias alias="shibboleth.SAML1.BrowserSSO.ServletRequest" name="shibboleth.HttpServletRequest" />
-    <bean id="shibboleth.SAML1.BrowserSSO.ArtifactServiceIndex" class="java.lang.String"
-        c:_0="%{idp.artifact.endpointIndex:2}" />
-    <bean id="shibboleth.SAML1.BrowserSSO.InboundFlowId" class="java.lang.String"
-        c:_0="security-policy/shibboleth-sso" />
-
-    <bean id="shibboleth.MetadataPKIXValidationInformationResolver"
-        class="net.shibboleth.idp.saml.security.impl.MetadataPKIXValidationInformationResolver"
-        c:resolver-ref="shibboleth.RoleDescriptorResolver" />
-
-    <!-- Trust Engines -->
-
-    <bean id="shibboleth.SignatureTrustEngine"
-            class="org.opensaml.xmlsec.signature.support.impl.ChainingSignatureTrustEngine">
-        <constructor-arg>
-            <list>
-                <bean class="org.opensaml.xmlsec.signature.support.impl.ExplicitKeySignatureTrustEngine"
-                    c:resolver-ref="shibboleth.MetadataCredentialResolver"
-                    c:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
-                <bean class="org.opensaml.xmlsec.signature.support.impl.PKIXSignatureTrustEngine" 
-                    c:resolver-ref="shibboleth.MetadataPKIXValidationInformationResolver"
-                    c:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
-            </list>
-        </constructor-arg>
-    </bean>
-
-    <bean id="shibboleth.X509TrustEngine" class="org.opensaml.security.trust.impl.ChainingTrustEngine">
-        <constructor-arg>
-            <list>
-                <bean class="org.opensaml.security.trust.impl.ExplicitKeyTrustEngine"
-                    c:resolver-ref="shibboleth.MetadataCredentialResolver" />
-                <bean class="org.opensaml.security.x509.impl.PKIXX509CredentialTrustEngine"
-                    c:resolver-ref="shibboleth.MetadataPKIXValidationInformationResolver" />
-            </list>
-        </constructor-arg>
-    </bean>
-    
-    <!--
-    This bean isn't used, but is required in order to allow SignatureValidationFilters in a legacy
-    config to be parsed (and then ignored).
-    -->
-    
-    <bean id="shibboleth.MetadataSignatureValidationStaticCriteria" 
-        class="net.shibboleth.idp.profile.spring.relyingparty.metadata.filter.impl.SignatureValidationCriteriaSetFactoryBean" />
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
+	   xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
+	   xmlns:context="http://www.springframework.org/schema/context"
+	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+        default-init-method="initialize"
+        default-destroy-method="destroy">
+	
+    <!--  SAML2 -->
+    <alias alias="shibboleth.SAML2.Artifact.ServletRequest" name="shibboleth.HttpServletRequest" />
+    <bean id="shibboleth.SAML2.Artifact.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/saml-soap" />
+        
+    <alias alias="shibboleth.SAML2.Logout.ServletRequest" name="shibboleth.HttpServletRequest" />
+    <bean id="shibboleth.SAML2.Logout.ArtifactServiceIndex" class="java.lang.String"
+        c:_0="%{idp.artifact.endpointIndex:2}" />
+    <bean id="shibboleth.SAML2.Logout.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/saml2-slo" />
+
+    <alias alias="shibboleth.SAML2.AttributeQuery.ServletRequest" name="shibboleth.HttpServletRequest" />
+    <bean id="shibboleth.SAML2.AttributeQuery.ArtifactServiceIndex" class="java.lang.String"
+        c:_0="%{idp.artifact.endpointIndex:2}" />
+    <bean id="shibboleth.SAML2.AttributeQuery.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/saml-soap" />
+
+    <alias alias="shibboleth.SAML2.BrowserSSO.ServletRequest" name="shibboleth.HttpServletRequest" />
+    <bean id="shibboleth.SAML2.BrowserSSO.ArtifactServiceIndex" class="java.lang.String"
+        c:_0="%{idp.artifact.endpointIndex:2}" />
+    <bean id="shibboleth.SAML2.BrowserSSO.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/saml2-sso" />
+
+    <alias alias="shibboleth.SAML2.ECP.ServletRequest" name="shibboleth.HttpServletRequest" />        
+    <bean id="shibboleth.SAML2.ECP.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/saml2-ecp" />
+
+    <!--  SAML2 - Liberty -->
+    <alias alias="shibboleth.SAML2.SSOS.ServletRequest" name="shibboleth.HttpServletRequest" />
+    <bean id="shibboleth.SAML2.SSOS.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/saml2-ssos" />
+
+    <!--  SAML1 -->
+    <alias alias="shibboleth.SAML1.Artifact.ServletRequest" name="shibboleth.HttpServletRequest" />
+    <bean id="shibboleth.SAML1.Artifact.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/saml-soap" />
+    
+    <alias alias="shibboleth.SAML1.AttributeQuery.ServletRequest" name="shibboleth.HttpServletRequest" />
+    <bean id="shibboleth.SAML1.AttributeQuery.ArtifactServiceIndex" class="java.lang.String"
+        c:_0="%{idp.artifact.endpointIndex:2}" />
+    <bean id="shibboleth.SAML1.AttributeQuery.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/saml-soap" />
+    
+    <alias alias="shibboleth.SAML1.BrowserSSO.ServletRequest" name="shibboleth.HttpServletRequest" />
+    <bean id="shibboleth.SAML1.BrowserSSO.ArtifactServiceIndex" class="java.lang.String"
+        c:_0="%{idp.artifact.endpointIndex:2}" />
+    <bean id="shibboleth.SAML1.BrowserSSO.InboundFlowId" class="java.lang.String"
+        c:_0="security-policy/shibboleth-sso" />
+
+    <bean id="shibboleth.MetadataPKIXValidationInformationResolver"
+        class="net.shibboleth.idp.saml.security.impl.MetadataPKIXValidationInformationResolver"
+        c:resolver-ref="shibboleth.RoleDescriptorResolver" />
+
+    <!-- Trust Engines -->
+
+    <bean id="shibboleth.SignatureTrustEngine"
+            class="org.opensaml.xmlsec.signature.support.impl.ChainingSignatureTrustEngine">
+        <constructor-arg>
+            <list>
+                <bean class="org.opensaml.xmlsec.signature.support.impl.ExplicitKeySignatureTrustEngine"
+                    c:resolver-ref="shibboleth.MetadataCredentialResolver"
+                    c:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
+                <bean class="org.opensaml.xmlsec.signature.support.impl.PKIXSignatureTrustEngine" 
+                    c:resolver-ref="shibboleth.MetadataPKIXValidationInformationResolver"
+                    c:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
+            </list>
+        </constructor-arg>
+    </bean>
+
+    <bean id="shibboleth.X509TrustEngine" class="org.opensaml.security.trust.impl.ChainingTrustEngine">
+        <constructor-arg>
+            <list>
+                <bean class="org.opensaml.security.trust.impl.ExplicitKeyTrustEngine"
+                    c:resolver-ref="shibboleth.MetadataCredentialResolver" />
+                <bean class="org.opensaml.security.x509.impl.PKIXX509CredentialTrustEngine"
+                    c:resolver-ref="shibboleth.MetadataPKIXValidationInformationResolver" />
+            </list>
+        </constructor-arg>
+    </bean>
+    
+    <!--
+    This bean isn't used, but is required in order to allow SignatureValidationFilters in a legacy
+    config to be parsed (and then ignored).
+    -->
+    
+    <bean id="shibboleth.MetadataSignatureValidationStaticCriteria" 
+        class="net.shibboleth.idp.profile.spring.relyingparty.metadata.filter.impl.SignatureValidationCriteriaSetFactoryBean" />
+    
+</beans>
diff -rupN shibboleth-idp/system/conf/metadata-providers-system.xml shibboleth-idp/system/conf/metadata-providers-system.xml
--- shibboleth-idp/system/conf/metadata-providers-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/metadata-providers-system.xml	2019-07-01 13:03:37.433961740 -0400
@@ -1,34 +1,34 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <!-- Beans internal to metadata configuration but not for user manipulation. -->
-    
-    <!-- Signature Validation Criteria  -->
-    
-    <bean id="shibboleth.MetadataSignatureValidationStaticCriteria" 
-            class="net.shibboleth.idp.profile.spring.relyingparty.metadata.filter.impl.SignatureValidationCriteriaSetFactoryBean" 
-            p:includeOpenSAMLGlobalConfig="true"
-            p:otherCriteria="#{getObject('shibboleth.MetadataSignatureValidationOtherCriteria')}"
-            p:signatureValidationParametersResolver="#{getObject('shibboleth.MetadataSignatureValidationParametersResolver')}">
-        <property name="signatureValidationConfigurations">
-            <list>
-                <bean parent="shibboleth.BasicSignatureValidationConfiguration" 
-                    p:whitelistedAlgorithms="#{getObject('shibboleth.SignatureWhitelist')}"
-                    p:blacklistedAlgorithms="#{getObject('shibboleth.SignatureBlacklist')}" >
-                </bean>
-            </list>
-        </property>
-    </bean>
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <!-- Beans internal to metadata configuration but not for user manipulation. -->
+    
+    <!-- Signature Validation Criteria  -->
+    
+    <bean id="shibboleth.MetadataSignatureValidationStaticCriteria" 
+            class="net.shibboleth.idp.profile.spring.relyingparty.metadata.filter.impl.SignatureValidationCriteriaSetFactoryBean" 
+            p:includeOpenSAMLGlobalConfig="true"
+            p:otherCriteria="#{getObject('shibboleth.MetadataSignatureValidationOtherCriteria')}"
+            p:signatureValidationParametersResolver="#{getObject('shibboleth.MetadataSignatureValidationParametersResolver')}">
+        <property name="signatureValidationConfigurations">
+            <list>
+                <bean parent="shibboleth.BasicSignatureValidationConfiguration" 
+                    p:whitelistedAlgorithms="#{getObject('shibboleth.SignatureWhitelist')}"
+                    p:blacklistedAlgorithms="#{getObject('shibboleth.SignatureBlacklist')}" >
+                </bean>
+            </list>
+        </property>
+    </bean>
+    
+</beans>
diff -rupN shibboleth-idp/system/conf/mvc-beans.xml shibboleth-idp/system/conf/mvc-beans.xml
--- shibboleth-idp/system/conf/mvc-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/mvc-beans.xml	2019-07-01 13:03:37.433961740 -0400
@@ -1,116 +1,116 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:mvc="http://www.springframework.org/schema/mvc"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
-
-    <!-- HandlerMappings: Prefer first the WebFlow one, then the standard Spring MVC default ones.
-         Have to enumerate them all explicitly b/c we're overriding the built-in defaults. -->
-    
-    <bean id="shibboleth.DefaultRESTFlows" class="org.springframework.beans.factory.config.ListFactoryBean">
-        <property name="sourceList">
-            <list>
-                <value>admin/metrics</value>
-                <value>admin/storage</value>
-            </list>
-        </property>
-    </bean>
-    
-    <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping" p:order="0"
-            p:flowRegistry-ref="flowRegistry">
-        <property name="flowUrlHandler">
-            <bean class="net.shibboleth.idp.profile.support.PathInfoSupportingFlowUrlHandler"
-                p:supportedFlows="#{getObject('shibboleth.RESTFlows') ?: getObject('shibboleth.DefaultRESTFlows')}" />
-        </property>
-    </bean>
-
-    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" p:order="1" />
-
-    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" p:order="2" />
-
-    <!-- Add this one to mount any additional MVC controllers we create. -->
-
-    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" p:order="3">
-        <property name="mappings">
-            <props>
-                <prop key="%{idp.authn.spnego.externalAuthnPath:/Authn/SPNEGO}/**">shibboleth.SPNEGOAuthnController</prop>
-                <prop key="/RaiseError">shibboleth.RaiseErrorController</prop>
-            </props>
-        </property>
-    </bean>
-
-    <!-- HandlerAdapters: These aren't ordered. Add our WebFlow one, then the standard Spring MVC default ones. 
-         Have to enumerate them all explicitly b/c we're overriding the built-in defaults. -->
-    
-    <bean class="net.shibboleth.idp.profile.support.RethrowingFlowHandlerAdapter"
-            p:flowExecutor-ref="flowExecutor">
-        <property name="supportedMethods">
-            <null/>
-        </property>
-    </bean>
-    
-    <bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />
-    
-    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
-    
-    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
-    
-    <!-- Additional MVC controllers -->
-    
-    <bean id="shibboleth.SPNEGOAuthnController" class="net.shibboleth.idp.authn.spnego.impl.SPNEGOAuthnController" />
-    <bean id="shibboleth.RaiseErrorController" class="net.shibboleth.ext.spring.error.ErrorRaisingController" />
-
-    <!-- Exception handling -->
-    
-    <bean id="shibboleth.ExceptionResolver" class="net.shibboleth.ext.spring.error.ExtendedMappingExceptionResolver"
-        p:defaultErrorView="%{idp.errors.defaultView:error}"
-        p:excludedExceptions="#{getObject('%{idp.errors.excludedExceptions:undefined}')}"
-        p:exceptionMappings="#{getObject('%{idp.errors.exceptionMappings:undefined}')}" />
-    
-    <bean id="RethrowingFlowExecutionExceptionHandler"
-        class="net.shibboleth.idp.profile.impl.RethrowingFlowExecutionExceptionHandler" />
-            
-    <!-- ViewResolvers -->
-    
-    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
-        <property name="order" value="1" />
-    </bean>
-            
-    <bean id="shibboleth.VelocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
-        <property name="order" value="2" />
-        <property name="cache" value="true"/>
-        <property name="prefix" value=""/>
-        <property name="suffix" value=".vm"/>
-        <property name="contentType" value="text/html;charset=utf-8" />
-    </bean>
-
-    <bean id="shibboleth.InternalViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
-        <property name="order" value="3" />
-        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
-        <property name="prefix" value="/WEB-INF/jsp/"/>
-        <property name="suffix" value=".jsp"/>
-        <property name="contentType" value="text/html;charset=utf-8" />
-    </bean>
-
-    <bean class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
-        <property name="resourceLoaderPath" value="#{'%{idp.views:%{idp.home}/views}'.trim()},%{idp.home}/system/views" />
-        <property name="velocityProperties">
-            <props>
-                <prop key="runtime.log.logsystem.class">net.shibboleth.utilities.java.support.velocity.SLF4JLogChute</prop>
-                <prop key="input.encoding">UTF-8</prop>
-                <prop key="output.encoding">UTF-8</prop>
-            </props>
-        </property>
-    </bean>
-
-    <!-- Import any user defined beans or overrides for the MVC config. -->
-    <import resource="../../conf/mvc-beans.xml" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:mvc="http://www.springframework.org/schema/mvc"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
+
+    <!-- HandlerMappings: Prefer first the WebFlow one, then the standard Spring MVC default ones.
+         Have to enumerate them all explicitly b/c we're overriding the built-in defaults. -->
+    
+    <bean id="shibboleth.DefaultRESTFlows" class="org.springframework.beans.factory.config.ListFactoryBean">
+        <property name="sourceList">
+            <list>
+                <value>admin/metrics</value>
+                <value>admin/storage</value>
+            </list>
+        </property>
+    </bean>
+    
+    <bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping" p:order="0"
+            p:flowRegistry-ref="flowRegistry">
+        <property name="flowUrlHandler">
+            <bean class="net.shibboleth.idp.profile.support.PathInfoSupportingFlowUrlHandler"
+                p:supportedFlows="#{getObject('shibboleth.RESTFlows') ?: getObject('shibboleth.DefaultRESTFlows')}" />
+        </property>
+    </bean>
+
+    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" p:order="1" />
+
+    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" p:order="2" />
+
+    <!-- Add this one to mount any additional MVC controllers we create. -->
+
+    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" p:order="3">
+        <property name="mappings">
+            <props>
+                <prop key="%{idp.authn.spnego.externalAuthnPath:/Authn/SPNEGO}/**">shibboleth.SPNEGOAuthnController</prop>
+                <prop key="/RaiseError">shibboleth.RaiseErrorController</prop>
+            </props>
+        </property>
+    </bean>
+
+    <!-- HandlerAdapters: These aren't ordered. Add our WebFlow one, then the standard Spring MVC default ones. 
+         Have to enumerate them all explicitly b/c we're overriding the built-in defaults. -->
+    
+    <bean class="net.shibboleth.idp.profile.support.RethrowingFlowHandlerAdapter"
+            p:flowExecutor-ref="flowExecutor">
+        <property name="supportedMethods">
+            <null/>
+        </property>
+    </bean>
+    
+    <bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />
+    
+    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
+    
+    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
+    
+    <!-- Additional MVC controllers -->
+    
+    <bean id="shibboleth.SPNEGOAuthnController" class="net.shibboleth.idp.authn.spnego.impl.SPNEGOAuthnController" />
+    <bean id="shibboleth.RaiseErrorController" class="net.shibboleth.ext.spring.error.ErrorRaisingController" />
+
+    <!-- Exception handling -->
+    
+    <bean id="shibboleth.ExceptionResolver" class="net.shibboleth.ext.spring.error.ExtendedMappingExceptionResolver"
+        p:defaultErrorView="%{idp.errors.defaultView:error}"
+        p:excludedExceptions="#{getObject('%{idp.errors.excludedExceptions:undefined}')}"
+        p:exceptionMappings="#{getObject('%{idp.errors.exceptionMappings:undefined}')}" />
+    
+    <bean id="RethrowingFlowExecutionExceptionHandler"
+        class="net.shibboleth.idp.profile.impl.RethrowingFlowExecutionExceptionHandler" />
+            
+    <!-- ViewResolvers -->
+    
+    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
+        <property name="order" value="1" />
+    </bean>
+            
+    <bean id="shibboleth.VelocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
+        <property name="order" value="2" />
+        <property name="cache" value="true"/>
+        <property name="prefix" value=""/>
+        <property name="suffix" value=".vm"/>
+        <property name="contentType" value="text/html;charset=utf-8" />
+    </bean>
+
+    <bean id="shibboleth.InternalViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
+        <property name="order" value="3" />
+        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
+        <property name="prefix" value="/WEB-INF/jsp/"/>
+        <property name="suffix" value=".jsp"/>
+        <property name="contentType" value="text/html;charset=utf-8" />
+    </bean>
+
+    <bean class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
+        <property name="resourceLoaderPath" value="#{'%{idp.views:%{idp.home}/views}'.trim()},%{idp.home}/system/views" />
+        <property name="velocityProperties">
+            <props>
+                <prop key="runtime.log.logsystem.class">net.shibboleth.utilities.java.support.velocity.SLF4JLogChute</prop>
+                <prop key="input.encoding">UTF-8</prop>
+                <prop key="output.encoding">UTF-8</prop>
+            </props>
+        </property>
+    </bean>
+
+    <!-- Import any user defined beans or overrides for the MVC config. -->
+    <import resource="../../conf/mvc-beans.xml" />
+
+</beans>
diff -rupN shibboleth-idp/system/conf/profile-intercept-system.xml shibboleth-idp/system/conf/profile-intercept-system.xml
--- shibboleth-idp/system/conf/profile-intercept-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/profile-intercept-system.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,196 +1,196 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <import resource="../../conf/intercept/profile-intercept.xml" />
-
-    <!-- Parent bean for intercept interceptor flows. -->
-    <bean id="shibboleth.InterceptFlow" abstract="true"
-        class="net.shibboleth.idp.profile.interceptor.ProfileInterceptorFlowDescriptor" />
-
-    <!-- Parent bean defining built-in interceptors used for SAML security policy handling. -->
-    <bean id="shibboleth.DefaultInterceptFlows"
-            class="org.springframework.beans.factory.config.ListFactoryBean" abstract="true">
-        <property name="sourceList">
-            <list>
-                <bean id="intercept/security-policy/shibboleth-sso" parent="shibboleth.InterceptFlow" />
-                <bean id="intercept/security-policy/saml2-sso" parent="shibboleth.InterceptFlow" />
-                <bean id="intercept/security-policy/saml2-ecp" parent="shibboleth.InterceptFlow" />
-                <bean id="intercept/security-policy/saml2-slo" parent="shibboleth.InterceptFlow" />
-                <bean id="intercept/security-policy/saml2-idwsf-ssos" parent="shibboleth.InterceptFlow" />
-                <bean id="intercept/security-policy/saml-soap" parent="shibboleth.InterceptFlow" />
-            </list>
-        </property>
-    </bean>
-
-    <!-- Parent bean for attribute release consent flows. -->
-    <bean id="shibboleth.consent.AttributeReleaseFlow" abstract="true"
-            class="net.shibboleth.idp.consent.flow.ar.impl.AttributeReleaseFlowDescriptor"
-            p:storageService-ref="#{'%{idp.consent.StorageService:shibboleth.ClientPersistentStorageService}'.trim()}"
-            p:doNotRememberConsentAllowed="%{idp.consent.allowDoNotRemember:true}"
-            p:globalConsentAllowed="%{idp.consent.allowGlobal:true}"
-            p:perAttributeConsentEnabled="%{idp.consent.allowPerAttribute:false}"
-            p:compareValues="%{idp.consent.compareValues:false}"
-            p:lifetime="%{idp.consent.storageRecordLifetime:P1Y}"
-            p:maximumNumberOfStoredRecords="%{idp.consent.maxStoredRecords:10}"
-            p:expandedNumberOfStoredRecords="%{idp.consent.expandedMaxStoredRecords:0}"
-            p:expandedStorageThreshold="%{idp.consent.expandedStorageThreshold:1048576}"
-            p:nonBrowserSupported="false">
-        <property name="activationCondition">
-            <bean parent="shibboleth.Conditions.OR">
-                <constructor-arg>
-                    <bean parent="shibboleth.Conditions.NOT">
-                        <constructor-arg value="%{idp.consent.allowPerAttribute:false}" />
-                    </bean>
-                </constructor-arg>
-                <constructor-arg>
-                    <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-
-    <!-- Parent bean for terms of use consent flows. -->
-    <bean id="shibboleth.consent.TermsOfUseFlow" abstract="true"
-        class="net.shibboleth.idp.consent.flow.impl.ConsentFlowDescriptor"
-        p:storageService-ref="#{'%{idp.consent.StorageService:shibboleth.ClientPersistentStorageService}'.trim()}"
-        p:compareValues="%{idp.consent.compareValues:false}"
-        p:lifetime="%{idp.consent.storageRecordLifetime:P1Y}"
-        p:maximumNumberOfStoredRecords="%{idp.consent.maxStoredRecords:10}"
-        p:expandedNumberOfStoredRecords="%{idp.consent.expandedMaxStoredRecords:0}"
-        p:expandedStorageThreshold="%{idp.consent.expandedStorageThreshold:1048576}"
-        p:nonBrowserSupported="false" />
-
-    <!-- Function to lookup consent-specific audit context as a child of the consent context. -->
-    <bean id="shibboleth.consent.ChildLookup.ConsentAuditContext"
-        class="com.google.common.base.Functions" factory-method="compose">
-        <constructor-arg name="g">
-            <bean id="shibboleth.ChildLookup.AuditContext"
-                class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-                c:type="#{ T(net.shibboleth.idp.profile.context.AuditContext) }"
-                c:createContext="true" />
-        </constructor-arg>
-        <constructor-arg name="f">
-            <bean id="shibboleth.ChildLookup.ConsentContext"
-                class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-                c:type="#{ T(net.shibboleth.idp.consent.context.impl.ConsentContext) }" />
-        </constructor-arg>
-    </bean>
-
-    <!-- Default pre-consent audit extractors. -->
-    <bean id="shibboleth.consent.DefaultPreConsentAuditExtractors"
-            class="org.springframework.beans.factory.config.MapFactoryBean" abstract="true">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose"
-                        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SERVICE_PROVIDER"/>
-                    </key>
-                    <ref bean="shibboleth.RelyingPartyIdLookup.Simple" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IDENTITY_PROVIDER"/>
-                    </key>
-                    <ref bean="shibboleth.ResponderIdLookup.Simple" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-    
-    <!-- Default consent audit extractors. -->
-    <bean id="shibboleth.consent.DefaultConsentAuditExtractors"
-            class="org.springframework.beans.factory.config.MapFactoryBean" abstract="true">
-        <property name="sourceMap">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.consent.audit.impl.ConsentAuditFields.CURRENT_CONSENT_IDS" />
-                    </key>
-                    <bean class="net.shibboleth.idp.consent.audit.impl.CurrentConsentIdsAuditExtractor" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.consent.audit.impl.ConsentAuditFields.CURRENT_CONSENT_VALUES" />
-                    </key>
-                    <bean class="net.shibboleth.idp.consent.audit.impl.CurrentConsentValuesAuditExtractor" />
-                </entry>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.consent.audit.impl.ConsentAuditFields.CURRENT_CONSENT_IS_APPROVED" />
-                    </key>
-                    <bean class="net.shibboleth.idp.consent.audit.impl.CurrentConsentIsApprovedAuditExtractor" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-
-    <!--
-    Defining this map of attribute names to numbers allows us to specify symbolic text
-    replacements that shrink the size of results saved to client-side storage such as cookies.
-    -->
-    <bean id="shibboleth.consent.DefaultAttributeSymbolics"
-        class="org.springframework.beans.factory.config.MapFactoryBean" abstract="true">
-        <property name="sourceMap">
-            <map>
-                <!-- Attribute resolver core schema attributes -->
-                <entry key="email" value="100" />
-                <entry key="homePhone" value="101" />
-                <entry key="homePostalAddress" value="102" />
-                <entry key="mobileNumber" value="103" />
-                <entry key="pagerNumber" value="104" />
-                <entry key="commonName" value="105" />
-                <entry key="surname" value="106" />
-                <entry key="locality" value="107" />
-                <entry key="stateProvince" value="108" />
-                <entry key="street" value="109" />
-                <entry key="organizationName" value="110" />
-                <entry key="organizationalUnit" value="111" />
-                <entry key="title" value="112" />
-                <entry key="postalAddress" value="113" />
-                <entry key="postalCode" value="114" />
-                <entry key="postOfficeBox" value="115" />
-                <entry key="telephoneNumber" value="116" />
-                <entry key="givenName" value="117" />
-                <entry key="initials" value="118" />
-                <!-- Attribute resolver inetOrgPerson attributes -->
-                <entry key="departmentNumber" value="200" />
-                <entry key="displayName" value="201" />
-                <entry key="employeeNumber" value="202" />
-                <entry key="employeeType" value="203" />
-                <entry key="jpegPhoto" value="204" />
-                <entry key="preferredLanguage" value="205" />
-                <!--  Attribute resolver eduPerson attributes -->
-                <entry key="eduPersonAffiliation" value="300" />
-                <entry key="eduPersonEntitlement" value="301" />
-                <entry key="eduPersonNickname" value="302" />
-                <entry key="eduPersonOrgDN" value="303" />
-                <entry key="eduPersonOrgUnitDN" value="304" />
-                <entry key="eduPersonPrimaryAffiliation" value="305" />
-                <entry key="eduPersonPrimaryOrgUnitDN" value="306" />
-                <entry key="eduPersonPrincipalName" value="307" />
-                <entry key="eduPersonScopedAffiliation" value="308" />
-                <entry key="eduPersonAssurance" value="309" />
-            </map>
-        </property>
-    </bean>
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <import resource="../../conf/intercept/profile-intercept.xml" />
+
+    <!-- Parent bean for intercept interceptor flows. -->
+    <bean id="shibboleth.InterceptFlow" abstract="true"
+        class="net.shibboleth.idp.profile.interceptor.ProfileInterceptorFlowDescriptor" />
+
+    <!-- Parent bean defining built-in interceptors used for SAML security policy handling. -->
+    <bean id="shibboleth.DefaultInterceptFlows"
+            class="org.springframework.beans.factory.config.ListFactoryBean" abstract="true">
+        <property name="sourceList">
+            <list>
+                <bean id="intercept/security-policy/shibboleth-sso" parent="shibboleth.InterceptFlow" />
+                <bean id="intercept/security-policy/saml2-sso" parent="shibboleth.InterceptFlow" />
+                <bean id="intercept/security-policy/saml2-ecp" parent="shibboleth.InterceptFlow" />
+                <bean id="intercept/security-policy/saml2-slo" parent="shibboleth.InterceptFlow" />
+                <bean id="intercept/security-policy/saml2-idwsf-ssos" parent="shibboleth.InterceptFlow" />
+                <bean id="intercept/security-policy/saml-soap" parent="shibboleth.InterceptFlow" />
+            </list>
+        </property>
+    </bean>
+
+    <!-- Parent bean for attribute release consent flows. -->
+    <bean id="shibboleth.consent.AttributeReleaseFlow" abstract="true"
+            class="net.shibboleth.idp.consent.flow.ar.impl.AttributeReleaseFlowDescriptor"
+            p:storageService-ref="#{'%{idp.consent.StorageService:shibboleth.ClientPersistentStorageService}'.trim()}"
+            p:doNotRememberConsentAllowed="%{idp.consent.allowDoNotRemember:true}"
+            p:globalConsentAllowed="%{idp.consent.allowGlobal:true}"
+            p:perAttributeConsentEnabled="%{idp.consent.allowPerAttribute:false}"
+            p:compareValues="%{idp.consent.compareValues:false}"
+            p:lifetime="%{idp.consent.storageRecordLifetime:P1Y}"
+            p:maximumNumberOfStoredRecords="%{idp.consent.maxStoredRecords:10}"
+            p:expandedNumberOfStoredRecords="%{idp.consent.expandedMaxStoredRecords:0}"
+            p:expandedStorageThreshold="%{idp.consent.expandedStorageThreshold:1048576}"
+            p:nonBrowserSupported="false">
+        <property name="activationCondition">
+            <bean parent="shibboleth.Conditions.OR">
+                <constructor-arg>
+                    <bean parent="shibboleth.Conditions.NOT">
+                        <constructor-arg value="%{idp.consent.allowPerAttribute:false}" />
+                    </bean>
+                </constructor-arg>
+                <constructor-arg>
+                    <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+
+    <!-- Parent bean for terms of use consent flows. -->
+    <bean id="shibboleth.consent.TermsOfUseFlow" abstract="true"
+        class="net.shibboleth.idp.consent.flow.impl.ConsentFlowDescriptor"
+        p:storageService-ref="#{'%{idp.consent.StorageService:shibboleth.ClientPersistentStorageService}'.trim()}"
+        p:compareValues="%{idp.consent.compareValues:false}"
+        p:lifetime="%{idp.consent.storageRecordLifetime:P1Y}"
+        p:maximumNumberOfStoredRecords="%{idp.consent.maxStoredRecords:10}"
+        p:expandedNumberOfStoredRecords="%{idp.consent.expandedMaxStoredRecords:0}"
+        p:expandedStorageThreshold="%{idp.consent.expandedStorageThreshold:1048576}"
+        p:nonBrowserSupported="false" />
+
+    <!-- Function to lookup consent-specific audit context as a child of the consent context. -->
+    <bean id="shibboleth.consent.ChildLookup.ConsentAuditContext"
+        class="com.google.common.base.Functions" factory-method="compose">
+        <constructor-arg name="g">
+            <bean id="shibboleth.ChildLookup.AuditContext"
+                class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+                c:type="#{ T(net.shibboleth.idp.profile.context.AuditContext) }"
+                c:createContext="true" />
+        </constructor-arg>
+        <constructor-arg name="f">
+            <bean id="shibboleth.ChildLookup.ConsentContext"
+                class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+                c:type="#{ T(net.shibboleth.idp.consent.context.impl.ConsentContext) }" />
+        </constructor-arg>
+    </bean>
+
+    <!-- Default pre-consent audit extractors. -->
+    <bean id="shibboleth.consent.DefaultPreConsentAuditExtractors"
+            class="org.springframework.beans.factory.config.MapFactoryBean" abstract="true">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.profile.IdPAuditFields.USERNAME"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose"
+                        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.SERVICE_PROVIDER"/>
+                    </key>
+                    <ref bean="shibboleth.RelyingPartyIdLookup.Simple" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.IDENTITY_PROVIDER"/>
+                    </key>
+                    <ref bean="shibboleth.ResponderIdLookup.Simple" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+    
+    <!-- Default consent audit extractors. -->
+    <bean id="shibboleth.consent.DefaultConsentAuditExtractors"
+            class="org.springframework.beans.factory.config.MapFactoryBean" abstract="true">
+        <property name="sourceMap">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.consent.audit.impl.ConsentAuditFields.CURRENT_CONSENT_IDS" />
+                    </key>
+                    <bean class="net.shibboleth.idp.consent.audit.impl.CurrentConsentIdsAuditExtractor" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.consent.audit.impl.ConsentAuditFields.CURRENT_CONSENT_VALUES" />
+                    </key>
+                    <bean class="net.shibboleth.idp.consent.audit.impl.CurrentConsentValuesAuditExtractor" />
+                </entry>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.consent.audit.impl.ConsentAuditFields.CURRENT_CONSENT_IS_APPROVED" />
+                    </key>
+                    <bean class="net.shibboleth.idp.consent.audit.impl.CurrentConsentIsApprovedAuditExtractor" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+
+    <!--
+    Defining this map of attribute names to numbers allows us to specify symbolic text
+    replacements that shrink the size of results saved to client-side storage such as cookies.
+    -->
+    <bean id="shibboleth.consent.DefaultAttributeSymbolics"
+        class="org.springframework.beans.factory.config.MapFactoryBean" abstract="true">
+        <property name="sourceMap">
+            <map>
+                <!-- Attribute resolver core schema attributes -->
+                <entry key="email" value="100" />
+                <entry key="homePhone" value="101" />
+                <entry key="homePostalAddress" value="102" />
+                <entry key="mobileNumber" value="103" />
+                <entry key="pagerNumber" value="104" />
+                <entry key="commonName" value="105" />
+                <entry key="surname" value="106" />
+                <entry key="locality" value="107" />
+                <entry key="stateProvince" value="108" />
+                <entry key="street" value="109" />
+                <entry key="organizationName" value="110" />
+                <entry key="organizationalUnit" value="111" />
+                <entry key="title" value="112" />
+                <entry key="postalAddress" value="113" />
+                <entry key="postalCode" value="114" />
+                <entry key="postOfficeBox" value="115" />
+                <entry key="telephoneNumber" value="116" />
+                <entry key="givenName" value="117" />
+                <entry key="initials" value="118" />
+                <!-- Attribute resolver inetOrgPerson attributes -->
+                <entry key="departmentNumber" value="200" />
+                <entry key="displayName" value="201" />
+                <entry key="employeeNumber" value="202" />
+                <entry key="employeeType" value="203" />
+                <entry key="jpegPhoto" value="204" />
+                <entry key="preferredLanguage" value="205" />
+                <!--  Attribute resolver eduPerson attributes -->
+                <entry key="eduPersonAffiliation" value="300" />
+                <entry key="eduPersonEntitlement" value="301" />
+                <entry key="eduPersonNickname" value="302" />
+                <entry key="eduPersonOrgDN" value="303" />
+                <entry key="eduPersonOrgUnitDN" value="304" />
+                <entry key="eduPersonPrimaryAffiliation" value="305" />
+                <entry key="eduPersonPrimaryOrgUnitDN" value="306" />
+                <entry key="eduPersonPrincipalName" value="307" />
+                <entry key="eduPersonScopedAffiliation" value="308" />
+                <entry key="eduPersonAssurance" value="309" />
+            </map>
+        </property>
+    </bean>
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/conf/relying-party-system.xml shibboleth-idp/system/conf/relying-party-system.xml
--- shibboleth-idp/system/conf/relying-party-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/relying-party-system.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,302 +1,302 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <!-- This is one of the few properties we rely on that has no default. -->
-    <bean id="entityID" class="java.lang.String" c:_0="%{idp.entityID}" />
-
-    <!-- Pulls together the various components that feed the resolver. -->
-    <bean class="net.shibboleth.idp.relyingparty.impl.DefaultRelyingPartyConfigurationResolver"
-        p:unverifiedConfiguration-ref="shibboleth.UnverifiedRelyingParty"
-        p:defaultConfiguration-ref="shibboleth.DefaultRelyingParty"
-        p:relyingPartyConfigurations-ref="shibboleth.RelyingPartyOverrides"
-        p:defaultSecurityConfiguration-ref="%{idp.security.config:shibboleth.DefaultSecurityConfiguration}" 
-        p:signingCredentials="#{getObject('shibboleth.SigningCredentials')}"
-        p:encryptionCredentials="#{getObject('shibboleth.EncryptionCredentials')}" />
-
-    <!-- Parent bean for generic RelyingParty overrides that establishes defaults. -->
-    <bean id="RelyingParty" abstract="true" class="net.shibboleth.idp.relyingparty.RelyingPartyConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:responderId="#{getObject('entityID')}"
-        p:detailedErrorsPredicate="%{idp.errors.detailed:false}" />
-
-    <!-- Parent bean for RelyingParty overrides based on activation by name(s). -->
-    <bean id="RelyingPartyByName" abstract="true"
-        class="net.shibboleth.idp.saml.relyingparty.impl.RelyingPartyConfigurationSupport" factory-method="byName"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:responderId="#{getObject('entityID')}" p:detailedErrorsPredicate="%{idp.errors.detailed:false}" />
-
-    <!-- Parent bean for RelyingParty overrides based on activation by group. -->
-    <bean id="RelyingPartyByGroup" abstract="true"
-        class="net.shibboleth.idp.saml.relyingparty.impl.RelyingPartyConfigurationSupport" factory-method="byGroup"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:responderId="#{getObject('entityID')}" p:detailedErrorsPredicate="%{idp.errors.detailed:false}" />
-
-    <!-- Parent bean for RelyingParty overrides based on activation by tag. -->
-    <bean id="RelyingPartyByTag" abstract="true"
-        class="net.shibboleth.idp.saml.relyingparty.impl.RelyingPartyConfigurationSupport" factory-method="byTag"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:responderId="#{getObject('entityID')}" p:detailedErrorsPredicate="%{idp.errors.detailed:false}"
-        c:trim="false" c:matchAll="false" />
-
-    <bean id="TagCandidate" abstract="true"
-        class="org.opensaml.saml.common.profile.logic.EntityAttributesPredicate.Candidate" />
-        
-    <!-- Default Profile Configurations, also usable as parent beans in overrides. -->
-    
-    <bean id="Shibboleth.SSO"
-        class="net.shibboleth.idp.saml.saml1.profile.config.BrowserSSOProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:artifactConfiguration-ref="shibboleth.DefaultArtifactConfiguration"
-        p:inboundInterceptorFlows="security-policy/shibboleth-sso" />
-
-    <bean id="SAML1.AttributeQuery"
-        class="net.shibboleth.idp.saml.saml1.profile.config.AttributeQueryProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:inboundInterceptorFlows="security-policy/saml-soap" />
-
-    <bean id="SAML1.ArtifactResolution"
-        class="net.shibboleth.idp.saml.saml1.profile.config.ArtifactResolutionProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:inboundInterceptorFlows="security-policy/saml-soap" />
-
-    <bean id="SAML2.SSO"
-        class="net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:artifactConfiguration-ref="shibboleth.DefaultArtifactConfiguration"
-        p:inboundInterceptorFlows="security-policy/saml2-sso"
-        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
-        
-    <util:constant id="SAML2.SSO.FEATURE_AUTHNCONTEXT"
-        static-field="net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration.FEATURE_AUTHNCONTEXT"/>
-
-    <bean id="SAML2.ECP"
-        class="net.shibboleth.idp.saml.saml2.profile.config.ECPProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:inboundInterceptorFlows="security-policy/saml2-ecp"
-        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
-
-    <bean id="SAML2.Logout"
-        class="net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:artifactConfiguration-ref="shibboleth.DefaultArtifactConfiguration"
-        p:inboundInterceptorFlows="security-policy/saml2-slo"
-        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
-
-    <bean id="SAML2.AttributeQuery"
-        class="net.shibboleth.idp.saml.saml2.profile.config.AttributeQueryProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:inboundInterceptorFlows="security-policy/saml-soap"
-        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
-
-    <bean id="SAML2.ArtifactResolution"
-        class="net.shibboleth.idp.saml.saml2.profile.config.ArtifactResolutionProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:inboundInterceptorFlows="security-policy/saml-soap"
-        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
-
-    <bean id="Liberty.SSOS"
-        class="net.shibboleth.idp.saml.idwsf.profile.config.SSOSProfileConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:inboundInterceptorFlows="security-policy/saml2-idwsf-ssos"
-        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
-
-    <bean id="CAS.LoginConfiguration"
-        class="net.shibboleth.idp.cas.config.impl.LoginConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <bean id="CAS.ProxyConfiguration"
-        class="net.shibboleth.idp.cas.config.impl.ProxyConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <!-- Ticket validity period applies to proxy-granting tickets created upon successful proxy callback validation -->
-    <bean id="CAS.ValidateConfiguration"
-        class="net.shibboleth.idp.cas.config.impl.ValidateConfiguration"
-        p:servletRequest-ref="shibboleth.HttpServletRequest"
-        p:ticketValidityPeriod="PT12H" />
-
-    <!-- Artifact Configuration Defaults -->
-    
-    <bean id="shibboleth.DefaultArtifactConfiguration"
-        class="net.shibboleth.idp.saml.profile.config.BasicSAMLArtifactConfiguration"
-        p:artifactResolutionServiceIndex="%{idp.artifact.endpointIndex:2}" />
-    
-    <!--
-    Security Configuration Defaults
-    
-    These settings establish the default security configurations for signatures and encryption
-    and loads the default credentials used.
-    -->
-
-    <bean id="shibboleth.DefaultSecurityConfiguration" class="net.shibboleth.idp.profile.config.SecurityConfiguration">
-    
-        <property name="signatureSigningConfiguration">
-            <ref bean="#{'%{idp.signing.config:shibboleth.SigningConfiguration.SHA256}'.trim()}" />
-        </property>
-        
-        <property name="signatureValidationConfiguration">
-            <bean parent="shibboleth.BasicSignatureValidationConfiguration" 
-                p:signatureTrustEngine-ref="#{'%{idp.trust.signatures:shibboleth.ChainingSignatureTrustEngine}'.trim()}" />
-        </property>
-
-        <property name="clientTLSValidationConfiguration">
-            <bean parent="shibboleth.BasicClientTLSValidationConfiguration"
-                p:x509TrustEngine-ref="#{'%{idp.trust.certificates:shibboleth.ChainingX509TrustEngine}'.trim()}" />
-        </property>
-        
-        <property name="encryptionConfiguration">
-            <bean parent="shibboleth.BasicEncryptionConfiguration">
-                <property name="dataEncryptionAlgorithms">
-                    <list>
-                        <util:constant
-                            static-field="org.opensaml.xmlsec.encryption.support.EncryptionConstants.ALGO_ID_BLOCKCIPHER_AES128" />
-                    </list>
-                </property>
-                <property name="keyTransportEncryptionAlgorithms">
-                    <list>
-                        <util:constant
-                            static-field="org.opensaml.xmlsec.encryption.support.EncryptionConstants.ALGO_ID_KEYTRANSPORT_RSAOAEP" />
-                    </list>
-                </property>
-            </bean>
-        </property>
-
-        <property name="decryptionConfiguration">
-            <bean parent="shibboleth.BasicDecryptionConfiguration"
-                p:KEKKeyInfoCredentialResolver-ref="defaultKeyEncryptionCredentialResolver"
-                p:encryptedKeyResolver-ref="defaultEncryptedKeyResolver" />
-        </property>
-
-    </bean>
-
-    <bean id="shibboleth.SigningConfiguration.SHA256" parent="shibboleth.BasicSignatureSigningConfiguration"
-            p:signingCredentials-ref="shibboleth.DefaultSigningCredential">
-        <property name="signatureAlgorithms">
-            <list>
-                <util:constant
-                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA256" />
-                <util:constant
-                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_ECDSA_SHA256" />
-            </list>
-        </property>
-        <property name="signatureReferenceDigestMethods">
-            <list>
-                <util:constant
-                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_DIGEST_SHA256" />
-            </list>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.SigningConfiguration.SHA1" parent="shibboleth.BasicSignatureSigningConfiguration"
-            p:signingCredentials-ref="shibboleth.DefaultSigningCredential">
-        <property name="signatureAlgorithms">
-            <list>
-                <util:constant
-                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA1" />
-                <util:constant
-                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_ECDSA_SHA1" />
-            </list>
-        </property>
-        <property name="signatureReferenceDigestMethods">
-            <list>
-                <util:constant
-                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_DIGEST_SHA1" />
-            </list>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.MetadataPKIXValidationInformationResolver"
-        class="net.shibboleth.idp.saml.security.impl.MetadataPKIXValidationInformationResolver"
-        c:resolver-ref="shibboleth.RoleDescriptorResolver" />
-
-    <!-- Trust Engine options for message signature evaluation. -->
-        
-    <bean id="shibboleth.ExplicitKeySignatureTrustEngine"
-        class="org.opensaml.xmlsec.signature.support.impl.ExplicitKeySignatureTrustEngine"
-        c:resolver-ref="shibboleth.MetadataCredentialResolver"
-        c:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
-
-    <bean id="shibboleth.PKIXSignatureTrustEngine"
-        class="org.opensaml.xmlsec.signature.support.impl.PKIXSignatureTrustEngine" 
-        c:resolver-ref="shibboleth.MetadataPKIXValidationInformationResolver"
-        c:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
-
-    <bean id="shibboleth.ChainingSignatureTrustEngine"
-            class="org.opensaml.xmlsec.signature.support.impl.ChainingSignatureTrustEngine">
-        <constructor-arg>
-            <list>
-                <ref bean="shibboleth.ExplicitKeySignatureTrustEngine" />
-                <ref bean="shibboleth.PKIXSignatureTrustEngine" />
-            </list>
-        </constructor-arg>
-    </bean>
-
-    <!-- Trust Engine options for X.509 certificate evaluation (e.g., TLS). -->
-
-    <bean id="shibboleth.ExplicitKeyX509TrustEngine"
-        class="org.opensaml.security.trust.impl.ExplicitKeyTrustEngine"
-        c:resolver-ref="shibboleth.MetadataCredentialResolver" />
-    <!-- Backward compatibility, remove in 4.0. -->
-    <alias name="shibboleth.ExplicitKeyX509TrustEngine" alias="shibboleth.ExplicitX509TrustEngine" />
-
-    <bean id="shibboleth.PKIXX509TrustEngine"
-        class="org.opensaml.security.x509.impl.PKIXX509CredentialTrustEngine"
-        c:resolver-ref="shibboleth.MetadataPKIXValidationInformationResolver" />
-
-    <bean id="shibboleth.ChainingX509TrustEngine" class="org.opensaml.security.trust.impl.ChainingTrustEngine">
-        <constructor-arg>
-            <list>
-                <ref bean="shibboleth.ExplicitKeyX509TrustEngine" />
-                <ref bean="shibboleth.PKIXX509TrustEngine" />
-            </list>
-        </constructor-arg>
-    </bean>
-
-    <!-- Defines decryption keys, along with support for optimizing lookup based on KeyInfo hints. -->
-    <bean id="defaultKeyEncryptionCredentialResolver" class="org.opensaml.xmlsec.keyinfo.impl.ChainingKeyInfoCredentialResolver">
-        <constructor-arg>
-            <list>
-                <bean class="org.opensaml.xmlsec.keyinfo.impl.LocalKeyInfoCredentialResolver">
-                    <constructor-arg name="localCredentialResolver">
-                        <bean class="org.opensaml.xmlsec.keyinfo.impl.CollectionKeyInfoCredentialResolver"
-                            c:credentials-ref="shibboleth.DefaultEncryptionCredentials" />
-                    </constructor-arg>
-                    <constructor-arg name="keyInfoProviders">
-                        <list>
-                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.RSAKeyValueProvider" />
-                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.DSAKeyValueProvider" />
-                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.DEREncodedKeyValueProvider" />
-                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.InlineX509DataProvider" />
-                        </list>
-                    </constructor-arg>
-                </bean>
-                <bean class="org.opensaml.xmlsec.keyinfo.impl.StaticKeyInfoCredentialResolver"
-                    c:credentials-ref="shibboleth.DefaultEncryptionCredentials" />
-            </list>
-        </constructor-arg>
-    </bean>
-    
-    <!-- Defines how the system locates EncryptedKey elements sent in messages containing encrypted objects. -->
-    <bean id="defaultEncryptedKeyResolver" class="org.opensaml.xmlsec.encryption.support.ChainingEncryptedKeyResolver"
-            c:recipient-ref="entityID">
-        <constructor-arg name="encKeyResolvers">
-            <list>
-                <bean class="org.opensaml.xmlsec.encryption.support.InlineEncryptedKeyResolver" />
-                <bean class="org.opensaml.saml.saml2.encryption.EncryptedElementTypeEncryptedKeyResolver" />
-                <bean class="org.opensaml.xmlsec.encryption.support.SimpleRetrievalMethodEncryptedKeyResolver" />
-                <bean class="org.opensaml.xmlsec.encryption.support.SimpleKeyInfoReferenceEncryptedKeyResolver" />
-            </list>
-        </constructor-arg>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <!-- This is one of the few properties we rely on that has no default. -->
+    <bean id="entityID" class="java.lang.String" c:_0="%{idp.entityID}" />
+
+    <!-- Pulls together the various components that feed the resolver. -->
+    <bean class="net.shibboleth.idp.relyingparty.impl.DefaultRelyingPartyConfigurationResolver"
+        p:unverifiedConfiguration-ref="shibboleth.UnverifiedRelyingParty"
+        p:defaultConfiguration-ref="shibboleth.DefaultRelyingParty"
+        p:relyingPartyConfigurations-ref="shibboleth.RelyingPartyOverrides"
+        p:defaultSecurityConfiguration-ref="%{idp.security.config:shibboleth.DefaultSecurityConfiguration}" 
+        p:signingCredentials="#{getObject('shibboleth.SigningCredentials')}"
+        p:encryptionCredentials="#{getObject('shibboleth.EncryptionCredentials')}" />
+
+    <!-- Parent bean for generic RelyingParty overrides that establishes defaults. -->
+    <bean id="RelyingParty" abstract="true" class="net.shibboleth.idp.relyingparty.RelyingPartyConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:responderId="#{getObject('entityID')}"
+        p:detailedErrorsPredicate="%{idp.errors.detailed:false}" />
+
+    <!-- Parent bean for RelyingParty overrides based on activation by name(s). -->
+    <bean id="RelyingPartyByName" abstract="true"
+        class="net.shibboleth.idp.saml.relyingparty.impl.RelyingPartyConfigurationSupport" factory-method="byName"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:responderId="#{getObject('entityID')}" p:detailedErrorsPredicate="%{idp.errors.detailed:false}" />
+
+    <!-- Parent bean for RelyingParty overrides based on activation by group. -->
+    <bean id="RelyingPartyByGroup" abstract="true"
+        class="net.shibboleth.idp.saml.relyingparty.impl.RelyingPartyConfigurationSupport" factory-method="byGroup"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:responderId="#{getObject('entityID')}" p:detailedErrorsPredicate="%{idp.errors.detailed:false}" />
+
+    <!-- Parent bean for RelyingParty overrides based on activation by tag. -->
+    <bean id="RelyingPartyByTag" abstract="true"
+        class="net.shibboleth.idp.saml.relyingparty.impl.RelyingPartyConfigurationSupport" factory-method="byTag"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:responderId="#{getObject('entityID')}" p:detailedErrorsPredicate="%{idp.errors.detailed:false}"
+        c:trim="false" c:matchAll="false" />
+
+    <bean id="TagCandidate" abstract="true"
+        class="org.opensaml.saml.common.profile.logic.EntityAttributesPredicate.Candidate" />
+        
+    <!-- Default Profile Configurations, also usable as parent beans in overrides. -->
+    
+    <bean id="Shibboleth.SSO"
+        class="net.shibboleth.idp.saml.saml1.profile.config.BrowserSSOProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:artifactConfiguration-ref="shibboleth.DefaultArtifactConfiguration"
+        p:inboundInterceptorFlows="security-policy/shibboleth-sso" />
+
+    <bean id="SAML1.AttributeQuery"
+        class="net.shibboleth.idp.saml.saml1.profile.config.AttributeQueryProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:inboundInterceptorFlows="security-policy/saml-soap" />
+
+    <bean id="SAML1.ArtifactResolution"
+        class="net.shibboleth.idp.saml.saml1.profile.config.ArtifactResolutionProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:inboundInterceptorFlows="security-policy/saml-soap" />
+
+    <bean id="SAML2.SSO"
+        class="net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:artifactConfiguration-ref="shibboleth.DefaultArtifactConfiguration"
+        p:inboundInterceptorFlows="security-policy/saml2-sso"
+        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
+        
+    <util:constant id="SAML2.SSO.FEATURE_AUTHNCONTEXT"
+        static-field="net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration.FEATURE_AUTHNCONTEXT"/>
+
+    <bean id="SAML2.ECP"
+        class="net.shibboleth.idp.saml.saml2.profile.config.ECPProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:inboundInterceptorFlows="security-policy/saml2-ecp"
+        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
+
+    <bean id="SAML2.Logout"
+        class="net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:artifactConfiguration-ref="shibboleth.DefaultArtifactConfiguration"
+        p:inboundInterceptorFlows="security-policy/saml2-slo"
+        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
+
+    <bean id="SAML2.AttributeQuery"
+        class="net.shibboleth.idp.saml.saml2.profile.config.AttributeQueryProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:inboundInterceptorFlows="security-policy/saml-soap"
+        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
+
+    <bean id="SAML2.ArtifactResolution"
+        class="net.shibboleth.idp.saml.saml2.profile.config.ArtifactResolutionProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:inboundInterceptorFlows="security-policy/saml-soap"
+        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
+
+    <bean id="Liberty.SSOS"
+        class="net.shibboleth.idp.saml.idwsf.profile.config.SSOSProfileConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:inboundInterceptorFlows="security-policy/saml2-idwsf-ssos"
+        p:encryptionOptionalPredicate="%{idp.encryption.optional:false}" />
+
+    <bean id="CAS.LoginConfiguration"
+        class="net.shibboleth.idp.cas.config.impl.LoginConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <bean id="CAS.ProxyConfiguration"
+        class="net.shibboleth.idp.cas.config.impl.ProxyConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <!-- Ticket validity period applies to proxy-granting tickets created upon successful proxy callback validation -->
+    <bean id="CAS.ValidateConfiguration"
+        class="net.shibboleth.idp.cas.config.impl.ValidateConfiguration"
+        p:servletRequest-ref="shibboleth.HttpServletRequest"
+        p:ticketValidityPeriod="PT12H" />
+
+    <!-- Artifact Configuration Defaults -->
+    
+    <bean id="shibboleth.DefaultArtifactConfiguration"
+        class="net.shibboleth.idp.saml.profile.config.BasicSAMLArtifactConfiguration"
+        p:artifactResolutionServiceIndex="%{idp.artifact.endpointIndex:2}" />
+    
+    <!--
+    Security Configuration Defaults
+    
+    These settings establish the default security configurations for signatures and encryption
+    and loads the default credentials used.
+    -->
+
+    <bean id="shibboleth.DefaultSecurityConfiguration" class="net.shibboleth.idp.profile.config.SecurityConfiguration">
+    
+        <property name="signatureSigningConfiguration">
+            <ref bean="#{'%{idp.signing.config:shibboleth.SigningConfiguration.SHA256}'.trim()}" />
+        </property>
+        
+        <property name="signatureValidationConfiguration">
+            <bean parent="shibboleth.BasicSignatureValidationConfiguration" 
+                p:signatureTrustEngine-ref="#{'%{idp.trust.signatures:shibboleth.ChainingSignatureTrustEngine}'.trim()}" />
+        </property>
+
+        <property name="clientTLSValidationConfiguration">
+            <bean parent="shibboleth.BasicClientTLSValidationConfiguration"
+                p:x509TrustEngine-ref="#{'%{idp.trust.certificates:shibboleth.ChainingX509TrustEngine}'.trim()}" />
+        </property>
+        
+        <property name="encryptionConfiguration">
+            <bean parent="shibboleth.BasicEncryptionConfiguration">
+                <property name="dataEncryptionAlgorithms">
+                    <list>
+                        <util:constant
+                            static-field="org.opensaml.xmlsec.encryption.support.EncryptionConstants.ALGO_ID_BLOCKCIPHER_AES128" />
+                    </list>
+                </property>
+                <property name="keyTransportEncryptionAlgorithms">
+                    <list>
+                        <util:constant
+                            static-field="org.opensaml.xmlsec.encryption.support.EncryptionConstants.ALGO_ID_KEYTRANSPORT_RSAOAEP" />
+                    </list>
+                </property>
+            </bean>
+        </property>
+
+        <property name="decryptionConfiguration">
+            <bean parent="shibboleth.BasicDecryptionConfiguration"
+                p:KEKKeyInfoCredentialResolver-ref="defaultKeyEncryptionCredentialResolver"
+                p:encryptedKeyResolver-ref="defaultEncryptedKeyResolver" />
+        </property>
+
+    </bean>
+
+    <bean id="shibboleth.SigningConfiguration.SHA256" parent="shibboleth.BasicSignatureSigningConfiguration"
+            p:signingCredentials-ref="shibboleth.DefaultSigningCredential">
+        <property name="signatureAlgorithms">
+            <list>
+                <util:constant
+                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA256" />
+                <util:constant
+                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_ECDSA_SHA256" />
+            </list>
+        </property>
+        <property name="signatureReferenceDigestMethods">
+            <list>
+                <util:constant
+                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_DIGEST_SHA256" />
+            </list>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.SigningConfiguration.SHA1" parent="shibboleth.BasicSignatureSigningConfiguration"
+            p:signingCredentials-ref="shibboleth.DefaultSigningCredential">
+        <property name="signatureAlgorithms">
+            <list>
+                <util:constant
+                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA1" />
+                <util:constant
+                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_ECDSA_SHA1" />
+            </list>
+        </property>
+        <property name="signatureReferenceDigestMethods">
+            <list>
+                <util:constant
+                    static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_DIGEST_SHA1" />
+            </list>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.MetadataPKIXValidationInformationResolver"
+        class="net.shibboleth.idp.saml.security.impl.MetadataPKIXValidationInformationResolver"
+        c:resolver-ref="shibboleth.RoleDescriptorResolver" />
+
+    <!-- Trust Engine options for message signature evaluation. -->
+        
+    <bean id="shibboleth.ExplicitKeySignatureTrustEngine"
+        class="org.opensaml.xmlsec.signature.support.impl.ExplicitKeySignatureTrustEngine"
+        c:resolver-ref="shibboleth.MetadataCredentialResolver"
+        c:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
+
+    <bean id="shibboleth.PKIXSignatureTrustEngine"
+        class="org.opensaml.xmlsec.signature.support.impl.PKIXSignatureTrustEngine" 
+        c:resolver-ref="shibboleth.MetadataPKIXValidationInformationResolver"
+        c:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
+
+    <bean id="shibboleth.ChainingSignatureTrustEngine"
+            class="org.opensaml.xmlsec.signature.support.impl.ChainingSignatureTrustEngine">
+        <constructor-arg>
+            <list>
+                <ref bean="shibboleth.ExplicitKeySignatureTrustEngine" />
+                <ref bean="shibboleth.PKIXSignatureTrustEngine" />
+            </list>
+        </constructor-arg>
+    </bean>
+
+    <!-- Trust Engine options for X.509 certificate evaluation (e.g., TLS). -->
+
+    <bean id="shibboleth.ExplicitKeyX509TrustEngine"
+        class="org.opensaml.security.trust.impl.ExplicitKeyTrustEngine"
+        c:resolver-ref="shibboleth.MetadataCredentialResolver" />
+    <!-- Backward compatibility, remove in 4.0. -->
+    <alias name="shibboleth.ExplicitKeyX509TrustEngine" alias="shibboleth.ExplicitX509TrustEngine" />
+
+    <bean id="shibboleth.PKIXX509TrustEngine"
+        class="org.opensaml.security.x509.impl.PKIXX509CredentialTrustEngine"
+        c:resolver-ref="shibboleth.MetadataPKIXValidationInformationResolver" />
+
+    <bean id="shibboleth.ChainingX509TrustEngine" class="org.opensaml.security.trust.impl.ChainingTrustEngine">
+        <constructor-arg>
+            <list>
+                <ref bean="shibboleth.ExplicitKeyX509TrustEngine" />
+                <ref bean="shibboleth.PKIXX509TrustEngine" />
+            </list>
+        </constructor-arg>
+    </bean>
+
+    <!-- Defines decryption keys, along with support for optimizing lookup based on KeyInfo hints. -->
+    <bean id="defaultKeyEncryptionCredentialResolver" class="org.opensaml.xmlsec.keyinfo.impl.ChainingKeyInfoCredentialResolver">
+        <constructor-arg>
+            <list>
+                <bean class="org.opensaml.xmlsec.keyinfo.impl.LocalKeyInfoCredentialResolver">
+                    <constructor-arg name="localCredentialResolver">
+                        <bean class="org.opensaml.xmlsec.keyinfo.impl.CollectionKeyInfoCredentialResolver"
+                            c:credentials-ref="shibboleth.DefaultEncryptionCredentials" />
+                    </constructor-arg>
+                    <constructor-arg name="keyInfoProviders">
+                        <list>
+                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.RSAKeyValueProvider" />
+                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.DSAKeyValueProvider" />
+                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.DEREncodedKeyValueProvider" />
+                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.InlineX509DataProvider" />
+                        </list>
+                    </constructor-arg>
+                </bean>
+                <bean class="org.opensaml.xmlsec.keyinfo.impl.StaticKeyInfoCredentialResolver"
+                    c:credentials-ref="shibboleth.DefaultEncryptionCredentials" />
+            </list>
+        </constructor-arg>
+    </bean>
+    
+    <!-- Defines how the system locates EncryptedKey elements sent in messages containing encrypted objects. -->
+    <bean id="defaultEncryptedKeyResolver" class="org.opensaml.xmlsec.encryption.support.ChainingEncryptedKeyResolver"
+            c:recipient-ref="entityID">
+        <constructor-arg name="encKeyResolvers">
+            <list>
+                <bean class="org.opensaml.xmlsec.encryption.support.InlineEncryptedKeyResolver" />
+                <bean class="org.opensaml.saml.saml2.encryption.EncryptedElementTypeEncryptedKeyResolver" />
+                <bean class="org.opensaml.xmlsec.encryption.support.SimpleRetrievalMethodEncryptedKeyResolver" />
+                <bean class="org.opensaml.xmlsec.encryption.support.SimpleKeyInfoReferenceEncryptedKeyResolver" />
+            </list>
+        </constructor-arg>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/conf/saml-binding-config.xml shibboleth-idp/system/conf/saml-binding-config.xml
--- shibboleth-idp/system/conf/saml-binding-config.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/saml-binding-config.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,173 +1,173 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <!--
-    This file configures the IdP with the set of SAML bindings to support for sending messages back through
-    a browser to SPs. Separate binding lists are provided for the various SAML versions and profiles.
-    
-    For advanced use cases, it's possible to configure an activationCondition property that can evaluate the
-    profile request context to determine whether a binding applies, for example based on the SP identity.
-    
-    Note: the p:id syntax MUST be used to specify the binding URI. Using id alone will cause problems due to
-    duplicate bean IDs. 
-    -->
-        
-    <bean id="shibboleth.BindingDescriptor" class="net.shibboleth.idp.saml.binding.BindingDescriptor" abstract="true" />
-    
-    <!-- SAML 1 Bindings -->
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.LegacyShibboleth"
-        p:id="urn:mace:shibboleth:1.0:profiles:AuthnRequest"
-        p:shortName="Shibboleth" />
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML1POST"
-        p:id="urn:oasis:names:tc:SAML:1.0:profiles:browser-post"
-        p:shortName="POST"
-        p:encoderBeanId="shibboleth.Encoders.SAML1PostEncoder" />
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML1Artifact"
-        p:id="urn:oasis:names:tc:SAML:1.0:profiles:artifact-01"
-        p:shortName="Artifact"
-        p:encoderBeanId="shibboleth.Encoders.SAML1ArtifactEncoder"
-        p:artifact="true"
-        p:activationCondition="%{idp.artifact.enabled:true}" />
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML1SOAP"
-        p:id="urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding"
-        p:shortName="SOAP"
-        p:encoderBeanId="shibboleth.Encoders.SAML1SOAPEncoder"
-        p:synchronous="true" />
-    
-    <!-- SAML 2 Bindings -->
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2Unsolicited"
-        p:id="urn:mace:shibboleth:2.0:profiles:AuthnRequest"
-        p:shortName="Unsolicited" />
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2Redirect"
-        p:id="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
-        p:shortName="Redirect"
-        p:encoderBeanId="shibboleth.Encoders.SAML2RedirectEncoder"
-        p:signatureCapable="true" />
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2POST"
-        p:id="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
-        p:shortName="POST"
-        p:encoderBeanId="shibboleth.Encoders.SAML2PostEncoder" />
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2POSTSimpleSign"
-        p:id="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign"
-        p:shortName="POST-SimpleSign"
-        p:encoderBeanId="shibboleth.Encoders.SAML2PostSimpleSignEncoder"
-        p:signatureCapable="true" />
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2Artifact"
-        p:id="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact"
-        p:shortName="Artifact"
-        p:encoderBeanId="shibboleth.Encoders.SAML2ArtifactEncoder"
-        p:artifact="true"
-        p:activationCondition="%{idp.artifact.enabled:true}" />
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2SOAP"
-        p:id="urn:oasis:names:tc:SAML:2.0:bindings:SOAP"
-        p:shortName="SOAP"
-        p:encoderBeanId="shibboleth.Encoders.SAML2SOAPEncoder"
-        p:synchronous="true" />
-        
-    <!-- Other Bindings -->
-    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.LibertySOAP"
-            p:shortName="LibertySOAP"
-            p:synchronous="true">
-        <property name="id">
-            <util:constant static-field="net.shibboleth.idp.saml.saml2.profile.delegation.impl.LibertyConstants.SOAP_BINDING_20_URI" />
-        </property>
-    </bean>
-    
-    <util:list id="shibboleth.OutgoingSAML1SSOBindings">
-        <ref bean="shibboleth.Binding.SAML1POST" />
-        <ref bean="shibboleth.Binding.SAML1Artifact" />
-    </util:list>
-
-    <util:list id="shibboleth.OutgoingSAML2SSOBindings">
-        <ref bean="shibboleth.Binding.SAML2POST" />
-        <ref bean="shibboleth.Binding.SAML2POSTSimpleSign" />
-        <ref bean="shibboleth.Binding.SAML2Artifact" />
-    </util:list>
-
-    <util:list id="shibboleth.OutgoingSAML2SLOBindings">
-        <ref bean="shibboleth.Binding.SAML2Redirect" />
-        <ref bean="shibboleth.Binding.SAML2POST" />
-        <ref bean="shibboleth.Binding.SAML2POSTSimpleSign" />
-        <ref bean="shibboleth.Binding.SAML2Artifact" />
-    </util:list>
-
-    <util:list id="shibboleth.OutgoingSOAPBindings">
-        <ref bean="shibboleth.Binding.SAML1SOAP" />
-        <ref bean="shibboleth.Binding.SAML2SOAP" />
-    </util:list>
-
-    <util:list id="shibboleth.OutgoingECPBindings">
-        <!-- Special case, the binding is technically SOAP, but response endpoint checking based on PAOS or SAML-EC. -->
-        <bean parent="shibboleth.BindingDescriptor" p:id="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" p:shortName="SOAP"
-            p:encoderBeanId="shibboleth.Encoders.SAML2SOAPEncoder" />
-        <bean parent="shibboleth.BindingDescriptor" p:id="urn:ietf:params:xml:ns:samlec" p:shortName="SOAP"
-            p:encoderBeanId="shibboleth.Encoders.SAML2SOAPEncoder" />
-    </util:list>
-
-    <util:list id="shibboleth.OutgoingIDWSFSSOSBindings">
-        <!-- Special case, the binding is technically SOAP, but response endpoint checking based on PAOS. -->
-        <bean parent="shibboleth.BindingDescriptor" p:id="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" p:shortName="LibertySOAP"
-            p:encoderBeanId="shibboleth.Encoders.IDWSFSOAPEncoder" />
-        <bean parent="shibboleth.BindingDescriptor" p:id="urn:ietf:params:xml:ns:samlec" p:shortName="LibertySOAP"
-            p:encoderBeanId="shibboleth.Encoders.IDWSFSOAPEncoder" />
-    </util:list>
-
-    <!--
-    These are the actual MessageEncoder beans that implement the outgoing binding requirements.
-    There is generally never any reason to change these. The init-method is being nulled below to
-    prevent explicit initialization by Spring, as this is deferred to the code to do.
-    -->
-
-    <bean id="shibboleth.Encoders.SAML1PostEncoder"
-          class="org.opensaml.saml.saml1.binding.encoding.impl.HTTPPostEncoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-          p:velocityEngine-ref="shibboleth.VelocityEngine" />
-
-    <bean id="shibboleth.Encoders.SAML1ArtifactEncoder"
-          class="org.opensaml.saml.saml1.binding.encoding.impl.HTTPArtifactEncoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-          p:artifactMap-ref="shibboleth.SAMLArtifactMap" />
-
-    <bean id="shibboleth.Encoders.SAML1SOAPEncoder"
-          class="org.opensaml.saml.saml1.binding.encoding.impl.HTTPSOAP11Encoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
-
-    <bean id="shibboleth.Encoders.SAML2RedirectEncoder"
-          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPRedirectDeflateEncoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
-
-    <bean id="shibboleth.Encoders.SAML2PostEncoder"
-          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPPostEncoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-          p:velocityEngine-ref="shibboleth.VelocityEngine" />
-
-    <bean id="shibboleth.Encoders.SAML2PostSimpleSignEncoder"
-          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPPostSimpleSignEncoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-          p:velocityEngine-ref="shibboleth.VelocityEngine" />
-
-    <bean id="shibboleth.Encoders.SAML2ArtifactEncoder"
-          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPArtifactEncoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-          p:artifactMap-ref="shibboleth.SAMLArtifactMap" />
-          
-    <bean id="shibboleth.Encoders.SAML2SOAPEncoder"
-          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPSOAP11Encoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
-          
-    <bean id="shibboleth.Encoders.IDWSFSOAPEncoder"
-          class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.LibertyHTTPSOAP11Encoder" scope="prototype" init-method=""
-          p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <!--
+    This file configures the IdP with the set of SAML bindings to support for sending messages back through
+    a browser to SPs. Separate binding lists are provided for the various SAML versions and profiles.
+    
+    For advanced use cases, it's possible to configure an activationCondition property that can evaluate the
+    profile request context to determine whether a binding applies, for example based on the SP identity.
+    
+    Note: the p:id syntax MUST be used to specify the binding URI. Using id alone will cause problems due to
+    duplicate bean IDs. 
+    -->
+        
+    <bean id="shibboleth.BindingDescriptor" class="net.shibboleth.idp.saml.binding.BindingDescriptor" abstract="true" />
+    
+    <!-- SAML 1 Bindings -->
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.LegacyShibboleth"
+        p:id="urn:mace:shibboleth:1.0:profiles:AuthnRequest"
+        p:shortName="Shibboleth" />
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML1POST"
+        p:id="urn:oasis:names:tc:SAML:1.0:profiles:browser-post"
+        p:shortName="POST"
+        p:encoderBeanId="shibboleth.Encoders.SAML1PostEncoder" />
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML1Artifact"
+        p:id="urn:oasis:names:tc:SAML:1.0:profiles:artifact-01"
+        p:shortName="Artifact"
+        p:encoderBeanId="shibboleth.Encoders.SAML1ArtifactEncoder"
+        p:artifact="true"
+        p:activationCondition="%{idp.artifact.enabled:true}" />
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML1SOAP"
+        p:id="urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding"
+        p:shortName="SOAP"
+        p:encoderBeanId="shibboleth.Encoders.SAML1SOAPEncoder"
+        p:synchronous="true" />
+    
+    <!-- SAML 2 Bindings -->
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2Unsolicited"
+        p:id="urn:mace:shibboleth:2.0:profiles:AuthnRequest"
+        p:shortName="Unsolicited" />
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2Redirect"
+        p:id="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
+        p:shortName="Redirect"
+        p:encoderBeanId="shibboleth.Encoders.SAML2RedirectEncoder"
+        p:signatureCapable="true" />
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2POST"
+        p:id="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
+        p:shortName="POST"
+        p:encoderBeanId="shibboleth.Encoders.SAML2PostEncoder" />
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2POSTSimpleSign"
+        p:id="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign"
+        p:shortName="POST-SimpleSign"
+        p:encoderBeanId="shibboleth.Encoders.SAML2PostSimpleSignEncoder"
+        p:signatureCapable="true" />
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2Artifact"
+        p:id="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact"
+        p:shortName="Artifact"
+        p:encoderBeanId="shibboleth.Encoders.SAML2ArtifactEncoder"
+        p:artifact="true"
+        p:activationCondition="%{idp.artifact.enabled:true}" />
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.SAML2SOAP"
+        p:id="urn:oasis:names:tc:SAML:2.0:bindings:SOAP"
+        p:shortName="SOAP"
+        p:encoderBeanId="shibboleth.Encoders.SAML2SOAPEncoder"
+        p:synchronous="true" />
+        
+    <!-- Other Bindings -->
+    <bean parent="shibboleth.BindingDescriptor" id="shibboleth.Binding.LibertySOAP"
+            p:shortName="LibertySOAP"
+            p:synchronous="true">
+        <property name="id">
+            <util:constant static-field="net.shibboleth.idp.saml.saml2.profile.delegation.impl.LibertyConstants.SOAP_BINDING_20_URI" />
+        </property>
+    </bean>
+    
+    <util:list id="shibboleth.OutgoingSAML1SSOBindings">
+        <ref bean="shibboleth.Binding.SAML1POST" />
+        <ref bean="shibboleth.Binding.SAML1Artifact" />
+    </util:list>
+
+    <util:list id="shibboleth.OutgoingSAML2SSOBindings">
+        <ref bean="shibboleth.Binding.SAML2POST" />
+        <ref bean="shibboleth.Binding.SAML2POSTSimpleSign" />
+        <ref bean="shibboleth.Binding.SAML2Artifact" />
+    </util:list>
+
+    <util:list id="shibboleth.OutgoingSAML2SLOBindings">
+        <ref bean="shibboleth.Binding.SAML2Redirect" />
+        <ref bean="shibboleth.Binding.SAML2POST" />
+        <ref bean="shibboleth.Binding.SAML2POSTSimpleSign" />
+        <ref bean="shibboleth.Binding.SAML2Artifact" />
+    </util:list>
+
+    <util:list id="shibboleth.OutgoingSOAPBindings">
+        <ref bean="shibboleth.Binding.SAML1SOAP" />
+        <ref bean="shibboleth.Binding.SAML2SOAP" />
+    </util:list>
+
+    <util:list id="shibboleth.OutgoingECPBindings">
+        <!-- Special case, the binding is technically SOAP, but response endpoint checking based on PAOS or SAML-EC. -->
+        <bean parent="shibboleth.BindingDescriptor" p:id="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" p:shortName="SOAP"
+            p:encoderBeanId="shibboleth.Encoders.SAML2SOAPEncoder" />
+        <bean parent="shibboleth.BindingDescriptor" p:id="urn:ietf:params:xml:ns:samlec" p:shortName="SOAP"
+            p:encoderBeanId="shibboleth.Encoders.SAML2SOAPEncoder" />
+    </util:list>
+
+    <util:list id="shibboleth.OutgoingIDWSFSSOSBindings">
+        <!-- Special case, the binding is technically SOAP, but response endpoint checking based on PAOS. -->
+        <bean parent="shibboleth.BindingDescriptor" p:id="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" p:shortName="LibertySOAP"
+            p:encoderBeanId="shibboleth.Encoders.IDWSFSOAPEncoder" />
+        <bean parent="shibboleth.BindingDescriptor" p:id="urn:ietf:params:xml:ns:samlec" p:shortName="LibertySOAP"
+            p:encoderBeanId="shibboleth.Encoders.IDWSFSOAPEncoder" />
+    </util:list>
+
+    <!--
+    These are the actual MessageEncoder beans that implement the outgoing binding requirements.
+    There is generally never any reason to change these. The init-method is being nulled below to
+    prevent explicit initialization by Spring, as this is deferred to the code to do.
+    -->
+
+    <bean id="shibboleth.Encoders.SAML1PostEncoder"
+          class="org.opensaml.saml.saml1.binding.encoding.impl.HTTPPostEncoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+          p:velocityEngine-ref="shibboleth.VelocityEngine" />
+
+    <bean id="shibboleth.Encoders.SAML1ArtifactEncoder"
+          class="org.opensaml.saml.saml1.binding.encoding.impl.HTTPArtifactEncoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+          p:artifactMap-ref="shibboleth.SAMLArtifactMap" />
+
+    <bean id="shibboleth.Encoders.SAML1SOAPEncoder"
+          class="org.opensaml.saml.saml1.binding.encoding.impl.HTTPSOAP11Encoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
+
+    <bean id="shibboleth.Encoders.SAML2RedirectEncoder"
+          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPRedirectDeflateEncoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
+
+    <bean id="shibboleth.Encoders.SAML2PostEncoder"
+          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPPostEncoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+          p:velocityEngine-ref="shibboleth.VelocityEngine" />
+
+    <bean id="shibboleth.Encoders.SAML2PostSimpleSignEncoder"
+          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPPostSimpleSignEncoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+          p:velocityEngine-ref="shibboleth.VelocityEngine" />
+
+    <bean id="shibboleth.Encoders.SAML2ArtifactEncoder"
+          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPArtifactEncoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+          p:artifactMap-ref="shibboleth.SAMLArtifactMap" />
+          
+    <bean id="shibboleth.Encoders.SAML2SOAPEncoder"
+          class="org.opensaml.saml.saml2.binding.encoding.impl.HTTPSOAP11Encoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
+          
+    <bean id="shibboleth.Encoders.IDWSFSOAPEncoder"
+          class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.LibertyHTTPSOAP11Encoder" scope="prototype" init-method=""
+          p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
+
+</beans>
diff -rupN shibboleth-idp/system/conf/saml-nameid-system.xml shibboleth-idp/system/conf/saml-nameid-system.xml
--- shibboleth-idp/system/conf/saml-nameid-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/saml-nameid-system.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,101 +1,101 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <!-- Bean templates for defining generators that produce custom formats based on attributes. -->
-
-    <bean id="shibboleth.SAML2AttributeSourcedGenerator" abstract="true"
-        class="net.shibboleth.idp.saml.nameid.impl.AttributeSourcedSAML2NameIDGenerator" />
-    <bean id="shibboleth.SAML1AttributeSourcedGenerator" abstract="true"
-        class="net.shibboleth.idp.saml.nameid.impl.AttributeSourcedSAML1NameIdentifierGenerator" />
-
-    <!-- The actual plugins for generating transient and persistent identifiers. -->
-
-    <bean id="shibboleth.SAML2TransientGenerator"
-        class="net.shibboleth.idp.saml.nameid.impl.TransientSAML2NameIDGenerator"
-        p:transientIdGenerator-ref="#{'%{idp.transientId.generator:shibboleth.CryptoTransientIdGenerator}'.trim()}" />
-
-    <bean id="shibboleth.SAML2PersistentGenerator" lazy-init="true"
-            class="net.shibboleth.idp.saml.nameid.impl.PersistentSAML2NameIDGenerator"
-            p:useUnfilteredAttributes="%{idp.persistentId.useUnfilteredAttributes:true}"
-            p:persistentIdGenerator-ref="#{'%{idp.persistentId.generator:shibboleth.ComputedPersistentIdGenerator}'.trim()}">
-        <property name="attributeSourceIds">
-            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.persistentId.sourceAttribute:}'.trim()}" />
-        </property>
-    </bean>
-
-    <bean id="shibboleth.SAML1TransientGenerator"
-        class="net.shibboleth.idp.saml.nameid.impl.TransientSAML1NameIdentifierGenerator"
-        p:transientIdGenerator-ref="#{'%{idp.transientId.generator:shibboleth.CryptoTransientIdGenerator}'.trim()}" />
-
-    <!--
-    These are strategy implementations for generating transient and persistent identifiers.
-    They're configured using properties, and usually selected for injection into the actual
-    generation plugins by other properties, so they aren't all in use in a given system,
-    but are all defined to simplify configuration.
-    
-    The Stored generator is a special case in that it requires a storage object, usually
-    a JDBC-based implementation. By marking it lazy-init, we avoid loading it unless it's
-    actually selected for use.
-    -->
-    
-    <bean id="shibboleth.StoredTransientIdGenerator" lazy-init="true"
-        class="net.shibboleth.idp.saml.nameid.impl.StoredTransientIdGenerationStrategy"
-        p:idStore-ref="shibboleth.StorageService" />
-
-    <bean id="shibboleth.CryptoTransientIdGenerator" lazy-init="true"
-        class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientIdGenerationStrategy"
-        p:dataSealer-ref="shibboleth.DataSealer" />
-
-    <bean id="shibboleth.ComputedPersistentIdGenerator" lazy-init="true"
-        class="net.shibboleth.idp.saml.nameid.impl.ComputedPersistentIdGenerationStrategy"
-        p:salt="%{idp.persistentId.salt:}"
-        p:encodedSalt="%{idp.persistentId.encodedSalt:}"
-        p:algorithm="%{idp.persistentId.algorithm:SHA}"
-        p:encoding="#{ T(net.shibboleth.idp.saml.nameid.impl.ComputedPersistentIdGenerationStrategy.Encoding).%{idp.persistentId.encoding:BASE64} }" />
-
-    <bean id="shibboleth.StoredPersistentIdGenerator" lazy-init="true"
-        class="net.shibboleth.idp.saml.nameid.impl.StoredPersistentIdGenerationStrategy"
-        p:computedIdStrategy="#{getObject('%{idp.persistentId.computed:shibboleth.ComputedPersistentIdGenerator}'.trim())}"
-        p:IDStore="#{getObject('%{idp.persistentId.store:undefined}'.trim())}"
-        p:dataSource="#{getObject('%{idp.persistentId.dataSource:undefined}'.trim())}" />
-    
-    <!-- Parent bean for users to configure a custom ID store rather than a data source only. -->
-    <bean id="shibboleth.JDBCPersistentIdStore" abstract="true"
-        class="net.shibboleth.idp.saml.nameid.impl.JDBCPersistentIdStoreEx" />
-    
-    <!-- These two beans handle legacy support for NameID generation in the Attribute Resolver. -->
-    <bean id="shibboleth.LegacySAML1NameIdentifierGenerator"
-        class="net.shibboleth.idp.saml.nameid.impl.LegacySAML1NameIdentifierGenerator" />
-    <bean id="shibboleth.LegacySAML2NameIDGenerator"
-        class="net.shibboleth.idp.saml.nameid.impl.LegacySAML2NameIDGenerator" />
-    
-    <!--
-    This is the actual service being exposed, and it takes a pair of generators that are
-    actually wrappers around generator lists defined by the deployer.
-    -->
-    
-    <bean class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierGenerationServiceImpl">
-        <property name="SAML1NameIdentifierGenerator">
-            <bean class="org.opensaml.saml.saml1.profile.impl.ChainingSAML1NameIdentifierGenerator"
-                p:generators-ref="shibboleth.SAML1NameIdentifierGenerators"
-                p:defaultGenerator="#{getObject('%{idp.nameid.saml1.legacyGenerator:}'.trim())}" />    
-        </property>
-        <property name="SAML2NameIDGenerator">
-            <bean class="org.opensaml.saml.saml2.profile.impl.ChainingSAML2NameIDGenerator"
-                p:generators-ref="shibboleth.SAML2NameIDGenerators"
-                p:defaultGenerator="#{getObject('%{idp.nameid.saml2.legacyGenerator:}'.trim())}" />    
-        </property>
-    </bean>
-        
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <!-- Bean templates for defining generators that produce custom formats based on attributes. -->
+
+    <bean id="shibboleth.SAML2AttributeSourcedGenerator" abstract="true"
+        class="net.shibboleth.idp.saml.nameid.impl.AttributeSourcedSAML2NameIDGenerator" />
+    <bean id="shibboleth.SAML1AttributeSourcedGenerator" abstract="true"
+        class="net.shibboleth.idp.saml.nameid.impl.AttributeSourcedSAML1NameIdentifierGenerator" />
+
+    <!-- The actual plugins for generating transient and persistent identifiers. -->
+
+    <bean id="shibboleth.SAML2TransientGenerator"
+        class="net.shibboleth.idp.saml.nameid.impl.TransientSAML2NameIDGenerator"
+        p:transientIdGenerator-ref="#{'%{idp.transientId.generator:shibboleth.CryptoTransientIdGenerator}'.trim()}" />
+
+    <bean id="shibboleth.SAML2PersistentGenerator" lazy-init="true"
+            class="net.shibboleth.idp.saml.nameid.impl.PersistentSAML2NameIDGenerator"
+            p:useUnfilteredAttributes="%{idp.persistentId.useUnfilteredAttributes:true}"
+            p:persistentIdGenerator-ref="#{'%{idp.persistentId.generator:shibboleth.ComputedPersistentIdGenerator}'.trim()}">
+        <property name="attributeSourceIds">
+            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.persistentId.sourceAttribute:}'.trim()}" />
+        </property>
+    </bean>
+
+    <bean id="shibboleth.SAML1TransientGenerator"
+        class="net.shibboleth.idp.saml.nameid.impl.TransientSAML1NameIdentifierGenerator"
+        p:transientIdGenerator-ref="#{'%{idp.transientId.generator:shibboleth.CryptoTransientIdGenerator}'.trim()}" />
+
+    <!--
+    These are strategy implementations for generating transient and persistent identifiers.
+    They're configured using properties, and usually selected for injection into the actual
+    generation plugins by other properties, so they aren't all in use in a given system,
+    but are all defined to simplify configuration.
+    
+    The Stored generator is a special case in that it requires a storage object, usually
+    a JDBC-based implementation. By marking it lazy-init, we avoid loading it unless it's
+    actually selected for use.
+    -->
+    
+    <bean id="shibboleth.StoredTransientIdGenerator" lazy-init="true"
+        class="net.shibboleth.idp.saml.nameid.impl.StoredTransientIdGenerationStrategy"
+        p:idStore-ref="shibboleth.StorageService" />
+
+    <bean id="shibboleth.CryptoTransientIdGenerator" lazy-init="true"
+        class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientIdGenerationStrategy"
+        p:dataSealer-ref="shibboleth.DataSealer" />
+
+    <bean id="shibboleth.ComputedPersistentIdGenerator" lazy-init="true"
+        class="net.shibboleth.idp.saml.nameid.impl.ComputedPersistentIdGenerationStrategy"
+        p:salt="%{idp.persistentId.salt:}"
+        p:encodedSalt="%{idp.persistentId.encodedSalt:}"
+        p:algorithm="%{idp.persistentId.algorithm:SHA}"
+        p:encoding="#{ T(net.shibboleth.idp.saml.nameid.impl.ComputedPersistentIdGenerationStrategy.Encoding).%{idp.persistentId.encoding:BASE64} }" />
+
+    <bean id="shibboleth.StoredPersistentIdGenerator" lazy-init="true"
+        class="net.shibboleth.idp.saml.nameid.impl.StoredPersistentIdGenerationStrategy"
+        p:computedIdStrategy="#{getObject('%{idp.persistentId.computed:shibboleth.ComputedPersistentIdGenerator}'.trim())}"
+        p:IDStore="#{getObject('%{idp.persistentId.store:undefined}'.trim())}"
+        p:dataSource="#{getObject('%{idp.persistentId.dataSource:undefined}'.trim())}" />
+    
+    <!-- Parent bean for users to configure a custom ID store rather than a data source only. -->
+    <bean id="shibboleth.JDBCPersistentIdStore" abstract="true"
+        class="net.shibboleth.idp.saml.nameid.impl.JDBCPersistentIdStoreEx" />
+    
+    <!-- These two beans handle legacy support for NameID generation in the Attribute Resolver. -->
+    <bean id="shibboleth.LegacySAML1NameIdentifierGenerator"
+        class="net.shibboleth.idp.saml.nameid.impl.LegacySAML1NameIdentifierGenerator" />
+    <bean id="shibboleth.LegacySAML2NameIDGenerator"
+        class="net.shibboleth.idp.saml.nameid.impl.LegacySAML2NameIDGenerator" />
+    
+    <!--
+    This is the actual service being exposed, and it takes a pair of generators that are
+    actually wrappers around generator lists defined by the deployer.
+    -->
+    
+    <bean class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierGenerationServiceImpl">
+        <property name="SAML1NameIdentifierGenerator">
+            <bean class="org.opensaml.saml.saml1.profile.impl.ChainingSAML1NameIdentifierGenerator"
+                p:generators-ref="shibboleth.SAML1NameIdentifierGenerators"
+                p:defaultGenerator="#{getObject('%{idp.nameid.saml1.legacyGenerator:}'.trim())}" />    
+        </property>
+        <property name="SAML2NameIDGenerator">
+            <bean class="org.opensaml.saml.saml2.profile.impl.ChainingSAML2NameIDGenerator"
+                p:generators-ref="shibboleth.SAML2NameIDGenerators"
+                p:defaultGenerator="#{getObject('%{idp.nameid.saml2.legacyGenerator:}'.trim())}" />    
+        </property>
+    </bean>
+        
+</beans>
diff -rupN shibboleth-idp/system/conf/services-system.xml shibboleth-idp/system/conf/services-system.xml
--- shibboleth-idp/system/conf/services-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/services-system.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,146 +1,146 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <import resource="../../conf/services.xml" />
-
-    <!--
-    These are beans that define reloadable services. The actual Spring resources that configure the
-    services are generally defined in the services.xml file edited by deployers.
-    -->
-
-    <bean id="shibboleth.LoggingService"
-        class="%{idp.service.logging.class:net.shibboleth.idp.log.LogbackLoggingService}"
-        p:loggingConfiguration="%{idp.service.logging.resource:%{idp.home}/conf/logback.xml}"
-        p:reloadCheckDelay="%{idp.service.logging.checkInterval:PT0S}"
-        p:failFast="%{idp.service.logging.failFast:%{idp.service.failFast:true}}" />
-    
-    <bean id="shibboleth.AttributeFilterService" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
-            depends-on="shibboleth.VelocityEngine"
-            p:serviceConfigurations-ref="#{'%{idp.service.attribute.filter.resources:shibboleth.AttributeFilterResources}'.trim()}"
-            p:failFast="%{idp.service.attribute.filter.failFast:%{idp.service.failFast:false}}"
-            p:reloadCheckDelay="%{idp.service.attribute.filter.checkInterval:PT0S}"
-            p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer">
-        <constructor-arg name="claz" value="net.shibboleth.idp.attribute.filter.AttributeFilter" />
-        <constructor-arg name="strategy">
-            <bean class="net.shibboleth.idp.attribute.filter.spring.impl.AttributeFilterServiceStrategy"
-                id="ShibbolethAttributeFilter"/>
-        </constructor-arg>
-    </bean>
-
-    <bean id="shibboleth.AttributeResolverService" class="net.shibboleth.ext.spring.service.ReloadableSpringService" 
-            depends-on="shibboleth.VelocityEngine"
-            p:serviceConfigurations-ref="#{'%{idp.service.attribute.resolver.resources:shibboleth.AttributeResolverResources}'.trim()}"
-            p:failFast="%{idp.service.attribute.resolver.failFast:%{idp.service.failFast:false}}"
-            p:reloadCheckDelay="%{idp.service.attribute.resolver.checkInterval:PT0S}"
-            p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer">
-        <constructor-arg name="claz" value="net.shibboleth.idp.attribute.resolver.AttributeResolver" />
-        <constructor-arg name="strategy">
-            <bean class="net.shibboleth.idp.attribute.resolver.spring.impl.AttributeResolverServiceStrategy"
-                id="ShibbolethAttributeResolver"/>
-        </constructor-arg>
-    </bean>
-
-    <bean id="shibboleth.NameIdentifierGenerationService" class="net.shibboleth.ext.spring.service.ReloadableSpringService" 
-        c:claz="net.shibboleth.idp.saml.nameid.NameIdentifierGenerationService"
-        p:serviceConfigurations-ref="#{'%{idp.service.nameidGeneration.resources:shibboleth.NameIdentifierGenerationResources}'.trim()}"
-        p:failFast="%{idp.service.nameidGeneration.failFast:%{idp.service.failFast:false}}"
-        p:reloadCheckDelay="%{idp.service.nameidGeneration.checkInterval:PT0S}"
-        p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
-        p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer" />
-
-    <bean id="shibboleth.RelyingPartyResolverService" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
-            p:serviceConfigurations-ref="#{'%{idp.service.relyingparty.resources:shibboleth.RelyingPartyResolverResources}'.trim()}"
-            p:failFast="%{idp.service.relyingparty.failFast:%{idp.service.failFast:false}}"
-            p:reloadCheckDelay="%{idp.service.relyingparty.checkInterval:PT0S}"
-            p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
-            p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer">
-        <constructor-arg name="claz" value="net.shibboleth.idp.relyingparty.RelyingPartyConfigurationResolver" />
-        <constructor-arg name="strategy">
-            <bean class="net.shibboleth.ext.spring.service.ClassBasedServiceStrategy"
-                c:serviceableClaz="net.shibboleth.idp.relyingparty.impl.DefaultRelyingPartyConfigurationResolver" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="shibboleth.MetadataResolverService" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
-            depends-on="shibboleth.AttributeResolverService" 
-            p:serviceConfigurations-ref="#{'%{idp.service.metadata.resources:shibboleth.MetadataResolverResources}'.trim()}"
-            p:failFast="%{idp.service.metadata.failFast:%{idp.service.failFast:false}}"
-            p:reloadCheckDelay="%{idp.service.metadata.checkInterval:PT0S}"
-            p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer">
-        <constructor-arg name="claz" value="org.opensaml.saml.metadata.resolver.MetadataResolver" />
-        <constructor-arg name="strategy">
-            <bean class="net.shibboleth.idp.profile.spring.relyingparty.metadata.impl.MetadataResolverServiceStrategy" />
-        </constructor-arg>
-        <property name="beanPostProcessors">
-            <bean class="net.shibboleth.idp.profile.spring.relyingparty.metadata.impl.NodeProcessingAttachingBeanPostProcessor"
-                c:service-ref="shibboleth.AttributeResolverService" />
-        </property>
-    </bean>
-
-    <bean id="shibboleth.ReloadableAccessControlService" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
-        c:claz="net.shibboleth.utilities.java.support.security.AccessControlService" 
-        p:serviceConfigurations-ref="#{'%{idp.service.access.resources:shibboleth.AccessControlResources}'.trim()}"
-        p:failFast="%{idp.service.access.failFast:%{idp.service.failFast:true}}"
-        p:reloadCheckDelay="%{idp.service.access.checkInterval:PT0S}"
-        p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
-        p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer" />
-
-    <bean id="shibboleth.ReloadableCASServiceRegistry" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
-          c:claz="net.shibboleth.idp.cas.service.ServiceRegistry"
-          p:serviceConfigurations-ref="#{
-            getObject('%{idp.service.cas.registry.resources:shibboleth.CASServiceRegistryResources}'.trim()) != null
-                ? '%{idp.service.cas.registry.resources:shibboleth.CASServiceRegistryResources}'.trim()
-                : 'shibboleth.DefaultCASServiceRegistryResources' }"
-          p:failFast="%{idp.service.cas.registry.failFast:%{idp.service.failFast:false}}"
-          p:reloadCheckDelay="%{idp.service.cas.registry.checkInterval:PT0S}"
-          p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
-          p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer" />
-    <util:list id="shibboleth.DefaultCASServiceRegistryResources">
-        <value>%{idp.home}/conf/cas-protocol.xml</value>
-    </util:list>
-
-    <!--
-    These are proxies/facades that expose a service-unaware interface to client components.
-    Services without such facades are being consumed directly in a service-aware way.
-    -->
-    
-    <bean id="shibboleth.RelyingPartyConfigurationResolver"
-        class="net.shibboleth.idp.relyingparty.impl.ReloadingRelyingPartyConfigurationResolver"
-        c:resolverService-ref="shibboleth.RelyingPartyResolverService" />
-        
-    <bean id="shibboleth.MetadataResolver"
-        class="net.shibboleth.idp.saml.metadata.impl.ReloadingRelyingPartyMetadataProvider"
-        c:resolverService-ref="shibboleth.MetadataResolverService" />
-        
-    <bean id="shibboleth.RoleDescriptorResolver"
-        class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
-        c:mdResolver-ref="shibboleth.MetadataResolver" />   
-        
-    <bean id="shibboleth.AccessControlService"
-        class="net.shibboleth.utilities.java.support.security.DelegatingAccessControlService"
-        c:acService-ref="shibboleth.ReloadableAccessControlService" />
-
-    <bean id="shibboleth.SAML1AttributeDesignatorsMapperService"
-        class="net.shibboleth.idp.saml.attribute.mapping.impl.SAML1AttributeDesignatorsMapperService"
-        c:resolverService-ref="shibboleth.AttributeResolverService" />
-
-    <bean id="shibboleth.SAML2AttributesMapperService"
-        class="net.shibboleth.idp.saml.attribute.mapping.impl.SAML2AttributesMapperService"
-        c:resolverService-ref="shibboleth.AttributeResolverService" />
-
-    <bean id="shibboleth.CASServiceRegistry"
-          class="net.shibboleth.idp.cas.service.impl.ReloadingServiceRegistry"
-          c:delegate-ref="shibboleth.ReloadableCASServiceRegistry" />
-
- </beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <import resource="../../conf/services.xml" />
+
+    <!--
+    These are beans that define reloadable services. The actual Spring resources that configure the
+    services are generally defined in the services.xml file edited by deployers.
+    -->
+
+    <bean id="shibboleth.LoggingService"
+        class="%{idp.service.logging.class:net.shibboleth.idp.log.LogbackLoggingService}"
+        p:loggingConfiguration="%{idp.service.logging.resource:%{idp.home}/conf/logback.xml}"
+        p:reloadCheckDelay="%{idp.service.logging.checkInterval:PT0S}"
+        p:failFast="%{idp.service.logging.failFast:%{idp.service.failFast:true}}" />
+    
+    <bean id="shibboleth.AttributeFilterService" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
+            depends-on="shibboleth.VelocityEngine"
+            p:serviceConfigurations-ref="#{'%{idp.service.attribute.filter.resources:shibboleth.AttributeFilterResources}'.trim()}"
+            p:failFast="%{idp.service.attribute.filter.failFast:%{idp.service.failFast:false}}"
+            p:reloadCheckDelay="%{idp.service.attribute.filter.checkInterval:PT0S}"
+            p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer">
+        <constructor-arg name="claz" value="net.shibboleth.idp.attribute.filter.AttributeFilter" />
+        <constructor-arg name="strategy">
+            <bean class="net.shibboleth.idp.attribute.filter.spring.impl.AttributeFilterServiceStrategy"
+                id="ShibbolethAttributeFilter"/>
+        </constructor-arg>
+    </bean>
+
+    <bean id="shibboleth.AttributeResolverService" class="net.shibboleth.ext.spring.service.ReloadableSpringService" 
+            depends-on="shibboleth.VelocityEngine"
+            p:serviceConfigurations-ref="#{'%{idp.service.attribute.resolver.resources:shibboleth.AttributeResolverResources}'.trim()}"
+            p:failFast="%{idp.service.attribute.resolver.failFast:%{idp.service.failFast:false}}"
+            p:reloadCheckDelay="%{idp.service.attribute.resolver.checkInterval:PT0S}"
+            p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer">
+        <constructor-arg name="claz" value="net.shibboleth.idp.attribute.resolver.AttributeResolver" />
+        <constructor-arg name="strategy">
+            <bean class="net.shibboleth.idp.attribute.resolver.spring.impl.AttributeResolverServiceStrategy"
+                id="ShibbolethAttributeResolver"/>
+        </constructor-arg>
+    </bean>
+
+    <bean id="shibboleth.NameIdentifierGenerationService" class="net.shibboleth.ext.spring.service.ReloadableSpringService" 
+        c:claz="net.shibboleth.idp.saml.nameid.NameIdentifierGenerationService"
+        p:serviceConfigurations-ref="#{'%{idp.service.nameidGeneration.resources:shibboleth.NameIdentifierGenerationResources}'.trim()}"
+        p:failFast="%{idp.service.nameidGeneration.failFast:%{idp.service.failFast:false}}"
+        p:reloadCheckDelay="%{idp.service.nameidGeneration.checkInterval:PT0S}"
+        p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
+        p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer" />
+
+    <bean id="shibboleth.RelyingPartyResolverService" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
+            p:serviceConfigurations-ref="#{'%{idp.service.relyingparty.resources:shibboleth.RelyingPartyResolverResources}'.trim()}"
+            p:failFast="%{idp.service.relyingparty.failFast:%{idp.service.failFast:false}}"
+            p:reloadCheckDelay="%{idp.service.relyingparty.checkInterval:PT0S}"
+            p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
+            p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer">
+        <constructor-arg name="claz" value="net.shibboleth.idp.relyingparty.RelyingPartyConfigurationResolver" />
+        <constructor-arg name="strategy">
+            <bean class="net.shibboleth.ext.spring.service.ClassBasedServiceStrategy"
+                c:serviceableClaz="net.shibboleth.idp.relyingparty.impl.DefaultRelyingPartyConfigurationResolver" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="shibboleth.MetadataResolverService" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
+            depends-on="shibboleth.AttributeResolverService" 
+            p:serviceConfigurations-ref="#{'%{idp.service.metadata.resources:shibboleth.MetadataResolverResources}'.trim()}"
+            p:failFast="%{idp.service.metadata.failFast:%{idp.service.failFast:false}}"
+            p:reloadCheckDelay="%{idp.service.metadata.checkInterval:PT0S}"
+            p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer">
+        <constructor-arg name="claz" value="org.opensaml.saml.metadata.resolver.MetadataResolver" />
+        <constructor-arg name="strategy">
+            <bean class="net.shibboleth.idp.profile.spring.relyingparty.metadata.impl.MetadataResolverServiceStrategy" />
+        </constructor-arg>
+        <property name="beanPostProcessors">
+            <bean class="net.shibboleth.idp.profile.spring.relyingparty.metadata.impl.NodeProcessingAttachingBeanPostProcessor"
+                c:service-ref="shibboleth.AttributeResolverService" />
+        </property>
+    </bean>
+
+    <bean id="shibboleth.ReloadableAccessControlService" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
+        c:claz="net.shibboleth.utilities.java.support.security.AccessControlService" 
+        p:serviceConfigurations-ref="#{'%{idp.service.access.resources:shibboleth.AccessControlResources}'.trim()}"
+        p:failFast="%{idp.service.access.failFast:%{idp.service.failFast:true}}"
+        p:reloadCheckDelay="%{idp.service.access.checkInterval:PT0S}"
+        p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
+        p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer" />
+
+    <bean id="shibboleth.ReloadableCASServiceRegistry" class="net.shibboleth.ext.spring.service.ReloadableSpringService"
+          c:claz="net.shibboleth.idp.cas.service.ServiceRegistry"
+          p:serviceConfigurations-ref="#{
+            getObject('%{idp.service.cas.registry.resources:shibboleth.CASServiceRegistryResources}'.trim()) != null
+                ? '%{idp.service.cas.registry.resources:shibboleth.CASServiceRegistryResources}'.trim()
+                : 'shibboleth.DefaultCASServiceRegistryResources' }"
+          p:failFast="%{idp.service.cas.registry.failFast:%{idp.service.failFast:false}}"
+          p:reloadCheckDelay="%{idp.service.cas.registry.checkInterval:PT0S}"
+          p:beanPostProcessors-ref="shibboleth.IdentifiableBeanPostProcessor"
+          p:beanFactoryPostProcessors-ref="shibboleth.PropertySourcesPlaceholderConfigurer" />
+    <util:list id="shibboleth.DefaultCASServiceRegistryResources">
+        <value>%{idp.home}/conf/cas-protocol.xml</value>
+    </util:list>
+
+    <!--
+    These are proxies/facades that expose a service-unaware interface to client components.
+    Services without such facades are being consumed directly in a service-aware way.
+    -->
+    
+    <bean id="shibboleth.RelyingPartyConfigurationResolver"
+        class="net.shibboleth.idp.relyingparty.impl.ReloadingRelyingPartyConfigurationResolver"
+        c:resolverService-ref="shibboleth.RelyingPartyResolverService" />
+        
+    <bean id="shibboleth.MetadataResolver"
+        class="net.shibboleth.idp.saml.metadata.impl.ReloadingRelyingPartyMetadataProvider"
+        c:resolverService-ref="shibboleth.MetadataResolverService" />
+        
+    <bean id="shibboleth.RoleDescriptorResolver"
+        class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
+        c:mdResolver-ref="shibboleth.MetadataResolver" />   
+        
+    <bean id="shibboleth.AccessControlService"
+        class="net.shibboleth.utilities.java.support.security.DelegatingAccessControlService"
+        c:acService-ref="shibboleth.ReloadableAccessControlService" />
+
+    <bean id="shibboleth.SAML1AttributeDesignatorsMapperService"
+        class="net.shibboleth.idp.saml.attribute.mapping.impl.SAML1AttributeDesignatorsMapperService"
+        c:resolverService-ref="shibboleth.AttributeResolverService" />
+
+    <bean id="shibboleth.SAML2AttributesMapperService"
+        class="net.shibboleth.idp.saml.attribute.mapping.impl.SAML2AttributesMapperService"
+        c:resolverService-ref="shibboleth.AttributeResolverService" />
+
+    <bean id="shibboleth.CASServiceRegistry"
+          class="net.shibboleth.idp.cas.service.impl.ReloadingServiceRegistry"
+          c:delegate-ref="shibboleth.ReloadableCASServiceRegistry" />
+
+ </beans>
diff -rupN shibboleth-idp/system/conf/session-manager-system.xml shibboleth-idp/system/conf/session-manager-system.xml
--- shibboleth-idp/system/conf/session-manager-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/session-manager-system.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,94 +1,94 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="shibboleth.SessionIDGenerator"
-        class="net.shibboleth.utilities.java.support.security.SecureRandomIdentifierGenerationStrategy"
-        c:identifierSize="%{idp.session.idSize:32}" />
-
-    <bean id="shibboleth.DefaultSPSessionSerializerRegistry" abstract="true"
-            class="net.shibboleth.idp.session.SPSessionSerializerRegistry">
-        <property name="mappings">
-            <map>
-                <entry key="#{ T(net.shibboleth.idp.session.BasicSPSession) }">
-                    <bean class="net.shibboleth.idp.session.impl.BasicSPSessionSerializer"
-                        c:offset="%{idp.session.slop:PT0S}" />
-                </entry>
-                <entry key="#{ T(net.shibboleth.idp.saml.session.SAML1SPSession) }">
-                    <bean class="net.shibboleth.idp.saml.session.impl.SAML1SPSessionSerializer"
-                        c:offset="%{idp.session.slop:PT0S}" />
-                </entry>
-                <entry key="#{ T(net.shibboleth.idp.saml.session.SAML2SPSession) }">
-                    <bean class="net.shibboleth.idp.saml.session.impl.SAML2SPSessionSerializer"
-                        c:offset="%{idp.session.slop:PT0S}"
-                        p:parserPool-ref="shibboleth.ParserPool" />
-                </entry>
-                <entry key="#{T(net.shibboleth.idp.cas.session.impl.CASSPSession)}">
-                    <bean class="net.shibboleth.idp.cas.session.impl.CASSPSessionSerializer"
-                        c:offset="%{idp.session.slop:PT0S}" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-    
-    <bean id="shibboleth.DefaultSessionTypeProtocolMap"
-            class="org.springframework.beans.factory.config.MapFactoryBean" abstract="true">
-        <property name="sourceMap">
-            <map>
-                <entry key="#{T(net.shibboleth.idp.saml.session.SAML1SPSession)}">
-                    <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML11P_NS" />
-                </entry>
-                <entry key="#{T(net.shibboleth.idp.saml.session.SAML2SPSession)}">
-                    <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
-                </entry>
-                <entry key="#{T(net.shibboleth.idp.cas.session.impl.CASSPSession)}">
-                    <util:constant static-field="net.shibboleth.idp.cas.config.impl.AbstractProtocolConfiguration.PROTOCOL_URI" />
-                </entry>
-            </map>
-        </property>
-    </bean>
-    
-    <bean id="shibboleth.SessionManager" class="net.shibboleth.idp.session.impl.StorageBackedSessionManager"
-            depends-on="shibboleth.OpenSAMLConfig"
-            p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-            p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-            p:authenticationFlowDescriptors-ref="shibboleth.AvailableAuthenticationFlows"
-            p:cookieManager-ref="shibboleth.CookieManager"
-            p:storageService-ref="#{'%{idp.session.StorageService:shibboleth.ClientSessionStorageService}'.trim()}"
-            p:consistentAddress="%{idp.session.consistentAddress:true}"
-            p:sessionTimeout="%{idp.session.timeout:PT60M}"
-            p:sessionSlop="%{idp.session.slop:PT0S}"
-            p:maskStorageFailure="%{idp.session.maskStorageFailure:false}"
-            p:trackSPSessions="%{idp.session.trackSPSessions:false}"
-            p:secondaryServiceIndex="%{idp.session.secondaryServiceIndex:false}"
-            p:IDGenerator-ref="shibboleth.SessionIDGenerator"
-            p:SPSessionSerializerRegistry-ref="shibboleth.SPSessionSerializerRegistry" />
-
-    <!-- Built-in logout propagation flows. -->
-
-    <bean id="logoutprop/cas" class="net.shibboleth.idp.session.LogoutPropagationFlowDescriptor"
-          c:_0="#{ T(net.shibboleth.idp.cas.session.impl.CASSPSession) }" />
-
-    <bean id="logoutprop/saml2" class="net.shibboleth.idp.session.LogoutPropagationFlowDescriptor"
-          c:_0="#{ T(net.shibboleth.idp.saml.session.SAML2SPSession) }" />
-
-    <!-- Selector function used in logout-propagation UI and logout-propagation master flow -->
-
-    <bean id="shibboleth.LogoutPropagationFlowSelector"
-          class="net.shibboleth.idp.session.logic.LogoutPropagationFlowDescriptorSelector"
-          c:flows-ref="shibboleth.LogoutPropagationFlows" />
-
-    <!-- The import is at the bottom to avoid a depends-on in a user-editable file. -->
-    <import resource="../../conf/session-manager.xml" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="shibboleth.SessionIDGenerator"
+        class="net.shibboleth.utilities.java.support.security.SecureRandomIdentifierGenerationStrategy"
+        c:identifierSize="%{idp.session.idSize:32}" />
+
+    <bean id="shibboleth.DefaultSPSessionSerializerRegistry" abstract="true"
+            class="net.shibboleth.idp.session.SPSessionSerializerRegistry">
+        <property name="mappings">
+            <map>
+                <entry key="#{ T(net.shibboleth.idp.session.BasicSPSession) }">
+                    <bean class="net.shibboleth.idp.session.impl.BasicSPSessionSerializer"
+                        c:offset="%{idp.session.slop:PT0S}" />
+                </entry>
+                <entry key="#{ T(net.shibboleth.idp.saml.session.SAML1SPSession) }">
+                    <bean class="net.shibboleth.idp.saml.session.impl.SAML1SPSessionSerializer"
+                        c:offset="%{idp.session.slop:PT0S}" />
+                </entry>
+                <entry key="#{ T(net.shibboleth.idp.saml.session.SAML2SPSession) }">
+                    <bean class="net.shibboleth.idp.saml.session.impl.SAML2SPSessionSerializer"
+                        c:offset="%{idp.session.slop:PT0S}"
+                        p:parserPool-ref="shibboleth.ParserPool" />
+                </entry>
+                <entry key="#{T(net.shibboleth.idp.cas.session.impl.CASSPSession)}">
+                    <bean class="net.shibboleth.idp.cas.session.impl.CASSPSessionSerializer"
+                        c:offset="%{idp.session.slop:PT0S}" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+    
+    <bean id="shibboleth.DefaultSessionTypeProtocolMap"
+            class="org.springframework.beans.factory.config.MapFactoryBean" abstract="true">
+        <property name="sourceMap">
+            <map>
+                <entry key="#{T(net.shibboleth.idp.saml.session.SAML1SPSession)}">
+                    <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML11P_NS" />
+                </entry>
+                <entry key="#{T(net.shibboleth.idp.saml.session.SAML2SPSession)}">
+                    <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
+                </entry>
+                <entry key="#{T(net.shibboleth.idp.cas.session.impl.CASSPSession)}">
+                    <util:constant static-field="net.shibboleth.idp.cas.config.impl.AbstractProtocolConfiguration.PROTOCOL_URI" />
+                </entry>
+            </map>
+        </property>
+    </bean>
+    
+    <bean id="shibboleth.SessionManager" class="net.shibboleth.idp.session.impl.StorageBackedSessionManager"
+            depends-on="shibboleth.OpenSAMLConfig"
+            p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+            p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+            p:authenticationFlowDescriptors-ref="shibboleth.AvailableAuthenticationFlows"
+            p:cookieManager-ref="shibboleth.CookieManager"
+            p:storageService-ref="#{'%{idp.session.StorageService:shibboleth.ClientSessionStorageService}'.trim()}"
+            p:consistentAddress="%{idp.session.consistentAddress:true}"
+            p:sessionTimeout="%{idp.session.timeout:PT60M}"
+            p:sessionSlop="%{idp.session.slop:PT0S}"
+            p:maskStorageFailure="%{idp.session.maskStorageFailure:false}"
+            p:trackSPSessions="%{idp.session.trackSPSessions:false}"
+            p:secondaryServiceIndex="%{idp.session.secondaryServiceIndex:false}"
+            p:IDGenerator-ref="shibboleth.SessionIDGenerator"
+            p:SPSessionSerializerRegistry-ref="shibboleth.SPSessionSerializerRegistry" />
+
+    <!-- Built-in logout propagation flows. -->
+
+    <bean id="logoutprop/cas" class="net.shibboleth.idp.session.LogoutPropagationFlowDescriptor"
+          c:_0="#{ T(net.shibboleth.idp.cas.session.impl.CASSPSession) }" />
+
+    <bean id="logoutprop/saml2" class="net.shibboleth.idp.session.LogoutPropagationFlowDescriptor"
+          c:_0="#{ T(net.shibboleth.idp.saml.session.SAML2SPSession) }" />
+
+    <!-- Selector function used in logout-propagation UI and logout-propagation master flow -->
+
+    <bean id="shibboleth.LogoutPropagationFlowSelector"
+          class="net.shibboleth.idp.session.logic.LogoutPropagationFlowDescriptorSelector"
+          c:flows-ref="shibboleth.LogoutPropagationFlows" />
+
+    <!-- The import is at the bottom to avoid a depends-on in a user-editable file. -->
+    <import resource="../../conf/session-manager.xml" />
+
+</beans>
diff -rupN shibboleth-idp/system/conf/subject-c14n-system.xml shibboleth-idp/system/conf/subject-c14n-system.xml
--- shibboleth-idp/system/conf/subject-c14n-system.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/subject-c14n-system.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,96 +1,96 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <import resource="../../conf/c14n/subject-c14n.xml" />
-
-    <bean id="shibboleth.PostLoginSubjectCanonicalizationFlow" abstract="true"
-        class="net.shibboleth.idp.authn.SubjectCanonicalizationFlowDescriptor" />
-
-    <bean id="c14n/simple" parent="shibboleth.PostLoginSubjectCanonicalizationFlow">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.authn.impl.SimpleSubjectCanonicalization.ActivationCondition" />
-        </property>
-    </bean>
-
-    <bean id="c14n/x500" parent="shibboleth.PostLoginSubjectCanonicalizationFlow">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.authn.impl.X500SubjectCanonicalization.ActivationCondition" />
-        </property>
-    </bean>
-
-    <bean id="c14n/LegacyPrincipalConnector" class="net.shibboleth.idp.authn.SubjectCanonicalizationFlowDescriptor">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.LegacyCanonicalization.ActivationCondition" 
-                c:service-ref="shibboleth.AttributeResolverService"/>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.AbstractSAML1C14NFlowBean" abstract="true"
-            class="net.shibboleth.idp.saml.nameid.NameIDCanonicalizationFlowDescriptor">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization.ActivationCondition" />
-        </property>
-    </bean>
-
-    <bean id="shibboleth.AbstractSAML2C14NFlowBean" abstract="true"
-            class="net.shibboleth.idp.saml.nameid.NameIDCanonicalizationFlowDescriptor">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization.ActivationCondition" />
-        </property>
-    </bean>
-
-    <bean id="c14n/SAML2Persistent" parent="shibboleth.AbstractSAML2C14NFlowBean"
-        p:formats="#{ {'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent'} }" />
-
-    <bean id="c14n/SAML2Transient" parent="shibboleth.AbstractSAML2C14NFlowBean"
-        p:formats="#{ {'urn:oasis:names:tc:SAML:2.0:nameid-format:transient'} }" />
-    
-    <bean id="c14n/SAML2CryptoTransient" parent="shibboleth.AbstractSAML2C14NFlowBean"
-        p:formats="#{ {'urn:oasis:names:tc:SAML:2.0:nameid-format:transient'} }" />
-
-    <bean id="c14n/SAML1Transient" parent="shibboleth.AbstractSAML1C14NFlowBean"
-        p:formats="#{ {'urn:mace:shibboleth:1.0:nameIdentifier'} }" /> 
-
-    <bean id="c14n/SAML1CryptoTransient" parent="shibboleth.AbstractSAML1C14NFlowBean" 
-        p:formats="#{ {'urn:mace:shibboleth:1.0:nameIdentifier'} }" /> 
-
-    <bean id="c14n/SAML2Transform" parent="shibboleth.AbstractSAML2C14NFlowBean"
-            p:formats-ref="shibboleth.NameTransformFormats">
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="and">
-                <constructor-arg>
-                    <list>
-                        <bean class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization.ActivationCondition" />
-                        <ref bean="shibboleth.NameTransformPredicate" />
-                    </list>
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-               
-    <bean id="c14n/SAML1Transform" parent="shibboleth.AbstractSAML1C14NFlowBean"
-            p:formats-ref="shibboleth.NameTransformFormats"> 
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="and">
-                <constructor-arg>
-                    <list>
-                        <bean class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization.ActivationCondition" />
-                        <ref bean="shibboleth.NameTransformPredicate" />
-                    </list>
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-            
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <import resource="../../conf/c14n/subject-c14n.xml" />
+
+    <bean id="shibboleth.PostLoginSubjectCanonicalizationFlow" abstract="true"
+        class="net.shibboleth.idp.authn.SubjectCanonicalizationFlowDescriptor" />
+
+    <bean id="c14n/simple" parent="shibboleth.PostLoginSubjectCanonicalizationFlow">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.authn.impl.SimpleSubjectCanonicalization.ActivationCondition" />
+        </property>
+    </bean>
+
+    <bean id="c14n/x500" parent="shibboleth.PostLoginSubjectCanonicalizationFlow">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.authn.impl.X500SubjectCanonicalization.ActivationCondition" />
+        </property>
+    </bean>
+
+    <bean id="c14n/LegacyPrincipalConnector" class="net.shibboleth.idp.authn.SubjectCanonicalizationFlowDescriptor">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.LegacyCanonicalization.ActivationCondition" 
+                c:service-ref="shibboleth.AttributeResolverService"/>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.AbstractSAML1C14NFlowBean" abstract="true"
+            class="net.shibboleth.idp.saml.nameid.NameIDCanonicalizationFlowDescriptor">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization.ActivationCondition" />
+        </property>
+    </bean>
+
+    <bean id="shibboleth.AbstractSAML2C14NFlowBean" abstract="true"
+            class="net.shibboleth.idp.saml.nameid.NameIDCanonicalizationFlowDescriptor">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization.ActivationCondition" />
+        </property>
+    </bean>
+
+    <bean id="c14n/SAML2Persistent" parent="shibboleth.AbstractSAML2C14NFlowBean"
+        p:formats="#{ {'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent'} }" />
+
+    <bean id="c14n/SAML2Transient" parent="shibboleth.AbstractSAML2C14NFlowBean"
+        p:formats="#{ {'urn:oasis:names:tc:SAML:2.0:nameid-format:transient'} }" />
+    
+    <bean id="c14n/SAML2CryptoTransient" parent="shibboleth.AbstractSAML2C14NFlowBean"
+        p:formats="#{ {'urn:oasis:names:tc:SAML:2.0:nameid-format:transient'} }" />
+
+    <bean id="c14n/SAML1Transient" parent="shibboleth.AbstractSAML1C14NFlowBean"
+        p:formats="#{ {'urn:mace:shibboleth:1.0:nameIdentifier'} }" /> 
+
+    <bean id="c14n/SAML1CryptoTransient" parent="shibboleth.AbstractSAML1C14NFlowBean" 
+        p:formats="#{ {'urn:mace:shibboleth:1.0:nameIdentifier'} }" /> 
+
+    <bean id="c14n/SAML2Transform" parent="shibboleth.AbstractSAML2C14NFlowBean"
+            p:formats-ref="shibboleth.NameTransformFormats">
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="and">
+                <constructor-arg>
+                    <list>
+                        <bean class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization.ActivationCondition" />
+                        <ref bean="shibboleth.NameTransformPredicate" />
+                    </list>
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+               
+    <bean id="c14n/SAML1Transform" parent="shibboleth.AbstractSAML1C14NFlowBean"
+            p:formats-ref="shibboleth.NameTransformFormats"> 
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="and">
+                <constructor-arg>
+                    <list>
+                        <bean class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization.ActivationCondition" />
+                        <ref bean="shibboleth.NameTransformPredicate" />
+                    </list>
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+            
+</beans>
diff -rupN shibboleth-idp/system/conf/utilities.xml shibboleth-idp/system/conf/utilities.xml
--- shibboleth-idp/system/conf/utilities.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/utilities.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,254 +1,254 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="shibboleth.Pair" class="net.shibboleth.utilities.java.support.collection.Pair" abstract="true" />
-    
-    <bean id="shibboleth.CommaDelimStringArray"
-        class="org.springframework.util.StringUtils" factory-method="commaDelimitedListToStringArray" abstract="true" />
-    
-    <bean id="shibboleth.NonFailFastValidator"
-        class="net.shibboleth.idp.attribute.resolver.dc.NonFailFastValidator" lazy-init="true" />
-    
-    <bean id="shibboleth.Conditions.AND"
-        class="com.google.common.base.Predicates" factory-method="and" abstract="true" />
-    <bean id="shibboleth.Conditions.NOT"
-        class="com.google.common.base.Predicates" factory-method="not" abstract="true" />
-    <bean id="shibboleth.Conditions.OR"
-        class="com.google.common.base.Predicates" factory-method="or" abstract="true" />
-    
-    <bean id="shibboleth.Conditions.BrowserProfile"
-        class="org.opensaml.profile.logic.BrowserProfilePredicate" />
-    <bean id="shibboleth.Conditions.RelyingPartyId"
-        class="net.shibboleth.idp.profile.logic.RelyingPartyIdPredicate" abstract="true" />
-    <bean id="shibboleth.Conditions.Scripted"
-        class="net.shibboleth.idp.profile.logic.ScriptedPredicate" abstract="true" />
-    <bean id="shibboleth.Conditions.Expression"
-        class="net.shibboleth.idp.profile.logic.SpringExpressionPredicate" abstract="true" />
-    
-    <!-- Parent bean for building custom predicates that act on a RP's EntityDescriptor. -->
-    <bean id="shibboleth.Conditions.EntityDescriptor" abstract="true"
-            class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
-        <constructor-arg name="objectStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose">
-                <constructor-arg>
-                    <bean class="org.opensaml.saml.common.messaging.context.navigate.EntityDescriptorLookupFunction" />
-                </constructor-arg>
-                <constructor-arg>
-                    <bean class="net.shibboleth.idp.saml.profile.context.navigate.SAMLMetadataContextLookupFunction" />
-                </constructor-arg>
-            </bean>
-        </constructor-arg>
-    </bean>
-
-    <!-- Parent bean for building custom predicates that act on the principal name of the Subject. -->
-    <bean id="shibboleth.Conditions.SubjectName" abstract="true"
-            class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
-        <constructor-arg name="objectStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-                c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-        </constructor-arg>
-    </bean>
-    
-    
-    <bean id="shibboleth.Conditions.IssuingDelegatedAssertion"
-        class="net.shibboleth.idp.saml.saml2.profile.delegation.IssuingDelegatedAssertionPredicate" />
-    <bean id="shibboleth.Conditions.AllowedSAMLPresenters" abstract="true"
-        class="net.shibboleth.idp.saml.profile.config.logic.AllowedSAMLPresentersPredicate" />
-
-    <bean id="shibboleth.ContextFunctions.Scripted"
-        class="net.shibboleth.idp.profile.context.navigate.ScriptedContextLookupFunction" abstract="true" />
-    <bean id="shibboleth.ContextFunctions.Expression"
-        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction" abstract="true"
-        c:_0="#{ T(org.opensaml.profile.context.ProfileRequestContext) }" />
-
-    <bean id="shibboleth.MessageContextLookup.Inbound"
-        class="org.opensaml.profile.context.navigate.InboundMessageContextLookup" />
-    <bean id="shibboleth.MessageContextLookup.Outbound"
-        class="org.opensaml.profile.context.navigate.OutboundMessageContextLookup" />
-    <bean id="shibboleth.MessageLookup.SAMLObject"
-        class="org.opensaml.messaging.context.navigate.MessageLookup"
-        c:type="#{ T(org.opensaml.saml.common.SAMLObject) }" />
-    <bean id="shibboleth.MessageLookup.AuthnRequest"
-        class="org.opensaml.messaging.context.navigate.MessageLookup"
-        c:type="#{ T(org.opensaml.saml.saml2.core.AuthnRequest) }" />
-
-    <bean id="shibboleth.ChildLookup.RelyingParty"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.profile.context.RelyingPartyContext) }" />
-    <bean id="shibboleth.ChildLookup.MultiRelyingParty"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext) }" />
-        
-    <bean id="shibboleth.ChildLookup.SecurityParameters"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(org.opensaml.xmlsec.context.SecurityParametersContext) }" />
-    <bean id="shibboleth.ChildLookup.EncryptionParameters"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(org.opensaml.saml.saml2.profile.context.EncryptionContext) }" />
-    <bean id="shibboleth.ChildLookupOrCreate.SecurityParameters"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(org.opensaml.xmlsec.context.SecurityParametersContext) }"
-        c:createContext="true" />
-
-    <bean id="shibboleth.ChildLookupOrCreate.AttributeContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.attribute.context.AttributeContext) }"
-        c:createContext="true" />
-    <bean id="shibboleth.ChildLookupOrCreate.AttributeFilterContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.attribute.filter.context.AttributeFilterContext) }"
-        c:createContext="true" />
-    <bean id="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.ui.context.RelyingPartyUIContext) }"
-        c:createContext="true" />
-
-    <bean id="shibboleth.ChildLookup.AuthenticationContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.authn.context.AuthenticationContext) }" />
-    <bean id="shibboleth.ChildLookup.MultiFactorAuthenticationContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.authn.context.MultiFactorAuthenticationContext) }" />
-    <bean id="shibboleth.ChildLookup.SubjectContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.authn.context.SubjectContext) }" />
-    <bean id="shibboleth.ChildLookup.SubjectCanonicalizationContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.authn.context.SubjectCanonicalizationContext) }" />
-    <bean id="shibboleth.ChildLookup.SessionContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(net.shibboleth.idp.session.context.SessionContext) }" />
-        
-    <bean id="shibboleth.ChildLookup.SAMLBindingContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLBindingContext) }" />
-    <bean id="shibboleth.ChildLookup.SAMLProtocolContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLProtocolContext) }" />
-    <bean id="shibboleth.ChildLookup.SAMLPeerEntityContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLPeerEntityContext) }" />
-    <bean id="shibboleth.ChildLookup.SAMLMetadataContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLMetadataContext) }" />
-    <bean id="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
-        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLMessageInfoContext) }"
-        c:createContext="true" />
-
-    <bean id="shibboleth.ResponderIdLookup.Simple"
-        class="net.shibboleth.idp.profile.context.navigate.ResponderIdLookupFunction" />
-
-    <bean id="shibboleth.RelyingPartyIdLookup.Simple"
-        class="net.shibboleth.idp.profile.context.navigate.RelyingPartyIdLookupFunction" />
-
-    <bean id="shibboleth.PrincipalNameLookup.Subject"
-        class="net.shibboleth.idp.authn.context.navigate.SubjectContextPrincipalLookupFunction" />
-    <bean id="shibboleth.PrincipalNameLookup.Session"
-        class="net.shibboleth.idp.session.context.navigate.SessionContextPrincipalLookupFunction" />
-
-    <bean id="shibboleth.SignatureValidationConfigurationLookup"
-        class="net.shibboleth.idp.profile.config.navigate.SignatureValidationConfigurationLookupFunction"
-        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-    <bean id="shibboleth.SignatureSigningConfigurationLookup"
-        class="net.shibboleth.idp.profile.config.navigate.SignatureSigningConfigurationLookupFunction"
-        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-    <bean id="shibboleth.DecryptionConfigurationLookup"
-        class="net.shibboleth.idp.profile.config.navigate.DecryptionConfigurationLookupFunction"
-        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-    <bean id="shibboleth.EncryptionConfigurationLookup"
-        class="net.shibboleth.idp.profile.config.navigate.EncryptionConfigurationLookupFunction"
-        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-    <bean id="shibboleth.ClientTLSValidationConfigurationLookup"
-        class="net.shibboleth.idp.profile.config.navigate.ClientTLSValidationConfigurationLookupFunction"
-        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-    <bean id="shibboleth.SelfEncryptionConfigurationLookup"
-        class="net.shibboleth.idp.profile.config.navigate.SelfEncryptionConfigurationLookupFunction"
-        p:selfConfiguration="#{getObject('shibboleth.SelfEncryptionConfiguration')}"
-        p:includeProfileDefaultConfiguration="%{idp.encryption.self.includeProfileDefaultConfiguration:false}"
-        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-
-    <util:list id="shibboleth.SAML1Status.VersionMismatch">
-        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.VERSION_MISMATCH" />
-    </util:list>
-    
-    <util:list id="shibboleth.SAML1Status.Requester">
-        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUESTER" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML1Status.RequestDenied">
-        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUEST_DENIED" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML1Status.Responder">
-        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.RESPONDER" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.VersionMismatch">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.VERSION_MISMATCH" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.RequestDenied">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUEST_DENIED" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.RequestUnsupported">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUEST_UNSUPPORTED" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.UnsupportedBinding">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.UNSUPPORTED_BINDING" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.NoAuthnContext">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.NO_AUTHN_CONTEXT" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.AuthnFailed">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.AUTHN_FAILED" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.NoPassive">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.NO_PASSIVE" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.UnknownPrincipal">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.UNKNOWN_PRINCIPAL" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.InvalidNameIDPolicy">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.INVALID_NAMEID_POLICY" />
-    </util:list>
-
-    <util:list id="shibboleth.SAML2Status.ChannelBindingsError">
-        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
-        <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20CB_NS" />
-    </util:list>
-    
-    <util:constant id="shibboleth.SOAP.Client" static-field="org.opensaml.soap.soap11.FaultCode.CLIENT"/>
-    <util:constant id="shibboleth.SOAP.Server" static-field="org.opensaml.soap.soap11.FaultCode.SERVER"/>
-    <util:constant id="shibboleth.SOAP.MustUnderstand" static-field="org.opensaml.soap.soap11.FaultCode.MUST_UNDERSTAND"/>
-    <util:constant id="shibboleth.SOAP.VersionMismatch" static-field="org.opensaml.soap.soap11.FaultCode.VERSION_MISMATCH"/>
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="shibboleth.Pair" class="net.shibboleth.utilities.java.support.collection.Pair" abstract="true" />
+    
+    <bean id="shibboleth.CommaDelimStringArray"
+        class="org.springframework.util.StringUtils" factory-method="commaDelimitedListToStringArray" abstract="true" />
+    
+    <bean id="shibboleth.NonFailFastValidator"
+        class="net.shibboleth.idp.attribute.resolver.dc.NonFailFastValidator" lazy-init="true" />
+    
+    <bean id="shibboleth.Conditions.AND"
+        class="com.google.common.base.Predicates" factory-method="and" abstract="true" />
+    <bean id="shibboleth.Conditions.NOT"
+        class="com.google.common.base.Predicates" factory-method="not" abstract="true" />
+    <bean id="shibboleth.Conditions.OR"
+        class="com.google.common.base.Predicates" factory-method="or" abstract="true" />
+    
+    <bean id="shibboleth.Conditions.BrowserProfile"
+        class="org.opensaml.profile.logic.BrowserProfilePredicate" />
+    <bean id="shibboleth.Conditions.RelyingPartyId"
+        class="net.shibboleth.idp.profile.logic.RelyingPartyIdPredicate" abstract="true" />
+    <bean id="shibboleth.Conditions.Scripted"
+        class="net.shibboleth.idp.profile.logic.ScriptedPredicate" abstract="true" />
+    <bean id="shibboleth.Conditions.Expression"
+        class="net.shibboleth.idp.profile.logic.SpringExpressionPredicate" abstract="true" />
+    
+    <!-- Parent bean for building custom predicates that act on a RP's EntityDescriptor. -->
+    <bean id="shibboleth.Conditions.EntityDescriptor" abstract="true"
+            class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
+        <constructor-arg name="objectStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose">
+                <constructor-arg>
+                    <bean class="org.opensaml.saml.common.messaging.context.navigate.EntityDescriptorLookupFunction" />
+                </constructor-arg>
+                <constructor-arg>
+                    <bean class="net.shibboleth.idp.saml.profile.context.navigate.SAMLMetadataContextLookupFunction" />
+                </constructor-arg>
+            </bean>
+        </constructor-arg>
+    </bean>
+
+    <!-- Parent bean for building custom predicates that act on the principal name of the Subject. -->
+    <bean id="shibboleth.Conditions.SubjectName" abstract="true"
+            class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
+        <constructor-arg name="objectStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+                c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+        </constructor-arg>
+    </bean>
+    
+    
+    <bean id="shibboleth.Conditions.IssuingDelegatedAssertion"
+        class="net.shibboleth.idp.saml.saml2.profile.delegation.IssuingDelegatedAssertionPredicate" />
+    <bean id="shibboleth.Conditions.AllowedSAMLPresenters" abstract="true"
+        class="net.shibboleth.idp.saml.profile.config.logic.AllowedSAMLPresentersPredicate" />
+
+    <bean id="shibboleth.ContextFunctions.Scripted"
+        class="net.shibboleth.idp.profile.context.navigate.ScriptedContextLookupFunction" abstract="true" />
+    <bean id="shibboleth.ContextFunctions.Expression"
+        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction" abstract="true"
+        c:_0="#{ T(org.opensaml.profile.context.ProfileRequestContext) }" />
+
+    <bean id="shibboleth.MessageContextLookup.Inbound"
+        class="org.opensaml.profile.context.navigate.InboundMessageContextLookup" />
+    <bean id="shibboleth.MessageContextLookup.Outbound"
+        class="org.opensaml.profile.context.navigate.OutboundMessageContextLookup" />
+    <bean id="shibboleth.MessageLookup.SAMLObject"
+        class="org.opensaml.messaging.context.navigate.MessageLookup"
+        c:type="#{ T(org.opensaml.saml.common.SAMLObject) }" />
+    <bean id="shibboleth.MessageLookup.AuthnRequest"
+        class="org.opensaml.messaging.context.navigate.MessageLookup"
+        c:type="#{ T(org.opensaml.saml.saml2.core.AuthnRequest) }" />
+
+    <bean id="shibboleth.ChildLookup.RelyingParty"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.profile.context.RelyingPartyContext) }" />
+    <bean id="shibboleth.ChildLookup.MultiRelyingParty"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext) }" />
+        
+    <bean id="shibboleth.ChildLookup.SecurityParameters"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(org.opensaml.xmlsec.context.SecurityParametersContext) }" />
+    <bean id="shibboleth.ChildLookup.EncryptionParameters"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(org.opensaml.saml.saml2.profile.context.EncryptionContext) }" />
+    <bean id="shibboleth.ChildLookupOrCreate.SecurityParameters"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(org.opensaml.xmlsec.context.SecurityParametersContext) }"
+        c:createContext="true" />
+
+    <bean id="shibboleth.ChildLookupOrCreate.AttributeContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.attribute.context.AttributeContext) }"
+        c:createContext="true" />
+    <bean id="shibboleth.ChildLookupOrCreate.AttributeFilterContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.attribute.filter.context.AttributeFilterContext) }"
+        c:createContext="true" />
+    <bean id="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.ui.context.RelyingPartyUIContext) }"
+        c:createContext="true" />
+
+    <bean id="shibboleth.ChildLookup.AuthenticationContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.authn.context.AuthenticationContext) }" />
+    <bean id="shibboleth.ChildLookup.MultiFactorAuthenticationContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.authn.context.MultiFactorAuthenticationContext) }" />
+    <bean id="shibboleth.ChildLookup.SubjectContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.authn.context.SubjectContext) }" />
+    <bean id="shibboleth.ChildLookup.SubjectCanonicalizationContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.authn.context.SubjectCanonicalizationContext) }" />
+    <bean id="shibboleth.ChildLookup.SessionContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(net.shibboleth.idp.session.context.SessionContext) }" />
+        
+    <bean id="shibboleth.ChildLookup.SAMLBindingContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLBindingContext) }" />
+    <bean id="shibboleth.ChildLookup.SAMLProtocolContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLProtocolContext) }" />
+    <bean id="shibboleth.ChildLookup.SAMLPeerEntityContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLPeerEntityContext) }" />
+    <bean id="shibboleth.ChildLookup.SAMLMetadataContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLMetadataContext) }" />
+    <bean id="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
+        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLMessageInfoContext) }"
+        c:createContext="true" />
+
+    <bean id="shibboleth.ResponderIdLookup.Simple"
+        class="net.shibboleth.idp.profile.context.navigate.ResponderIdLookupFunction" />
+
+    <bean id="shibboleth.RelyingPartyIdLookup.Simple"
+        class="net.shibboleth.idp.profile.context.navigate.RelyingPartyIdLookupFunction" />
+
+    <bean id="shibboleth.PrincipalNameLookup.Subject"
+        class="net.shibboleth.idp.authn.context.navigate.SubjectContextPrincipalLookupFunction" />
+    <bean id="shibboleth.PrincipalNameLookup.Session"
+        class="net.shibboleth.idp.session.context.navigate.SessionContextPrincipalLookupFunction" />
+
+    <bean id="shibboleth.SignatureValidationConfigurationLookup"
+        class="net.shibboleth.idp.profile.config.navigate.SignatureValidationConfigurationLookupFunction"
+        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+    <bean id="shibboleth.SignatureSigningConfigurationLookup"
+        class="net.shibboleth.idp.profile.config.navigate.SignatureSigningConfigurationLookupFunction"
+        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+    <bean id="shibboleth.DecryptionConfigurationLookup"
+        class="net.shibboleth.idp.profile.config.navigate.DecryptionConfigurationLookupFunction"
+        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+    <bean id="shibboleth.EncryptionConfigurationLookup"
+        class="net.shibboleth.idp.profile.config.navigate.EncryptionConfigurationLookupFunction"
+        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+    <bean id="shibboleth.ClientTLSValidationConfigurationLookup"
+        class="net.shibboleth.idp.profile.config.navigate.ClientTLSValidationConfigurationLookupFunction"
+        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+    <bean id="shibboleth.SelfEncryptionConfigurationLookup"
+        class="net.shibboleth.idp.profile.config.navigate.SelfEncryptionConfigurationLookupFunction"
+        p:selfConfiguration="#{getObject('shibboleth.SelfEncryptionConfiguration')}"
+        p:includeProfileDefaultConfiguration="%{idp.encryption.self.includeProfileDefaultConfiguration:false}"
+        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+
+    <util:list id="shibboleth.SAML1Status.VersionMismatch">
+        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.VERSION_MISMATCH" />
+    </util:list>
+    
+    <util:list id="shibboleth.SAML1Status.Requester">
+        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUESTER" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML1Status.RequestDenied">
+        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUEST_DENIED" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML1Status.Responder">
+        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.RESPONDER" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.VersionMismatch">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.VERSION_MISMATCH" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.RequestDenied">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUEST_DENIED" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.RequestUnsupported">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUEST_UNSUPPORTED" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.UnsupportedBinding">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.UNSUPPORTED_BINDING" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.NoAuthnContext">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.NO_AUTHN_CONTEXT" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.AuthnFailed">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.AUTHN_FAILED" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.NoPassive">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.NO_PASSIVE" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.UnknownPrincipal">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.UNKNOWN_PRINCIPAL" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.InvalidNameIDPolicy">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.INVALID_NAMEID_POLICY" />
+    </util:list>
+
+    <util:list id="shibboleth.SAML2Status.ChannelBindingsError">
+        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
+        <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20CB_NS" />
+    </util:list>
+    
+    <util:constant id="shibboleth.SOAP.Client" static-field="org.opensaml.soap.soap11.FaultCode.CLIENT"/>
+    <util:constant id="shibboleth.SOAP.Server" static-field="org.opensaml.soap.soap11.FaultCode.SERVER"/>
+    <util:constant id="shibboleth.SOAP.MustUnderstand" static-field="org.opensaml.soap.soap11.FaultCode.MUST_UNDERSTAND"/>
+    <util:constant id="shibboleth.SOAP.VersionMismatch" static-field="org.opensaml.soap.soap11.FaultCode.VERSION_MISMATCH"/>
+    
+</beans>
diff -rupN shibboleth-idp/system/conf/webflow-config.xml shibboleth-idp/system/conf/webflow-config.xml
--- shibboleth-idp/system/conf/webflow-config.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/conf/webflow-config.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,199 +1,199 @@
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:webflow="http://www.springframework.org/schema/webflow-config"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <!-- Default flow mappings. -->
-    <bean id="shibboleth.DefaultFlowMap" lazy-init="true"
-            class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <!-- Abstract base flow for admin flows. -->
-                <entry key="admin.abstract" value="../system/flows/admin/admin-abstract-flow.xml"/>
-                
-                <!-- Status flow (location is for backward compatibility). -->
-                <entry key="status" value="../system/flows/admin/status-flow.xml" />
-        
-                <!-- Administrative and debugging flows. -->
-                <entry key="admin/resolvertest" value="../system/flows/admin/resolvertest-flow.xml" />
-                <entry key="admin/reload-service" value="../system/flows/admin/reload-service-flow.xml" />
-                <entry key="admin/reload-metadata" value="../system/flows/admin/reload-metadata-flow.xml" />
-                <entry key="admin/metrics" value="../system/flows/admin/metrics-flow.xml" />
-                <entry key="admin/storage" value="../system/flows/admin/storage-flow.xml" />
-                
-                <!-- Proprietary logout flow. -->
-                <entry key="Logout" value="../system/flows/logout/logout-flow.xml" />
-        
-                <!-- Logout propagation master flow. -->
-                <entry key="PropagateLogout" value="../system/flows/logout/logout-propagation-flow.xml" />
-        
-                <!-- Logout propagation delegate flows. -->
-                <entry key="logoutprop/cas" value="../system/flows/logout/propagation/cas-flow.xml" />
-                <entry key="logoutprop/saml2" value="../system/flows/logout/propagation/saml2-flow.xml" />
-        
-                <!-- Abstract flows underpinning SAML profiles. -->
-                <entry key="saml.abstract" value="../system/flows/saml/saml-abstract-flow.xml" />
-                <entry key="saml1.sso.abstract" value="../system/flows/saml/saml1/sso-abstract-flow.xml" />
-                <entry key="saml2.sso.abstract" value="../system/flows/saml/saml2/sso-abstract-flow.xml" />
-                <entry key="saml2.slo.front.abstract" value="../system/flows/saml/saml2/slo-front-abstract-flow.xml" />
-        
-                <!-- SAML profile flows. -->
-                <entry key="Shibboleth/SSO" value="../system/flows/saml/saml1/sso-unsolicited-flow.xml" />
-                <entry key="SAML1/SOAP/AttributeQuery" value="../system/flows/saml/saml1/attribute-query-flow.xml" />
-                <entry key="SAML1/SOAP/ArtifactResolution" value="../system/flows/saml/saml1/artifact-resolution-flow.xml" />
-                <entry key="SAML2/POST/SSO" value="../system/flows/saml/saml2/sso-post-flow.xml" />
-                <entry key="SAML2/POST-SimpleSign/SSO" value="../system/flows/saml/saml2/sso-post-flow.xml" />
-                <entry key="SAML2/Redirect/SSO" value="../system/flows/saml/saml2/sso-redirect-flow.xml" />
-                <entry key="SAML2/Unsolicited/SSO" value="../system/flows/saml/saml2/sso-unsolicited-flow.xml" />
-                <entry key="SAML2/SOAP/ECP" value="../system/flows/saml/saml2/sso-ecp-flow.xml" />
-                <entry key="SAML2/POST/SLO" value="../system/flows/saml/saml2/slo-post-flow.xml" />
-                <entry key="SAML2/POST-SimpleSign/SLO" value="../system/flows/saml/saml2/slo-post-flow.xml" />
-                <entry key="SAML2/Redirect/SLO" value="../system/flows/saml/saml2/slo-redirect-flow.xml" />
-                <entry key="SAML2/SOAP/SLO" value="../system/flows/saml/saml2/slo-back-flow.xml" />
-                <entry key="SAML2/SOAP/AttributeQuery" value="../system/flows/saml/saml2/attribute-query-flow.xml" />
-                <entry key="SAML2/SOAP/ArtifactResolution" value="../system/flows/saml/saml2/artifact-resolution-flow.xml" />
-                
-                <!-- Liberty IDWSF SSOS flow (for SAML 2 delegation) -->
-                <entry key="IDWSF/SSOS" value="../system/flows/saml/saml2/idwsf-ssos-flow.xml" />
-        
-                <!-- Master flow for authentication. -->
-                <entry key="authn.events" value="../conf/authn/authn-events-flow.xml" />
-                <entry key="authn.abstract" value="../system/flows/authn/authn-abstract-flow.xml" />
-                <entry key="authn-initial" value="../system/flows/authn/initial-authn-flow.xml" />
-                <entry key="authn" value="../system/flows/authn/authn-flow.xml" />
-        
-                <!-- Login methods. -->
-                <entry key="authn/IPAddress" value="../system/flows/authn/ipaddress-authn-flow.xml" />
-                <entry key="authn/RemoteUserInternal" value="../system/flows/authn/remoteuser-internal-authn-flow.xml" />
-                <entry key="authn/Password" value="../system/flows/authn/password-authn-flow.xml" />
-                <entry key="authn/RemoteUser" value="../system/flows/authn/remoteuser-authn-flow.xml" />
-                <entry key="authn/X509" value="../system/flows/authn/x509-authn-flow.xml" />
-                <entry key="authn/X509Internal" value="../system/flows/authn/x509-internal-authn-flow.xml" />
-                <entry key="authn/SPNEGO" value="../system/flows/authn/spnego-authn-flow.xml" />
-                <entry key="authn/External" value="../system/flows/authn/external-authn-flow.xml" />
-                <entry key="authn/Duo" value="../system/flows/authn/duo-authn-flow.xml" />
-                <entry key="authn/MFA" value="../system/flows/authn/mfa-authn-flow.xml" />
-          
-                <!-- Master flow for subject c14n. -->
-                <entry key="c14n.events" value="../conf/c14n/subject-c14n-events-flow.xml" />
-                <entry key="c14n.abstract" value="../system/flows/c14n/subject-c14n-abstract-flow.xml" />
-                <entry key="c14n" value="../system/flows/c14n/subject-c14n-flow.xml" />
-        
-                <!-- Standard post-login C14N methods. -->
-                <entry key="c14n/simple" value="../system/flows/c14n/simple-subject-c14n-flow.xml" />
-                <entry key="c14n/x500" value="../system/flows/c14n/x500-subject-c14n-flow.xml" />
-                <entry key="c14n/attribute" value="../system/flows/c14n/attribute-sourced-subject-c14n-flow.xml" />
-        
-                <!--
-                Standard SAML C14N methods, including one supporting legacy use of the attribute resolver.
-                These all map to the same flow, and they derive the bean ID of an action to run based on the
-                flow id after the slash.
-                -->
-                <entry key="c14n/SAML2Transient" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
-                <entry key="c14n/SAML2CryptoTransient" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
-                <entry key="c14n/SAML2Persistent" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
-                <entry key="c14n/SAML2Transform" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
-                <entry key="c14n/SAML1Transient" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
-                <entry key="c14n/SAML1CryptoTransient" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
-                <entry key="c14n/SAML1Transform" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
-                <entry key="c14n/LegacyPrincipalConnector" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
-        
-                <!-- Master intercept flow. -->
-                <entry key="intercept.events" value="../conf/intercept/intercept-events-flow.xml" />
-                <entry key="intercept.abstract" value="../system/flows/intercept/intercept-abstract-flow.xml" />
-                <entry key="intercept" value="../system/flows/intercept/intercept-flow.xml" />
-        
-                <!-- Built-in intercept flows. -->
-                <entry key="intercept/context-check" value="../system/flows/intercept/context-check-flow.xml" />
-                <entry key="intercept/expiring-password" value="../system/flows/intercept/expiring-password-flow.xml" />
-                <entry key="intercept/terms-of-use" value="../system/flows/intercept/terms-of-use-flow.xml" />
-                <entry key="intercept/attribute-release" value="../system/flows/intercept/attribute-release-flow.xml" />
-        
-                <!-- Inbound security processing of SAML messages, implemented as intercept flows. -->
-                <entry key="security-policy.abstract" value="../system/flows/saml/security-abstract-flow.xml" />
-                <entry key="intercept/security-policy/shibboleth-sso" value="../system/flows/saml/saml1/sso-security-flow.xml" />
-                <entry key="intercept/security-policy/saml2-sso" value="../system/flows/saml/saml2/sso-security-flow.xml" />
-                <entry key="intercept/security-policy/saml2-ecp" value="../system/flows/saml/saml2/ecp-security-flow.xml" />
-                <entry key="intercept/security-policy/saml2-slo" value="../system/flows/saml/saml2/slo-security-flow.xml" />
-                <entry key="intercept/security-policy/saml2-idwsf-ssos" value="../system/flows/saml/saml2/idwsf-ssos-security-flow.xml" />
-                <entry key="intercept/security-policy/saml-soap" value="../system/flows/saml/soap-security-flow.xml" />
-        
-                <!-- CAS protocol flows. -->
-                <entry key="cas.abstract" value="../system/flows/cas/cas-abstract-flow.xml" />
-                <entry key="cas.abstractValidate" value="../system/flows/cas/validate-abstract-flow.xml" />
-                <entry key="cas/login" value="../system/flows/cas/login/login-flow.xml" />
-                <entry key="cas/proxy" value="../system/flows/cas/proxy/proxy-flow.xml" />
-                <entry key="cas/serviceValidate" value="../system/flows/cas/serviceValidate/serviceValidate-flow.xml" />
-                <entry key="cas/proxyValidate" value="../system/flows/cas/proxyValidate/proxyValidate-flow.xml" />
-                <entry key="cas/samlValidate" value="../system/flows/cas/samlValidate/samlValidate-flow.xml" />
-                <entry key="cas/validate" value="../system/flows/cas/validate/validate-flow.xml" />
-                <entry key="cas/logout" value="../system/flows/logout/logout-flow.xml" />
-        
-                <!-- Client storage flows. -->
-                <entry key="client-storage/read" value="../system/flows/client-storage/client-storage-read-flow.xml" />
-                <entry key="client-storage/write" value="../system/flows/client-storage/client-storage-write-flow.xml" />
-            </map>
-        </property>
-    </bean>
-    
-    <!-- Default flow patterns with null values signifying use of the basePath on the registry to compute flow IDs. -->
-    <bean id="shibboleth.DefaultFlowPatterns" lazy-init="true"
-        class="org.springframework.beans.factory.config.MapFactoryBean">
-        <property name="sourceMap">
-            <map>
-                <!-- Load user flows out of config directory relative to base path property. -->
-                <entry key="/**/*-flow.xml">
-                    <null/>
-                </entry>
-                
-                <!-- Load plugin-defined flows from well-known classpath location. -->
-                <entry key="classpath*:/META-INF/net/shibboleth/idp/flows/**/*-flow.xml"
-                    value="/META-INF/net/shibboleth/idp/flows" />
-            </map>
-        </property>
-    </bean>
-    
-    <!-- Custom factory bean for a flow registry that works around various SWF limitations. -->
-    <bean id="flowRegistry"
-        class="net.shibboleth.idp.profile.spring.factory.FlowDefinitionRegistryFactoryBean"
-        p:flowBuilderServices-ref="flowBuilderServices"
-        p:basePath="%{idp.webflows:%{idp.home}/flows}"
-        p:parent="#{getObject('shibboleth.ParentFlowRegistry')}"
-        p:flowLocations="#{getObject('shibboleth.FlowMap') ?: getObject('shibboleth.DefaultFlowMap')}"
-        p:flowLocationPatterns="#{getObject('shibboleth.FlowPatterns') ?: getObject('shibboleth.DefaultFlowPatterns')}" />
-
-    <webflow:flow-executor id="flowExecutor">
-        <webflow:flow-execution-repository max-execution-snapshots="0" conversation-manager="conversationManager" />
-        <webflow:flow-execution-listeners>
-            <webflow:listener ref="profileRequestContextFlowExecutionListener"
-                              criteria="%{idp.profile.exposeProfileRequestContextInServletRequest:*}" />
-        </webflow:flow-execution-listeners>
-    </webflow:flow-executor>
-
-    <bean id="conversationManager" class="org.springframework.webflow.conversation.impl.SessionBindingConversationManager"
-        p:lockTimeoutSeconds="%{idp.webflow.timeout:30}" p:maxConversations="%{idp.webflow.maxConversations:5}" />
-
-    <webflow:flow-builder-services id="flowBuilderServices" view-factory-creator="mvcViewFactoryCreator" />
-
-    <bean id="mvcViewFactoryCreator" class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator"
-            p:useSpringBeanBinding="true">
-        <property name="viewResolvers">
-            <list>
-                <ref bean="shibboleth.VelocityViewResolver" />
-                <ref bean="shibboleth.InternalViewResolver" />
-            </list>
-        </property>
-    </bean>
-
-    <bean id="profileRequestContextFlowExecutionListener"
-          class="net.shibboleth.idp.profile.support.ProfileRequestContextFlowExecutionListener" />
-
-</beans>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:webflow="http://www.springframework.org/schema/webflow-config"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <!-- Default flow mappings. -->
+    <bean id="shibboleth.DefaultFlowMap" lazy-init="true"
+            class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <!-- Abstract base flow for admin flows. -->
+                <entry key="admin.abstract" value="../system/flows/admin/admin-abstract-flow.xml"/>
+                
+                <!-- Status flow (location is for backward compatibility). -->
+                <entry key="status" value="../system/flows/admin/status-flow.xml" />
+        
+                <!-- Administrative and debugging flows. -->
+                <entry key="admin/resolvertest" value="../system/flows/admin/resolvertest-flow.xml" />
+                <entry key="admin/reload-service" value="../system/flows/admin/reload-service-flow.xml" />
+                <entry key="admin/reload-metadata" value="../system/flows/admin/reload-metadata-flow.xml" />
+                <entry key="admin/metrics" value="../system/flows/admin/metrics-flow.xml" />
+                <entry key="admin/storage" value="../system/flows/admin/storage-flow.xml" />
+                
+                <!-- Proprietary logout flow. -->
+                <entry key="Logout" value="../system/flows/logout/logout-flow.xml" />
+        
+                <!-- Logout propagation master flow. -->
+                <entry key="PropagateLogout" value="../system/flows/logout/logout-propagation-flow.xml" />
+        
+                <!-- Logout propagation delegate flows. -->
+                <entry key="logoutprop/cas" value="../system/flows/logout/propagation/cas-flow.xml" />
+                <entry key="logoutprop/saml2" value="../system/flows/logout/propagation/saml2-flow.xml" />
+        
+                <!-- Abstract flows underpinning SAML profiles. -->
+                <entry key="saml.abstract" value="../system/flows/saml/saml-abstract-flow.xml" />
+                <entry key="saml1.sso.abstract" value="../system/flows/saml/saml1/sso-abstract-flow.xml" />
+                <entry key="saml2.sso.abstract" value="../system/flows/saml/saml2/sso-abstract-flow.xml" />
+                <entry key="saml2.slo.front.abstract" value="../system/flows/saml/saml2/slo-front-abstract-flow.xml" />
+        
+                <!-- SAML profile flows. -->
+                <entry key="Shibboleth/SSO" value="../system/flows/saml/saml1/sso-unsolicited-flow.xml" />
+                <entry key="SAML1/SOAP/AttributeQuery" value="../system/flows/saml/saml1/attribute-query-flow.xml" />
+                <entry key="SAML1/SOAP/ArtifactResolution" value="../system/flows/saml/saml1/artifact-resolution-flow.xml" />
+                <entry key="SAML2/POST/SSO" value="../system/flows/saml/saml2/sso-post-flow.xml" />
+                <entry key="SAML2/POST-SimpleSign/SSO" value="../system/flows/saml/saml2/sso-post-flow.xml" />
+                <entry key="SAML2/Redirect/SSO" value="../system/flows/saml/saml2/sso-redirect-flow.xml" />
+                <entry key="SAML2/Unsolicited/SSO" value="../system/flows/saml/saml2/sso-unsolicited-flow.xml" />
+                <entry key="SAML2/SOAP/ECP" value="../system/flows/saml/saml2/sso-ecp-flow.xml" />
+                <entry key="SAML2/POST/SLO" value="../system/flows/saml/saml2/slo-post-flow.xml" />
+                <entry key="SAML2/POST-SimpleSign/SLO" value="../system/flows/saml/saml2/slo-post-flow.xml" />
+                <entry key="SAML2/Redirect/SLO" value="../system/flows/saml/saml2/slo-redirect-flow.xml" />
+                <entry key="SAML2/SOAP/SLO" value="../system/flows/saml/saml2/slo-back-flow.xml" />
+                <entry key="SAML2/SOAP/AttributeQuery" value="../system/flows/saml/saml2/attribute-query-flow.xml" />
+                <entry key="SAML2/SOAP/ArtifactResolution" value="../system/flows/saml/saml2/artifact-resolution-flow.xml" />
+                
+                <!-- Liberty IDWSF SSOS flow (for SAML 2 delegation) -->
+                <entry key="IDWSF/SSOS" value="../system/flows/saml/saml2/idwsf-ssos-flow.xml" />
+        
+                <!-- Master flow for authentication. -->
+                <entry key="authn.events" value="../conf/authn/authn-events-flow.xml" />
+                <entry key="authn.abstract" value="../system/flows/authn/authn-abstract-flow.xml" />
+                <entry key="authn-initial" value="../system/flows/authn/initial-authn-flow.xml" />
+                <entry key="authn" value="../system/flows/authn/authn-flow.xml" />
+        
+                <!-- Login methods. -->
+                <entry key="authn/IPAddress" value="../system/flows/authn/ipaddress-authn-flow.xml" />
+                <entry key="authn/RemoteUserInternal" value="../system/flows/authn/remoteuser-internal-authn-flow.xml" />
+                <entry key="authn/Password" value="../system/flows/authn/password-authn-flow.xml" />
+                <entry key="authn/RemoteUser" value="../system/flows/authn/remoteuser-authn-flow.xml" />
+                <entry key="authn/X509" value="../system/flows/authn/x509-authn-flow.xml" />
+                <entry key="authn/X509Internal" value="../system/flows/authn/x509-internal-authn-flow.xml" />
+                <entry key="authn/SPNEGO" value="../system/flows/authn/spnego-authn-flow.xml" />
+                <entry key="authn/External" value="../system/flows/authn/external-authn-flow.xml" />
+                <entry key="authn/Duo" value="../system/flows/authn/duo-authn-flow.xml" />
+                <entry key="authn/MFA" value="../system/flows/authn/mfa-authn-flow.xml" />
+          
+                <!-- Master flow for subject c14n. -->
+                <entry key="c14n.events" value="../conf/c14n/subject-c14n-events-flow.xml" />
+                <entry key="c14n.abstract" value="../system/flows/c14n/subject-c14n-abstract-flow.xml" />
+                <entry key="c14n" value="../system/flows/c14n/subject-c14n-flow.xml" />
+        
+                <!-- Standard post-login C14N methods. -->
+                <entry key="c14n/simple" value="../system/flows/c14n/simple-subject-c14n-flow.xml" />
+                <entry key="c14n/x500" value="../system/flows/c14n/x500-subject-c14n-flow.xml" />
+                <entry key="c14n/attribute" value="../system/flows/c14n/attribute-sourced-subject-c14n-flow.xml" />
+        
+                <!--
+                Standard SAML C14N methods, including one supporting legacy use of the attribute resolver.
+                These all map to the same flow, and they derive the bean ID of an action to run based on the
+                flow id after the slash.
+                -->
+                <entry key="c14n/SAML2Transient" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
+                <entry key="c14n/SAML2CryptoTransient" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
+                <entry key="c14n/SAML2Persistent" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
+                <entry key="c14n/SAML2Transform" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
+                <entry key="c14n/SAML1Transient" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
+                <entry key="c14n/SAML1CryptoTransient" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
+                <entry key="c14n/SAML1Transform" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
+                <entry key="c14n/LegacyPrincipalConnector" value="../system/flows/c14n/subject-c14n-saml-default-flow.xml" />
+        
+                <!-- Master intercept flow. -->
+                <entry key="intercept.events" value="../conf/intercept/intercept-events-flow.xml" />
+                <entry key="intercept.abstract" value="../system/flows/intercept/intercept-abstract-flow.xml" />
+                <entry key="intercept" value="../system/flows/intercept/intercept-flow.xml" />
+        
+                <!-- Built-in intercept flows. -->
+                <entry key="intercept/context-check" value="../system/flows/intercept/context-check-flow.xml" />
+                <entry key="intercept/expiring-password" value="../system/flows/intercept/expiring-password-flow.xml" />
+                <entry key="intercept/terms-of-use" value="../system/flows/intercept/terms-of-use-flow.xml" />
+                <entry key="intercept/attribute-release" value="../system/flows/intercept/attribute-release-flow.xml" />
+        
+                <!-- Inbound security processing of SAML messages, implemented as intercept flows. -->
+                <entry key="security-policy.abstract" value="../system/flows/saml/security-abstract-flow.xml" />
+                <entry key="intercept/security-policy/shibboleth-sso" value="../system/flows/saml/saml1/sso-security-flow.xml" />
+                <entry key="intercept/security-policy/saml2-sso" value="../system/flows/saml/saml2/sso-security-flow.xml" />
+                <entry key="intercept/security-policy/saml2-ecp" value="../system/flows/saml/saml2/ecp-security-flow.xml" />
+                <entry key="intercept/security-policy/saml2-slo" value="../system/flows/saml/saml2/slo-security-flow.xml" />
+                <entry key="intercept/security-policy/saml2-idwsf-ssos" value="../system/flows/saml/saml2/idwsf-ssos-security-flow.xml" />
+                <entry key="intercept/security-policy/saml-soap" value="../system/flows/saml/soap-security-flow.xml" />
+        
+                <!-- CAS protocol flows. -->
+                <entry key="cas.abstract" value="../system/flows/cas/cas-abstract-flow.xml" />
+                <entry key="cas.abstractValidate" value="../system/flows/cas/validate-abstract-flow.xml" />
+                <entry key="cas/login" value="../system/flows/cas/login/login-flow.xml" />
+                <entry key="cas/proxy" value="../system/flows/cas/proxy/proxy-flow.xml" />
+                <entry key="cas/serviceValidate" value="../system/flows/cas/serviceValidate/serviceValidate-flow.xml" />
+                <entry key="cas/proxyValidate" value="../system/flows/cas/proxyValidate/proxyValidate-flow.xml" />
+                <entry key="cas/samlValidate" value="../system/flows/cas/samlValidate/samlValidate-flow.xml" />
+                <entry key="cas/validate" value="../system/flows/cas/validate/validate-flow.xml" />
+                <entry key="cas/logout" value="../system/flows/logout/logout-flow.xml" />
+        
+                <!-- Client storage flows. -->
+                <entry key="client-storage/read" value="../system/flows/client-storage/client-storage-read-flow.xml" />
+                <entry key="client-storage/write" value="../system/flows/client-storage/client-storage-write-flow.xml" />
+            </map>
+        </property>
+    </bean>
+    
+    <!-- Default flow patterns with null values signifying use of the basePath on the registry to compute flow IDs. -->
+    <bean id="shibboleth.DefaultFlowPatterns" lazy-init="true"
+        class="org.springframework.beans.factory.config.MapFactoryBean">
+        <property name="sourceMap">
+            <map>
+                <!-- Load user flows out of config directory relative to base path property. -->
+                <entry key="/**/*-flow.xml">
+                    <null/>
+                </entry>
+                
+                <!-- Load plugin-defined flows from well-known classpath location. -->
+                <entry key="classpath*:/META-INF/net/shibboleth/idp/flows/**/*-flow.xml"
+                    value="/META-INF/net/shibboleth/idp/flows" />
+            </map>
+        </property>
+    </bean>
+    
+    <!-- Custom factory bean for a flow registry that works around various SWF limitations. -->
+    <bean id="flowRegistry"
+        class="net.shibboleth.idp.profile.spring.factory.FlowDefinitionRegistryFactoryBean"
+        p:flowBuilderServices-ref="flowBuilderServices"
+        p:basePath="%{idp.webflows:%{idp.home}/flows}"
+        p:parent="#{getObject('shibboleth.ParentFlowRegistry')}"
+        p:flowLocations="#{getObject('shibboleth.FlowMap') ?: getObject('shibboleth.DefaultFlowMap')}"
+        p:flowLocationPatterns="#{getObject('shibboleth.FlowPatterns') ?: getObject('shibboleth.DefaultFlowPatterns')}" />
+
+    <webflow:flow-executor id="flowExecutor">
+        <webflow:flow-execution-repository max-execution-snapshots="0" conversation-manager="conversationManager" />
+        <webflow:flow-execution-listeners>
+            <webflow:listener ref="profileRequestContextFlowExecutionListener"
+                              criteria="%{idp.profile.exposeProfileRequestContextInServletRequest:*}" />
+        </webflow:flow-execution-listeners>
+    </webflow:flow-executor>
+
+    <bean id="conversationManager" class="org.springframework.webflow.conversation.impl.SessionBindingConversationManager"
+        p:lockTimeoutSeconds="%{idp.webflow.timeout:30}" p:maxConversations="%{idp.webflow.maxConversations:5}" />
+
+    <webflow:flow-builder-services id="flowBuilderServices" view-factory-creator="mvcViewFactoryCreator" />
+
+    <bean id="mvcViewFactoryCreator" class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator"
+            p:useSpringBeanBinding="true">
+        <property name="viewResolvers">
+            <list>
+                <ref bean="shibboleth.VelocityViewResolver" />
+                <ref bean="shibboleth.InternalViewResolver" />
+            </list>
+        </property>
+    </bean>
+
+    <bean id="profileRequestContextFlowExecutionListener"
+          class="net.shibboleth.idp.profile.support.ProfileRequestContextFlowExecutionListener" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/admin/admin-abstract-beans.xml shibboleth-idp/system/flows/admin/admin-abstract-beans.xml
--- shibboleth-idp/system/flows/admin/admin-abstract-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/admin-abstract-beans.xml	2019-07-01 13:03:37.437961579 -0400
@@ -1,118 +1,118 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId-ref="shibboleth.AdminProfileId" />
-
-    <bean id="PopulateMetricContext"
-        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
-        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
-    
-    <!--
-    The collection selection expression works because Spring converts the first member of a collection into
-    a compatible singleton for a property.
-    -->
-    <bean id="InitializeAdministrativeProfileContextTree"
-            class="net.shibboleth.idp.admin.impl.InitializeAdministrativeProfileContextTree" scope="prototype"
-            p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-            p:administrativeFlowDescriptor="#{@'shibboleth.AvailableAdminFlows'.?[id == @'shibboleth.AdminProfileId']}">
-        <property name="fallbackLanguages">
-            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
-        </property>
-    </bean>
-
-    <!-- Session / Authn /Authz -->
-
-    <bean id="PopulateClientStorageLoadContext"
-        class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext" scope="prototype"
-        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-    <bean id="InitializeAuthenticationContext"
-        class="net.shibboleth.idp.saml.profile.impl.InitializeAuthenticationContext" scope="prototype" />
-
-    <bean id="InitialAuthenticationFlag" class="java.lang.Boolean">
-        <constructor-arg value="#{ '%{idp.authn.flows.initial:}'.trim().length() gt 0 }" type="boolean" />
-    </bean>
-
-    <bean id="InitializeRequestedPrincipalContext"
-        class="net.shibboleth.idp.authn.impl.InitializeRequestedPrincipalContext" scope="prototype" />
-
-    <bean id="ResolveAttributes" class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
-        c:resolverService-ref="shibboleth.AttributeResolverService"
-        p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}" />
-
-    <bean id="PopulateClientStorageSaveContext"
-        class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext" scope="prototype"
-        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-    <!-- General access check that applies a fixed policy with no operation/resource. -->
-    
-    <bean id="CheckAccess"
-        class="org.opensaml.profile.action.impl.CheckAccess" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:accessControlService-ref="shibboleth.AccessControlService"
-        p:policyNameLookupStrategy-ref="DescriptorPolicyLookupStrategy"
-        p:operationLookupStrategy="#{getObject('shibboleth.AdminOperationLookupStrategy') ?: getObject('DefaultOperationLookupStrategy')}"
-        p:resourceLookupStrategy="#{getObject('shibboleth.AdminResourceLookupStrategy') ?: getObject('DefaultResourceLookupStrategy')}" />
-
-    <bean id="DescriptorPolicyLookupStrategy"
-        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction"
-        c:inClass="#{T(org.opensaml.profile.context.ProfileRequestContext)}"
-        c:outputType="#{T(java.lang.String)}"
-        c:expression="#input.getSubcontext(T(net.shibboleth.idp.profile.context.RelyingPartyContext)).getProfileConfig().getPolicyName()" />
-
-    <!-- Default operation/resource suppliers for access checks. -->
-    <bean id="DefaultOperationLookupStrategy" class="com.google.common.base.Functions" factory-method="constant">
-        <constructor-arg>
-            <null/>
-        </constructor-arg>
-    </bean>
-    <bean id="DefaultResourceLookupStrategy" class="com.google.common.base.Functions" factory-method="constant">
-        <constructor-arg>
-            <null/>
-        </constructor-arg>
-    </bean>
-
-    <!-- Logging -->
-
-    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
-            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
-        <property name="eventContextLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
-        </property>
-    </bean>
-
-    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
-    <import resource="../../conf/audit-system.xml" />
-        
-    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
-        p:activationCondition-ref="shibboleth.ProfileAuditingCondition"
-        p:formattingMap-ref="shibboleth.AuditFormattingMap"
-        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
-        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-    
-    <bean id="MapEventToView"
-        class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
-        p:defaultView-ref="shibboleth.DefaultErrorView"
-        p:eventMap="#{getObject('shibboleth.EventViewMap')}" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId-ref="shibboleth.AdminProfileId" />
+
+    <bean id="PopulateMetricContext"
+        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
+        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
+    
+    <!--
+    The collection selection expression works because Spring converts the first member of a collection into
+    a compatible singleton for a property.
+    -->
+    <bean id="InitializeAdministrativeProfileContextTree"
+            class="net.shibboleth.idp.admin.impl.InitializeAdministrativeProfileContextTree" scope="prototype"
+            p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+            p:administrativeFlowDescriptor="#{@'shibboleth.AvailableAdminFlows'.?[id == @'shibboleth.AdminProfileId']}">
+        <property name="fallbackLanguages">
+            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
+        </property>
+    </bean>
+
+    <!-- Session / Authn /Authz -->
+
+    <bean id="PopulateClientStorageLoadContext"
+        class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext" scope="prototype"
+        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+    <bean id="InitializeAuthenticationContext"
+        class="net.shibboleth.idp.saml.profile.impl.InitializeAuthenticationContext" scope="prototype" />
+
+    <bean id="InitialAuthenticationFlag" class="java.lang.Boolean">
+        <constructor-arg value="#{ '%{idp.authn.flows.initial:}'.trim().length() gt 0 }" type="boolean" />
+    </bean>
+
+    <bean id="InitializeRequestedPrincipalContext"
+        class="net.shibboleth.idp.authn.impl.InitializeRequestedPrincipalContext" scope="prototype" />
+
+    <bean id="ResolveAttributes" class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
+        c:resolverService-ref="shibboleth.AttributeResolverService"
+        p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}" />
+
+    <bean id="PopulateClientStorageSaveContext"
+        class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext" scope="prototype"
+        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+    <!-- General access check that applies a fixed policy with no operation/resource. -->
+    
+    <bean id="CheckAccess"
+        class="org.opensaml.profile.action.impl.CheckAccess" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:accessControlService-ref="shibboleth.AccessControlService"
+        p:policyNameLookupStrategy-ref="DescriptorPolicyLookupStrategy"
+        p:operationLookupStrategy="#{getObject('shibboleth.AdminOperationLookupStrategy') ?: getObject('DefaultOperationLookupStrategy')}"
+        p:resourceLookupStrategy="#{getObject('shibboleth.AdminResourceLookupStrategy') ?: getObject('DefaultResourceLookupStrategy')}" />
+
+    <bean id="DescriptorPolicyLookupStrategy"
+        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction"
+        c:inClass="#{T(org.opensaml.profile.context.ProfileRequestContext)}"
+        c:outputType="#{T(java.lang.String)}"
+        c:expression="#input.getSubcontext(T(net.shibboleth.idp.profile.context.RelyingPartyContext)).getProfileConfig().getPolicyName()" />
+
+    <!-- Default operation/resource suppliers for access checks. -->
+    <bean id="DefaultOperationLookupStrategy" class="com.google.common.base.Functions" factory-method="constant">
+        <constructor-arg>
+            <null/>
+        </constructor-arg>
+    </bean>
+    <bean id="DefaultResourceLookupStrategy" class="com.google.common.base.Functions" factory-method="constant">
+        <constructor-arg>
+            <null/>
+        </constructor-arg>
+    </bean>
+
+    <!-- Logging -->
+
+    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
+            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
+        <property name="eventContextLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
+        </property>
+    </bean>
+
+    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
+    <import resource="../../conf/audit-system.xml" />
+        
+    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
+        p:activationCondition-ref="shibboleth.ProfileAuditingCondition"
+        p:formattingMap-ref="shibboleth.AuditFormattingMap"
+        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
+        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+    
+    <bean id="MapEventToView"
+        class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
+        p:defaultView-ref="shibboleth.DefaultErrorView"
+        p:eventMap="#{getObject('shibboleth.EventViewMap')}" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/admin/admin-abstract-flow.xml shibboleth-idp/system/flows/admin/admin-abstract-flow.xml
--- shibboleth-idp/system/flows/admin/admin-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/admin-abstract-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,157 +1,157 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    abstract="true">
-
-    <!-- Abstract base for administrative flows. -->
-    
-    <on-start>
-        <evaluate expression="'ErrorView'"  result="flowScope.ErrorState"/>
-        <evaluate expression="'AuditedErrorView'"  result="flowScope.AuditedErrorState"/>
-    </on-start>
-    
-    <action-state id="DoAdminPreamble">
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="InitializeAdministrativeProfileContextTree" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CheckIfAuthenticationNeeded" />
-        
-        <on-exit>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.RelyingPartyContext))" result="flowScope.relyingPartyContext" />
-        </on-exit>
-    </action-state>
-
-    <!-- Conditional check for user authentication. -->
-    <decision-state id="CheckIfAuthenticationNeeded">
-        <if test="relyingPartyContext.getProfileConfig().isAuthenticated()"
-            then="PopulateClientStorageLoadContext" else="DoProfileWork" />
-    </decision-state>
-
-    <!-- Authentication sequence includes load/save of client storage. -->
-    
-    <action-state id="PopulateClientStorageLoadContext">
-        <evaluate expression="PopulateClientStorageLoadContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageLoad" />
-        <transition on="NoLoadNeeded" to="CheckInitialAuthentication" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckInitialAuthentication"/>
-    </subflow-state>
-    
-    <decision-state id="CheckInitialAuthentication">
-        <if test="InitialAuthenticationFlag" then="PreInitialSetup" else="PostInitialSetup" />
-    </decision-state>
-
-    <action-state id="PreInitialSetup">
-        <evaluate expression="InitializeAuthenticationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DoInitialAuthenticationSubflow" />
-    </action-state>
-
-    <subflow-state id="DoInitialAuthenticationSubflow" subflow="authn-initial">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="PostInitialSetup" />
-    </subflow-state>
-    
-    <action-state id="PostInitialSetup">
-        <evaluate expression="InitializeAuthenticationContext" />
-        <evaluate expression="InitializeRequestedPrincipalContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DoAuthenticationSubflow" />
-    </action-state>
-
-    <subflow-state id="DoAuthenticationSubflow" subflow="authn">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ResolveAttributes" />
-        <transition on="RestartAuthentication" to="PostInitialSetup" />
-    </subflow-state>
-    
-    <decision-state id="ResolveAttributes">
-        <if test="relyingPartyContext.getProfileConfig().resolveAttributes()"
-            then="AttributeResolution"
-            else="PopulateClientStorageSaveContext" />
-    </decision-state>
-    
-    <action-state id="AttributeResolution">
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PopulateClientStorageSaveContext" />
-    </action-state>
-
-    <action-state id="PopulateClientStorageSaveContext">
-        <evaluate expression="PopulateClientStorageSaveContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageSave" />
-        <transition on="NoSaveNeeded" to="DoProfileWork" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="DoProfileWork"/>
-    </subflow-state>
-
-    <!-- DoProfileWork in the child flow performs all the subsequent work of the flow. -->
-
-    <!-- Passthrough state if an exception is thrown. -->
-
-    <action-state id="LogRuntimeException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        </on-entry>
-        <evaluate expression="'RuntimeException'" />
-        <transition to="HandleError" />
-    </action-state>
-
-    <!-- Unsuccessful terminal states. -->
-    
-    <decision-state id="HandleError">
-        <on-entry>
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <if test="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').containsKey(currentEvent.id) and flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').get(currentEvent.id)"
-            then="#{AuditedErrorState}" else="#{ErrorState}" />
-    </decision-state>
-
-    <end-state id="AuditedErrorView" view="#{MapEventToView.apply(currentEvent)}">
-        <on-entry>
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <end-state id="ErrorView" view="#{MapEventToView.apply(currentEvent)}">
-        <on-entry>
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <!-- Default is to turn non-proceed events into an error. -->
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleError" />
-    </global-transitions>
-
-    <bean-import resource="admin-abstract-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    abstract="true">
+
+    <!-- Abstract base for administrative flows. -->
+    
+    <on-start>
+        <evaluate expression="'ErrorView'"  result="flowScope.ErrorState"/>
+        <evaluate expression="'AuditedErrorView'"  result="flowScope.AuditedErrorState"/>
+    </on-start>
+    
+    <action-state id="DoAdminPreamble">
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="InitializeAdministrativeProfileContextTree" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CheckIfAuthenticationNeeded" />
+        
+        <on-exit>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.RelyingPartyContext))" result="flowScope.relyingPartyContext" />
+        </on-exit>
+    </action-state>
+
+    <!-- Conditional check for user authentication. -->
+    <decision-state id="CheckIfAuthenticationNeeded">
+        <if test="relyingPartyContext.getProfileConfig().isAuthenticated()"
+            then="PopulateClientStorageLoadContext" else="DoProfileWork" />
+    </decision-state>
+
+    <!-- Authentication sequence includes load/save of client storage. -->
+    
+    <action-state id="PopulateClientStorageLoadContext">
+        <evaluate expression="PopulateClientStorageLoadContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageLoad" />
+        <transition on="NoLoadNeeded" to="CheckInitialAuthentication" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckInitialAuthentication"/>
+    </subflow-state>
+    
+    <decision-state id="CheckInitialAuthentication">
+        <if test="InitialAuthenticationFlag" then="PreInitialSetup" else="PostInitialSetup" />
+    </decision-state>
+
+    <action-state id="PreInitialSetup">
+        <evaluate expression="InitializeAuthenticationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DoInitialAuthenticationSubflow" />
+    </action-state>
+
+    <subflow-state id="DoInitialAuthenticationSubflow" subflow="authn-initial">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="PostInitialSetup" />
+    </subflow-state>
+    
+    <action-state id="PostInitialSetup">
+        <evaluate expression="InitializeAuthenticationContext" />
+        <evaluate expression="InitializeRequestedPrincipalContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DoAuthenticationSubflow" />
+    </action-state>
+
+    <subflow-state id="DoAuthenticationSubflow" subflow="authn">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ResolveAttributes" />
+        <transition on="RestartAuthentication" to="PostInitialSetup" />
+    </subflow-state>
+    
+    <decision-state id="ResolveAttributes">
+        <if test="relyingPartyContext.getProfileConfig().resolveAttributes()"
+            then="AttributeResolution"
+            else="PopulateClientStorageSaveContext" />
+    </decision-state>
+    
+    <action-state id="AttributeResolution">
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PopulateClientStorageSaveContext" />
+    </action-state>
+
+    <action-state id="PopulateClientStorageSaveContext">
+        <evaluate expression="PopulateClientStorageSaveContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageSave" />
+        <transition on="NoSaveNeeded" to="DoProfileWork" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="DoProfileWork"/>
+    </subflow-state>
+
+    <!-- DoProfileWork in the child flow performs all the subsequent work of the flow. -->
+
+    <!-- Passthrough state if an exception is thrown. -->
+
+    <action-state id="LogRuntimeException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        </on-entry>
+        <evaluate expression="'RuntimeException'" />
+        <transition to="HandleError" />
+    </action-state>
+
+    <!-- Unsuccessful terminal states. -->
+    
+    <decision-state id="HandleError">
+        <on-entry>
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <if test="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').containsKey(currentEvent.id) and flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').get(currentEvent.id)"
+            then="#{AuditedErrorState}" else="#{ErrorState}" />
+    </decision-state>
+
+    <end-state id="AuditedErrorView" view="#{MapEventToView.apply(currentEvent)}">
+        <on-entry>
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <end-state id="ErrorView" view="#{MapEventToView.apply(currentEvent)}">
+        <on-entry>
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <!-- Default is to turn non-proceed events into an error. -->
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleError" />
+    </global-transitions>
+
+    <bean-import resource="admin-abstract-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/admin/metrics-beans.xml shibboleth-idp/system/flows/admin/metrics-beans.xml
--- shibboleth-idp/system/flows/admin/metrics-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/metrics-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,45 +1,45 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <!-- Profile ID for flow. -->    
-    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
-        c:_0="http://shibboleth.net/ns/profiles/metrics" />
-
-    <!-- Default operation/resource suppliers for access checks. -->
-    
-    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
-        factory-method="constant" c:_0="read" />
-        
-    <bean id="shibboleth.AdminResourceLookupStrategy" parent="shibboleth.ContextFunctions.Expression"
-        c:outputType="#{T(java.lang.String)}"
-        c:expression="#input.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext)).getRequestContext().getFlowScope().get('metricId')" />
-
-    <!-- Work beans. -->
-
-    <bean id="OutputMetrics"
-        class="net.shibboleth.idp.admin.impl.OutputMetrics" scope="prototype"
-        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-        p:metricFilter-ref="shibboleth.metrics.LoggerDrivenMetricFilter"
-        p:metricRegistry-ref="shibboleth.metrics.MetricRegistry"
-        p:metricFilterMap-ref="shibboleth.metrics.MetricGroups"
-        p:allowedOrigin="#{getObject('shibboleth.metrics.AllowedOrigin')}"
-        p:JSONPCallbackName="#{getObject('shibboleth.metrics.JSONPCallback')}"
-        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}" />
-        
-    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <!-- Profile ID for flow. -->    
+    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
+        c:_0="http://shibboleth.net/ns/profiles/metrics" />
+
+    <!-- Default operation/resource suppliers for access checks. -->
+    
+    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
+        factory-method="constant" c:_0="read" />
+        
+    <bean id="shibboleth.AdminResourceLookupStrategy" parent="shibboleth.ContextFunctions.Expression"
+        c:outputType="#{T(java.lang.String)}"
+        c:expression="#input.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext)).getRequestContext().getFlowScope().get('metricId')" />
+
+    <!-- Work beans. -->
+
+    <bean id="OutputMetrics"
+        class="net.shibboleth.idp.admin.impl.OutputMetrics" scope="prototype"
+        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+        p:metricFilter-ref="shibboleth.metrics.LoggerDrivenMetricFilter"
+        p:metricRegistry-ref="shibboleth.metrics.MetricRegistry"
+        p:metricFilterMap-ref="shibboleth.metrics.MetricGroups"
+        p:allowedOrigin="#{getObject('shibboleth.metrics.AllowedOrigin')}"
+        p:JSONPCallbackName="#{getObject('shibboleth.metrics.JSONPCallback')}"
+        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}" />
+        
+    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/admin/metrics-flow.xml shibboleth-idp/system/flows/admin/metrics-flow.xml
--- shibboleth-idp/system/flows/admin/metrics-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/metrics-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,41 +1,41 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="admin.abstract">
-
-    <!-- Start action. -->
-
-    <on-start>
-        <!-- Extract PATH_INFO containing metric identifier. -->
-        <evaluate expression="externalContext.getNativeRequest().getPathInfo()" result="flowScope.pathInfo" />
-        <evaluate expression="flowRequestContext.getActiveFlow().getId()" result="flowScope.flowId" />
-        <evaluate expression="pathInfo.length() gt flowId.length() + 2 ? T(net.shibboleth.utilities.java.support.net.URISupport).doURLDecode(pathInfo.substring(flowId.length() + 2)) : 'all'" result="flowScope.metricId" />
-    </on-start>
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <!-- Branch to determine if authentication is required. -->
-        <transition on="proceed" to="DoAdminPreamble" />
-    </action-state>
-
-    <!-- Resume actual flow processing. -->
-
-    <action-state id="DoProfileWork">
-        <evaluate expression="CheckAccess" />
-        <evaluate expression="OutputMetrics" />
-        <evaluate expression="RecordResponseComplete" />
-        <evaluate expression="WriteAuditLog" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="success" />
-    </action-state>
-    
-    <!-- Terminus -->
-
-    <end-state id="success" />
-
-    <bean-import resource="metrics-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="admin.abstract">
+
+    <!-- Start action. -->
+
+    <on-start>
+        <!-- Extract PATH_INFO containing metric identifier. -->
+        <evaluate expression="externalContext.getNativeRequest().getPathInfo()" result="flowScope.pathInfo" />
+        <evaluate expression="flowRequestContext.getActiveFlow().getId()" result="flowScope.flowId" />
+        <evaluate expression="pathInfo.length() gt flowId.length() + 2 ? T(net.shibboleth.utilities.java.support.net.URISupport).doURLDecode(pathInfo.substring(flowId.length() + 2)) : 'all'" result="flowScope.metricId" />
+    </on-start>
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <!-- Branch to determine if authentication is required. -->
+        <transition on="proceed" to="DoAdminPreamble" />
+    </action-state>
+
+    <!-- Resume actual flow processing. -->
+
+    <action-state id="DoProfileWork">
+        <evaluate expression="CheckAccess" />
+        <evaluate expression="OutputMetrics" />
+        <evaluate expression="RecordResponseComplete" />
+        <evaluate expression="WriteAuditLog" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="success" />
+    </action-state>
+    
+    <!-- Terminus -->
+
+    <end-state id="success" />
+
+    <bean-import resource="metrics-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/admin/reload-metadata-beans.xml shibboleth-idp/system/flows/admin/reload-metadata-beans.xml
--- shibboleth-idp/system/flows/admin/reload-metadata-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/reload-metadata-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,42 +1,42 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <!-- Profile ID for flow. -->    
-    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
-        c:_0="http://shibboleth.net/ns/profiles/reload-metadata" />
-
-    <!-- Default operation/resource suppliers for access checks. -->
-    
-    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
-        factory-method="constant" c:_0="reload" />
-        
-    <bean id="shibboleth.AdminResourceLookupStrategy"
-        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction"
-        c:inClass="#{T(org.opensaml.profile.context.ProfileRequestContext)}"
-        c:outputType="#{T(java.lang.String)}"
-        c:expression="#input.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext)).getRequestContext().getFlowScope().get('resolverId')" />
-
-    <!-- Work beans. -->
-
-    <bean id="ReloadMetadata"
-        class="net.shibboleth.idp.saml.profile.impl.ReloadMetadata" scope="prototype"
-        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-        p:metadataResolver-ref="shibboleth.MetadataResolverService" />
-        
-    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <!-- Profile ID for flow. -->    
+    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
+        c:_0="http://shibboleth.net/ns/profiles/reload-metadata" />
+
+    <!-- Default operation/resource suppliers for access checks. -->
+    
+    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
+        factory-method="constant" c:_0="reload" />
+        
+    <bean id="shibboleth.AdminResourceLookupStrategy"
+        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction"
+        c:inClass="#{T(org.opensaml.profile.context.ProfileRequestContext)}"
+        c:outputType="#{T(java.lang.String)}"
+        c:expression="#input.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext)).getRequestContext().getFlowScope().get('resolverId')" />
+
+    <!-- Work beans. -->
+
+    <bean id="ReloadMetadata"
+        class="net.shibboleth.idp.saml.profile.impl.ReloadMetadata" scope="prototype"
+        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+        p:metadataResolver-ref="shibboleth.MetadataResolverService" />
+        
+    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/admin/reload-metadata-flow.xml shibboleth-idp/system/flows/admin/reload-metadata-flow.xml
--- shibboleth-idp/system/flows/admin/reload-metadata-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/reload-metadata-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,39 +1,39 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="admin.abstract">
-
-    <!-- Start action. -->
-
-    <on-start>
-        <!-- Extract 'id' parameter in case authentication disturbs the URL. -->
-        <evaluate expression="T(net.shibboleth.utilities.java.support.primitive.StringSupport).trimOrNull(externalContext.getNativeRequest().getParameter('id'))" result="flowScope.resolverId" />
-    </on-start>
-        
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <!-- Branch to determine if authentication is required. -->
-        <transition on="proceed" to="DoAdminPreamble" />
-    </action-state>
-
-    <!-- Resume actual flow processing. -->
-
-    <action-state id="DoProfileWork">
-        <evaluate expression="CheckAccess" />
-        <evaluate expression="ReloadMetadata" />
-        <evaluate expression="RecordResponseComplete" />
-        <evaluate expression="WriteAuditLog" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="success" />
-    </action-state>
-    
-    <!-- Terminus -->
-
-    <end-state id="success" />
-
-    <bean-import resource="reload-metadata-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="admin.abstract">
+
+    <!-- Start action. -->
+
+    <on-start>
+        <!-- Extract 'id' parameter in case authentication disturbs the URL. -->
+        <evaluate expression="T(net.shibboleth.utilities.java.support.primitive.StringSupport).trimOrNull(externalContext.getNativeRequest().getParameter('id'))" result="flowScope.resolverId" />
+    </on-start>
+        
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <!-- Branch to determine if authentication is required. -->
+        <transition on="proceed" to="DoAdminPreamble" />
+    </action-state>
+
+    <!-- Resume actual flow processing. -->
+
+    <action-state id="DoProfileWork">
+        <evaluate expression="CheckAccess" />
+        <evaluate expression="ReloadMetadata" />
+        <evaluate expression="RecordResponseComplete" />
+        <evaluate expression="WriteAuditLog" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="success" />
+    </action-state>
+    
+    <!-- Terminus -->
+
+    <end-state id="success" />
+
+    <bean-import resource="reload-metadata-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/admin/reload-service-beans.xml shibboleth-idp/system/flows/admin/reload-service-beans.xml
--- shibboleth-idp/system/flows/admin/reload-service-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/reload-service-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,41 +1,41 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <!-- Profile ID for flow. -->    
-    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
-        c:_0="http://shibboleth.net/ns/profiles/reload-service-configuration" />
-
-    <!-- Default operation/resource suppliers for access checks. -->
-    
-    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
-        factory-method="constant" c:_0="reload" />
-        
-    <bean id="shibboleth.AdminResourceLookupStrategy"
-        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction"
-        c:inClass="#{T(org.opensaml.profile.context.ProfileRequestContext)}"
-        c:outputType="#{T(java.lang.String)}"
-        c:expression="#input.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext)).getRequestContext().getFlowScope().get('serviceId')" />
-
-    <!-- Work beans. -->
-
-    <bean id="ReloadServiceConfiguration"
-        class="net.shibboleth.idp.profile.impl.ReloadServiceConfiguration" scope="prototype"
-        p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
-        
-    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <!-- Profile ID for flow. -->    
+    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
+        c:_0="http://shibboleth.net/ns/profiles/reload-service-configuration" />
+
+    <!-- Default operation/resource suppliers for access checks. -->
+    
+    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
+        factory-method="constant" c:_0="reload" />
+        
+    <bean id="shibboleth.AdminResourceLookupStrategy"
+        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction"
+        c:inClass="#{T(org.opensaml.profile.context.ProfileRequestContext)}"
+        c:outputType="#{T(java.lang.String)}"
+        c:expression="#input.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext)).getRequestContext().getFlowScope().get('serviceId')" />
+
+    <!-- Work beans. -->
+
+    <bean id="ReloadServiceConfiguration"
+        class="net.shibboleth.idp.profile.impl.ReloadServiceConfiguration" scope="prototype"
+        p:httpServletResponse-ref="shibboleth.HttpServletResponse" />
+        
+    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/admin/reload-service-flow.xml shibboleth-idp/system/flows/admin/reload-service-flow.xml
--- shibboleth-idp/system/flows/admin/reload-service-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/reload-service-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,39 +1,39 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="admin.abstract">
-
-    <!-- Start action. -->
-
-    <on-start>
-        <!-- Extract 'id' parameter in case authentication disturbs the URL. -->
-        <evaluate expression="T(net.shibboleth.utilities.java.support.primitive.StringSupport).trimOrNull(externalContext.getNativeRequest().getParameter('id'))" result="flowScope.serviceId" />
-    </on-start>
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <!-- Branch to determine if authentication is required. -->
-        <transition on="proceed" to="DoAdminPreamble" />
-    </action-state>
-
-    <!-- Resume actual flow processing. -->
-
-    <action-state id="DoProfileWork">
-        <evaluate expression="CheckAccess" />
-        <evaluate expression="ReloadServiceConfiguration" />
-        <evaluate expression="RecordResponseComplete" />
-        <evaluate expression="WriteAuditLog" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="success" />
-    </action-state>
-    
-    <!-- Terminus -->
-
-    <end-state id="success" />
-
-    <bean-import resource="reload-service-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="admin.abstract">
+
+    <!-- Start action. -->
+
+    <on-start>
+        <!-- Extract 'id' parameter in case authentication disturbs the URL. -->
+        <evaluate expression="T(net.shibboleth.utilities.java.support.primitive.StringSupport).trimOrNull(externalContext.getNativeRequest().getParameter('id'))" result="flowScope.serviceId" />
+    </on-start>
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <!-- Branch to determine if authentication is required. -->
+        <transition on="proceed" to="DoAdminPreamble" />
+    </action-state>
+
+    <!-- Resume actual flow processing. -->
+
+    <action-state id="DoProfileWork">
+        <evaluate expression="CheckAccess" />
+        <evaluate expression="ReloadServiceConfiguration" />
+        <evaluate expression="RecordResponseComplete" />
+        <evaluate expression="WriteAuditLog" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="success" />
+    </action-state>
+    
+    <!-- Terminus -->
+
+    <end-state id="success" />
+
+    <bean-import resource="reload-service-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/admin/resolvertest-beans.xml shibboleth-idp/system/flows/admin/resolvertest-beans.xml
--- shibboleth-idp/system/flows/admin/resolvertest-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/resolvertest-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,199 +1,199 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <!-- Profile ID for flow. -->    
-    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
-        c:_0="http://shibboleth.net/ns/profiles/resolvertest" />
-
-    <!-- Default operation/resource suppliers for access checks. -->
-    
-    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
-        factory-method="constant" c:_0="read" />
-        
-    <bean id="shibboleth.AdminResourceLookupStrategy"
-        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction"
-        c:inClass="#{T(org.opensaml.profile.context.ProfileRequestContext)}"
-        c:outputType="#{T(java.lang.String)}"
-        c:expression="'subject/' + #input.getInboundMessageContext().getMessage().getPrincipal() + '/attributes'" />
-        
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="%{idp.resolvertest.decoderClass:net.shibboleth.idp.profile.impl.ResolverTestRequestDecoder}"
-                    scope="prototype">
-                <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
-            </bean>
-        </constructor-arg>
-    </bean>
-    
-    <bean id="PostDecodePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext">
-        <property name="fieldExtractors">
-            <map>
-                <entry>
-                    <key>
-                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.PROTOCOL"/>
-                    </key>
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <bean class="com.google.common.base.Functions" factory-method="compose">
-                                <constructor-arg name="g">
-                                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLProtocolContextProtocolFunction" />
-                                </constructor-arg>
-                                <constructor-arg name="f">
-                                    <ref bean="shibboleth.ChildLookup.SAMLProtocolContext" />
-                                </constructor-arg>
-                            </bean>
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <ref bean="shibboleth.MessageContextLookup.Inbound" />
-                        </constructor-arg>
-                    </bean>
-                </entry>
-            </map>
-        </property>
-    </bean>
-    
-    <bean id="SAMLMetadataLookup"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler" scope="prototype">
-                <property name="roleDescriptorResolver">
-                    <bean class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
-                        c:mdResolver-ref="shibboleth.MetadataResolver" />
-                </property>
-            </bean>
-        </constructor-arg>
-    </bean>
-    
-    <bean id="SAMLPopulateAttributeConsumingService"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.impl.SAMLAddAttributeConsumingServiceHandler" scope="prototype" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="InitializeRelyingPartyContexFromSAMLPeer"
-        class="net.shibboleth.idp.saml.profile.impl.InitializeRelyingPartyContextFromSAMLPeer" scope="prototype" />
-
-    <bean id="SelectRelyingPartyConfiguration"
-        class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration" scope="prototype"
-        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-    
-    <bean id="PostLookupPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostLookupAuditExtractors') ?: getObject('shibboleth.DefaultPostLookupAuditExtractors')}" />
-
-    <bean id="PopulateSubjectContext"
-            class="net.shibboleth.idp.profile.impl.PopulateSubjectContext" scope="prototype">
-        <property name="principalNameLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.impl.ResolverTestPrincipalLookup" />
-        </property>
-    </bean>
-
-    <bean id="FilterAttributes" class="net.shibboleth.idp.profile.impl.FilterAttributes" scope="prototype"
-        c:filterService-ref="shibboleth.AttributeFilterService"
-        p:maskFailures="%{idp.service.attribute.filter.maskFailures:true}" />
-        
-    <util:map id="ProtocolStateMap">
-        <entry>
-            <key>
-                <null/>
-            </key>
-            <value>PrepareForView</value>
-        </entry>
-        <entry>
-            <key>
-                <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML11P_NS" />
-            </key>
-            <value>EncodeToSAML1</value>
-        </entry>
-        <entry>
-            <key>
-                <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
-            </key>
-            <value>EncodeToSAML2</value>
-        </entry>
-    </util:map>
-    
-    <bean id="InitializeOutboundMessageContext"
-        class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContext" scope="prototype" />
-    
-    <bean id="AddSAML1AttributeStatementToAssertion"
-            class="net.shibboleth.idp.saml.saml1.profile.impl.AddAttributeStatementToAssertion" scope="prototype">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="AddNameIdentifierToSubjects"
-            class="org.opensaml.saml.saml1.profile.impl.AddNameIdentifierToSubjects" scope="prototype">
-        <property name="formatLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.logic.DefaultNameIdentifierFormatStrategy"
-                    p:defaultFormat="%{idp.nameid.saml1.default:urn:mace:shibboleth:1.0:nameIdentifier}">
-                <property name="profileId">
-                    <util:constant static-field="net.shibboleth.idp.saml.saml1.profile.config.BrowserSSOProfileConfiguration.PROFILE_ID" />
-                </property>
-            </bean>
-        </property>
-        <property name="nameIdentifierGenerator">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.ProxySAML1NameIdentifierGenerator"
-                c:service-ref="shibboleth.NameIdentifierGenerationService" />
-        </property>
-    </bean>
-
-    <bean id="AddSAML2AttributeStatementToAssertion"
-            class="net.shibboleth.idp.saml.saml2.profile.impl.AddAttributeStatementToAssertion" scope="prototype">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="AddNameIDToSubjects"
-            class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects" scope="prototype">
-        <property name="formatLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.logic.DefaultNameIdentifierFormatStrategy"
-                    p:defaultFormat="%{idp.nameid.saml2.default:urn:oasis:names:tc:SAML:2.0:nameid-format:transient}">
-                <property name="profileId">
-                    <util:constant static-field="net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration.PROFILE_ID" />
-                </property>
-            </bean>
-        </property>
-        <property name="nameIDGenerator">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.ProxySAML2NameIDGenerator"
-                c:service-ref="shibboleth.NameIdentifierGenerationService" />
-        </property>
-        <property name="nameIDPolicyPredicate">
-            <bean class="org.opensaml.saml.common.profile.logic.AffiliationNameIDPolicyPredicate"
-                    p:metadataResolver-ref="shibboleth.MetadataResolver"
-                    p:responderIdLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
-                    p:requesterIdLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
-                <property name="objectLookupStrategy">
-                    <bean class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects.NameIDPolicyLookupFunction" />
-                </property>
-            </bean>
-        </property>
-    </bean>
-    
-    <bean id="PostAssertionPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostAssertionAuditExtractors') ?: getObject('shibboleth.DefaultPostAssertionAuditExtractors')}" />
-    
-    <bean id="PostResponsePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostResponseAuditExtractors') ?: getObject('shibboleth.DefaultPostResponseAuditExtractors')}" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <!-- Profile ID for flow. -->    
+    <bean id="shibboleth.AdminProfileId" class="java.lang.String"
+        c:_0="http://shibboleth.net/ns/profiles/resolvertest" />
+
+    <!-- Default operation/resource suppliers for access checks. -->
+    
+    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
+        factory-method="constant" c:_0="read" />
+        
+    <bean id="shibboleth.AdminResourceLookupStrategy"
+        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction"
+        c:inClass="#{T(org.opensaml.profile.context.ProfileRequestContext)}"
+        c:outputType="#{T(java.lang.String)}"
+        c:expression="'subject/' + #input.getInboundMessageContext().getMessage().getPrincipal() + '/attributes'" />
+        
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="%{idp.resolvertest.decoderClass:net.shibboleth.idp.profile.impl.ResolverTestRequestDecoder}"
+                    scope="prototype">
+                <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
+            </bean>
+        </constructor-arg>
+    </bean>
+    
+    <bean id="PostDecodePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext">
+        <property name="fieldExtractors">
+            <map>
+                <entry>
+                    <key>
+                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.PROTOCOL"/>
+                    </key>
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <bean class="com.google.common.base.Functions" factory-method="compose">
+                                <constructor-arg name="g">
+                                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLProtocolContextProtocolFunction" />
+                                </constructor-arg>
+                                <constructor-arg name="f">
+                                    <ref bean="shibboleth.ChildLookup.SAMLProtocolContext" />
+                                </constructor-arg>
+                            </bean>
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <ref bean="shibboleth.MessageContextLookup.Inbound" />
+                        </constructor-arg>
+                    </bean>
+                </entry>
+            </map>
+        </property>
+    </bean>
+    
+    <bean id="SAMLMetadataLookup"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler" scope="prototype">
+                <property name="roleDescriptorResolver">
+                    <bean class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
+                        c:mdResolver-ref="shibboleth.MetadataResolver" />
+                </property>
+            </bean>
+        </constructor-arg>
+    </bean>
+    
+    <bean id="SAMLPopulateAttributeConsumingService"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.impl.SAMLAddAttributeConsumingServiceHandler" scope="prototype" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="InitializeRelyingPartyContexFromSAMLPeer"
+        class="net.shibboleth.idp.saml.profile.impl.InitializeRelyingPartyContextFromSAMLPeer" scope="prototype" />
+
+    <bean id="SelectRelyingPartyConfiguration"
+        class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration" scope="prototype"
+        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+    
+    <bean id="PostLookupPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostLookupAuditExtractors') ?: getObject('shibboleth.DefaultPostLookupAuditExtractors')}" />
+
+    <bean id="PopulateSubjectContext"
+            class="net.shibboleth.idp.profile.impl.PopulateSubjectContext" scope="prototype">
+        <property name="principalNameLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.impl.ResolverTestPrincipalLookup" />
+        </property>
+    </bean>
+
+    <bean id="FilterAttributes" class="net.shibboleth.idp.profile.impl.FilterAttributes" scope="prototype"
+        c:filterService-ref="shibboleth.AttributeFilterService"
+        p:maskFailures="%{idp.service.attribute.filter.maskFailures:true}" />
+        
+    <util:map id="ProtocolStateMap">
+        <entry>
+            <key>
+                <null/>
+            </key>
+            <value>PrepareForView</value>
+        </entry>
+        <entry>
+            <key>
+                <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML11P_NS" />
+            </key>
+            <value>EncodeToSAML1</value>
+        </entry>
+        <entry>
+            <key>
+                <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
+            </key>
+            <value>EncodeToSAML2</value>
+        </entry>
+    </util:map>
+    
+    <bean id="InitializeOutboundMessageContext"
+        class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContext" scope="prototype" />
+    
+    <bean id="AddSAML1AttributeStatementToAssertion"
+            class="net.shibboleth.idp.saml.saml1.profile.impl.AddAttributeStatementToAssertion" scope="prototype">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="AddNameIdentifierToSubjects"
+            class="org.opensaml.saml.saml1.profile.impl.AddNameIdentifierToSubjects" scope="prototype">
+        <property name="formatLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.logic.DefaultNameIdentifierFormatStrategy"
+                    p:defaultFormat="%{idp.nameid.saml1.default:urn:mace:shibboleth:1.0:nameIdentifier}">
+                <property name="profileId">
+                    <util:constant static-field="net.shibboleth.idp.saml.saml1.profile.config.BrowserSSOProfileConfiguration.PROFILE_ID" />
+                </property>
+            </bean>
+        </property>
+        <property name="nameIdentifierGenerator">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.ProxySAML1NameIdentifierGenerator"
+                c:service-ref="shibboleth.NameIdentifierGenerationService" />
+        </property>
+    </bean>
+
+    <bean id="AddSAML2AttributeStatementToAssertion"
+            class="net.shibboleth.idp.saml.saml2.profile.impl.AddAttributeStatementToAssertion" scope="prototype">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="AddNameIDToSubjects"
+            class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects" scope="prototype">
+        <property name="formatLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.logic.DefaultNameIdentifierFormatStrategy"
+                    p:defaultFormat="%{idp.nameid.saml2.default:urn:oasis:names:tc:SAML:2.0:nameid-format:transient}">
+                <property name="profileId">
+                    <util:constant static-field="net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration.PROFILE_ID" />
+                </property>
+            </bean>
+        </property>
+        <property name="nameIDGenerator">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.ProxySAML2NameIDGenerator"
+                c:service-ref="shibboleth.NameIdentifierGenerationService" />
+        </property>
+        <property name="nameIDPolicyPredicate">
+            <bean class="org.opensaml.saml.common.profile.logic.AffiliationNameIDPolicyPredicate"
+                    p:metadataResolver-ref="shibboleth.MetadataResolver"
+                    p:responderIdLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
+                    p:requesterIdLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
+                <property name="objectLookupStrategy">
+                    <bean class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects.NameIDPolicyLookupFunction" />
+                </property>
+            </bean>
+        </property>
+    </bean>
+    
+    <bean id="PostAssertionPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostAssertionAuditExtractors') ?: getObject('shibboleth.DefaultPostAssertionAuditExtractors')}" />
+    
+    <bean id="PostResponsePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostResponseAuditExtractors') ?: getObject('shibboleth.DefaultPostResponseAuditExtractors')}" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/admin/resolvertest-flow.xml shibboleth-idp/system/flows/admin/resolvertest-flow.xml
--- shibboleth-idp/system/flows/admin/resolvertest-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/resolvertest-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,113 +1,113 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="admin.abstract">
-    
-    <!-- Start action. -->
-
-    <on-start>
-        <evaluate expression="'ResponseView'"  result="flowScope.ErrorState"/>
-        <evaluate expression="'ResponseView'"  result="flowScope.AuditedErrorState"/>
-    </on-start>
-
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <action-state id="DecodeMessage">
-        <evaluate expression="DecodeMessage" />
-        <evaluate expression="PostDecodePopulateAuditContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DoAdminPreamble" />
-    </action-state>
-    
-    <!-- Resume actual flow processing. -->
-    
-    <action-state id="DoProfileWork">
-        <evaluate expression="CheckAccess" />
-        <evaluate expression="'proceed'" />
-    
-        <transition on="proceed" to="ContinueDecoding" />
-    </action-state>
-    
-    <action-state id="ContinueDecoding">
-        <on-entry>
-            <!-- Clear any user authentication/attribute state. -->
-            <evaluate expression="opensamlProfileRequestContext.clearSubcontexts()" />
-        </on-entry>
-        
-        <evaluate expression="SAMLMetadataLookup" />
-        <evaluate expression="SAMLPopulateAttributeConsumingService" />
-
-        <evaluate expression="InitializeRelyingPartyContexFromSAMLPeer" />
-        <evaluate expression="SelectRelyingPartyConfiguration" />
-
-        <evaluate expression="PostLookupPopulateAuditContext" />
-
-        <evaluate expression="PopulateSubjectContext" />
-        <evaluate expression="'proceed'" />
-    
-        <transition on="proceed" to="DoAttributes" />
-    </action-state>
-    
-    <action-state id="DoAttributes">
-        <on-entry>
-            <!-- Turn off result cache. -->
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.attribute.resolver.context.AttributeResolutionContext), true).setAllowCachedResults(false)" />
-        </on-entry>
-    
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="FilterAttributes" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="#{ ProtocolStateMap.get(opensamlProfileRequestContext.getInboundMessageContext().getMessage().getProtocol()) }" />
-    </action-state>
-    
-    <action-state id="EncodeToSAML1">
-        <evaluate expression="InitializeOutboundMessageContext" />
-        <evaluate expression="AddSAML1AttributeStatementToAssertion" />
-        <evaluate expression="AddNameIdentifierToSubjects" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PrepareForView" />
-    </action-state>
-
-    <action-state id="EncodeToSAML2">
-        <evaluate expression="InitializeOutboundMessageContext" />
-        <evaluate expression="AddSAML2AttributeStatementToAssertion" />
-        <evaluate expression="AddNameIDToSubjects" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PrepareForView" />
-    </action-state>
-
-    <action-state id="PrepareForView">
-        <evaluate expression="PostAssertionPopulateAuditContext" />
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ResponseView" />
-    </action-state>
-    
-    <end-state id="ResponseView" view="resolvertest">
-        <on-entry>
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.RelyingPartyContext), true).getSubcontext(T(net.shibboleth.idp.attribute.context.AttributeContext))" result="requestScope.attributeContext" />
-            <evaluate expression="T(org.opensaml.core.xml.util.XMLObjectSupport)" result="requestScope.XMLObjectSupport" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.xml.SerializeSupport)" result="requestScope.SerializeSupport" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-    </end-state>
-
-    <bean-import resource="resolvertest-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="admin.abstract">
+    
+    <!-- Start action. -->
+
+    <on-start>
+        <evaluate expression="'ResponseView'"  result="flowScope.ErrorState"/>
+        <evaluate expression="'ResponseView'"  result="flowScope.AuditedErrorState"/>
+    </on-start>
+
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <action-state id="DecodeMessage">
+        <evaluate expression="DecodeMessage" />
+        <evaluate expression="PostDecodePopulateAuditContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DoAdminPreamble" />
+    </action-state>
+    
+    <!-- Resume actual flow processing. -->
+    
+    <action-state id="DoProfileWork">
+        <evaluate expression="CheckAccess" />
+        <evaluate expression="'proceed'" />
+    
+        <transition on="proceed" to="ContinueDecoding" />
+    </action-state>
+    
+    <action-state id="ContinueDecoding">
+        <on-entry>
+            <!-- Clear any user authentication/attribute state. -->
+            <evaluate expression="opensamlProfileRequestContext.clearSubcontexts()" />
+        </on-entry>
+        
+        <evaluate expression="SAMLMetadataLookup" />
+        <evaluate expression="SAMLPopulateAttributeConsumingService" />
+
+        <evaluate expression="InitializeRelyingPartyContexFromSAMLPeer" />
+        <evaluate expression="SelectRelyingPartyConfiguration" />
+
+        <evaluate expression="PostLookupPopulateAuditContext" />
+
+        <evaluate expression="PopulateSubjectContext" />
+        <evaluate expression="'proceed'" />
+    
+        <transition on="proceed" to="DoAttributes" />
+    </action-state>
+    
+    <action-state id="DoAttributes">
+        <on-entry>
+            <!-- Turn off result cache. -->
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.attribute.resolver.context.AttributeResolutionContext), true).setAllowCachedResults(false)" />
+        </on-entry>
+    
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="FilterAttributes" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="#{ ProtocolStateMap.get(opensamlProfileRequestContext.getInboundMessageContext().getMessage().getProtocol()) }" />
+    </action-state>
+    
+    <action-state id="EncodeToSAML1">
+        <evaluate expression="InitializeOutboundMessageContext" />
+        <evaluate expression="AddSAML1AttributeStatementToAssertion" />
+        <evaluate expression="AddNameIdentifierToSubjects" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PrepareForView" />
+    </action-state>
+
+    <action-state id="EncodeToSAML2">
+        <evaluate expression="InitializeOutboundMessageContext" />
+        <evaluate expression="AddSAML2AttributeStatementToAssertion" />
+        <evaluate expression="AddNameIDToSubjects" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PrepareForView" />
+    </action-state>
+
+    <action-state id="PrepareForView">
+        <evaluate expression="PostAssertionPopulateAuditContext" />
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ResponseView" />
+    </action-state>
+    
+    <end-state id="ResponseView" view="resolvertest">
+        <on-entry>
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.RelyingPartyContext), true).getSubcontext(T(net.shibboleth.idp.attribute.context.AttributeContext))" result="requestScope.attributeContext" />
+            <evaluate expression="T(org.opensaml.core.xml.util.XMLObjectSupport)" result="requestScope.XMLObjectSupport" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.xml.SerializeSupport)" result="requestScope.SerializeSupport" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+    </end-state>
+
+    <bean-import resource="resolvertest-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/admin/status-beans.xml shibboleth-idp/system/flows/admin/status-beans.xml
--- shibboleth-idp/system/flows/admin/status-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/status-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,39 +1,39 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <!-- Profile ID for flow. -->    
-    <bean id="shibboleth.AdminProfileId" class="java.lang.String" c:_0="http://shibboleth.net/ns/profiles/status" />
-    
-    <!-- Default operation/resource suppliers for access checks. -->
-    
-    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
-        factory-method="constant" c:_0="read" />
-        
-    <bean id="shibboleth.AdminResourceLookupStrategy" class="com.google.common.base.Functions"
-        factory-method="constant" c:_0="status" />
-    
-    <util:list id="ServiceCollection">
-        <ref bean="shibboleth.LoggingService" />
-        <ref bean="shibboleth.ReloadableAccessControlService" />
-        <ref bean="shibboleth.MetadataResolverService" />
-        <ref bean="shibboleth.RelyingPartyResolverService" />
-        <ref bean="shibboleth.NameIdentifierGenerationService" />
-        <ref bean="shibboleth.AttributeResolverService" />
-        <ref bean="shibboleth.AttributeFilterService" />
-    </util:list>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <!-- Profile ID for flow. -->    
+    <bean id="shibboleth.AdminProfileId" class="java.lang.String" c:_0="http://shibboleth.net/ns/profiles/status" />
+    
+    <!-- Default operation/resource suppliers for access checks. -->
+    
+    <bean id="shibboleth.AdminOperationLookupStrategy" class="com.google.common.base.Functions"
+        factory-method="constant" c:_0="read" />
+        
+    <bean id="shibboleth.AdminResourceLookupStrategy" class="com.google.common.base.Functions"
+        factory-method="constant" c:_0="status" />
+    
+    <util:list id="ServiceCollection">
+        <ref bean="shibboleth.LoggingService" />
+        <ref bean="shibboleth.ReloadableAccessControlService" />
+        <ref bean="shibboleth.MetadataResolverService" />
+        <ref bean="shibboleth.RelyingPartyResolverService" />
+        <ref bean="shibboleth.NameIdentifierGenerationService" />
+        <ref bean="shibboleth.AttributeResolverService" />
+        <ref bean="shibboleth.AttributeFilterService" />
+    </util:list>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/admin/status-flow.xml shibboleth-idp/system/flows/admin/status-flow.xml
--- shibboleth-idp/system/flows/admin/status-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/admin/status-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,42 +1,42 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="admin.abstract">
-
-    <!-- Start action. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <!-- Branch to determine if authentication is required. -->
-        <transition on="proceed" to="DoAdminPreamble" />
-    </action-state>
-
-    <!-- Resume actual flow processing. -->
-
-    <action-state id="DoProfileWork">
-        <evaluate expression="CheckAccess" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="Status" />
-    </action-state>
-    
-    <!-- Terminus -->
-
-    <end-state id="Status" view="status">
-        <on-entry>
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="ServiceCollection" result="requestScope.services" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-    </end-state>
-
-    <bean-import resource="status-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="admin.abstract">
+
+    <!-- Start action. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <!-- Branch to determine if authentication is required. -->
+        <transition on="proceed" to="DoAdminPreamble" />
+    </action-state>
+
+    <!-- Resume actual flow processing. -->
+
+    <action-state id="DoProfileWork">
+        <evaluate expression="CheckAccess" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="Status" />
+    </action-state>
+    
+    <!-- Terminus -->
+
+    <end-state id="Status" view="status">
+        <on-entry>
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="ServiceCollection" result="requestScope.services" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+    </end-state>
+
+    <bean-import resource="status-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/authn-abstract-flow.xml shibboleth-idp/system/flows/authn/authn-abstract-flow.xml
--- shibboleth-idp/system/flows/authn/authn-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/authn-abstract-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,61 +1,61 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      abstract="true" parent="authn.events">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-
-    <!-- Indicates another login flow has called one as a subflow. -->
-    <input name="calledAsExtendedFlow" type="boolean" />
-
-    <!-- Defines the possible end-state events, and a global transition rule. -->
-
-    <!-- Successful completion of subflow. -->
-    <end-state id="proceed" />
-
-    <!-- Error events to reflect back from this subflow. -->
-    <end-state id="AuthenticationException" />
-    <end-state id="IdentitySwitch" />
-    <end-state id="InputOutputError" />
-    <end-state id="InvalidCredentials" />
-    <end-state id="InvalidProfileContext" />
-    <end-state id="InvalidSubjectContext" />
-    <end-state id="InvalidSubjectCanonicalizationContext" />
-    <end-state id="NoCredentials" />
-    <end-state id="NoPassive" />
-    <end-state id="NoPotentialFlow" />
-    <end-state id="RequestUnsupported" />
-    <end-state id="ReselectFlow" />
-    <end-state id="RestartAuthentication" />
-    <end-state id="RuntimeException" />
-    <end-state id="SubjectCanonicalizationError" />
-
-    <action-state id="LogRuntimeException">
-        <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.authn').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        <transition to="RuntimeException" />
-    </action-state>
-
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="#{currentEvent.id.startsWith('authn/')}" to="ReselectFlow">
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).setSignaledFlowId(currentEvent.id)" />
-        </transition>
-        <transition on="AuthenticationException" to="AuthenticationException" />
-        <transition on="IdentitySwitch" to="IdentitySwitch" />
-        <transition on="InputOutputError" to="InputOutputError" />
-        <transition on="InvalidCredentials" to="InvalidCredentials" />
-        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
-        <transition on="InvalidSubjectContext" to="InvalidSubjectContext" />
-        <transition on="InvalidSubjectCanonicalizationContext" to="InvalidSubjectCanonicalizationContext" />
-        <transition on="NoCredentials" to="NoCredentials" />
-        <transition on="NoPassive" to="NoPassive" />
-        <transition on="NoPotentialFlow" to="NoPotentialFlow" />
-        <transition on="RequestUnsupported" to="RequestUnsupported" />
-        <transition on="ReselectFlow" to="ReselectFlow" />
-        <transition on="RestartAuthentication" to="RestartAuthentication" />
-        <transition on="RuntimeException" to="RuntimeException" />
-        <transition on="SubjectCanonicalizationError" to="SubjectCanonicalizationError" />
-    </global-transitions>
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      abstract="true" parent="authn.events">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+
+    <!-- Indicates another login flow has called one as a subflow. -->
+    <input name="calledAsExtendedFlow" type="boolean" />
+
+    <!-- Defines the possible end-state events, and a global transition rule. -->
+
+    <!-- Successful completion of subflow. -->
+    <end-state id="proceed" />
+
+    <!-- Error events to reflect back from this subflow. -->
+    <end-state id="AuthenticationException" />
+    <end-state id="IdentitySwitch" />
+    <end-state id="InputOutputError" />
+    <end-state id="InvalidCredentials" />
+    <end-state id="InvalidProfileContext" />
+    <end-state id="InvalidSubjectContext" />
+    <end-state id="InvalidSubjectCanonicalizationContext" />
+    <end-state id="NoCredentials" />
+    <end-state id="NoPassive" />
+    <end-state id="NoPotentialFlow" />
+    <end-state id="RequestUnsupported" />
+    <end-state id="ReselectFlow" />
+    <end-state id="RestartAuthentication" />
+    <end-state id="RuntimeException" />
+    <end-state id="SubjectCanonicalizationError" />
+
+    <action-state id="LogRuntimeException">
+        <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.authn').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        <transition to="RuntimeException" />
+    </action-state>
+
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="#{currentEvent.id.startsWith('authn/')}" to="ReselectFlow">
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).setSignaledFlowId(currentEvent.id)" />
+        </transition>
+        <transition on="AuthenticationException" to="AuthenticationException" />
+        <transition on="IdentitySwitch" to="IdentitySwitch" />
+        <transition on="InputOutputError" to="InputOutputError" />
+        <transition on="InvalidCredentials" to="InvalidCredentials" />
+        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
+        <transition on="InvalidSubjectContext" to="InvalidSubjectContext" />
+        <transition on="InvalidSubjectCanonicalizationContext" to="InvalidSubjectCanonicalizationContext" />
+        <transition on="NoCredentials" to="NoCredentials" />
+        <transition on="NoPassive" to="NoPassive" />
+        <transition on="NoPotentialFlow" to="NoPotentialFlow" />
+        <transition on="RequestUnsupported" to="RequestUnsupported" />
+        <transition on="ReselectFlow" to="ReselectFlow" />
+        <transition on="RestartAuthentication" to="RestartAuthentication" />
+        <transition on="RuntimeException" to="RuntimeException" />
+        <transition on="SubjectCanonicalizationError" to="SubjectCanonicalizationError" />
+    </global-transitions>
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/authn-beans.xml shibboleth-idp/system/flows/authn/authn-beans.xml
--- shibboleth-idp/system/flows/authn/authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,113 +1,113 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-    
-    <bean id="PopulateAuthenticationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateAuthenticationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.AvailableAuthenticationFlows"
-        p:potentialFlows="#{@'shibboleth.AvailableAuthenticationFlows'.?[id matches 'authn/(' + '%{idp.authn.flows:}'.trim() + ')']}"
-        p:principalEvalPredicateFactoryRegistry-ref="shibboleth.AuthnComparisonRegistry" />
-
-    <bean id="PopulateAuthenticationContextWithInitialFlow"
-        class="net.shibboleth.idp.authn.impl.PopulateAuthenticationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.AvailableAuthenticationFlows"
-        p:potentialFlows="#{@'shibboleth.AvailableAuthenticationFlows'.?[id matches 'authn/(' + '%{idp.authn.flows.initial:}'.trim() + ')']}"
-        p:principalEvalPredicateFactoryRegistry-ref="shibboleth.AuthnComparisonRegistry" />
-
-    <bean id="PopulateSessionContext"
-        class="net.shibboleth.idp.session.impl.PopulateSessionContext" scope="prototype"
-        p:activationCondition="%{idp.session.enabled:true}"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:sessionResolver-ref="shibboleth.SessionManager" />
-    
-    <bean id="SetRPUIInformation"
-            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
-            p:activationCondition="%{idp.authn.rpui:true}"
-            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
-        <property name="fallbackLanguages">
-            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
-        </property>
-    </bean>
-    
-    <bean id="ExtractActiveAuthenticationResults"
-        class="%{idp.session.activeResultExtraction:net.shibboleth.idp.session.impl.ExtractActiveAuthenticationResults}"
-        scope="prototype" />
-
-    <bean id="InitializeRequestedPrincipalContext"
-        class="net.shibboleth.idp.authn.impl.InitializeRequestedPrincipalContext" scope="prototype"
-        p:replaceExistingContext="%{idp.authn.overrideRequestedAuthnContext:false}" />
-
-    <bean id="ResolveAttributes"
-            class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
-            c:resolverService-ref="shibboleth.AttributeResolverService"
-            p:activationCondition="#{ '%{idp.authn.resolveAttribute:null}' != 'null' }"
-            p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}">
-        <property name="attributesToResolve">
-            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{ '%{idp.authn.resolveAttribute:null}'.trim() }" />
-        </property>
-        <property name="principalNameLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.PrincipalNameLookup.Session"
-                c:f-ref="shibboleth.ChildLookup.SessionContext" />
-        </property>
-        <property name="attributeContextCreationStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookupOrCreate.AttributeContext"
-                c:f-ref="shibboleth.ChildLookup.AuthenticationContext" />
-        </property>
-    </bean>
-
-    <bean id="FilterFlowsByAttribute"
-        class="net.shibboleth.idp.authn.impl.FilterFlowsByAttribute" scope="prototype"
-        p:activationCondition="#{ '%{idp.authn.resolveAttribute:null}' != 'null' }"
-        p:attributeId="#{ T(org.springframework.util.StringUtils).commaDelimitedListToStringArray('%{idp.authn.resolveAttribute:null}'.trim())[0] }"
-        p:filterActiveResults="%{idp.authn.filterActiveResultsByAttribute:true}" />
-
-    <bean id="FilterFlowsByForcedAuthn"
-        class="net.shibboleth.idp.authn.impl.FilterFlowsByForcedAuthn" scope="prototype" />
-    
-    <bean id="FilterFlowsByNonBrowserSupport"
-        class="net.shibboleth.idp.authn.impl.FilterFlowsByNonBrowserSupport" scope="prototype" />
-
-    <bean id="SelectAuthenticationFlow"
-        class="net.shibboleth.idp.authn.impl.SelectAuthenticationFlow" scope="prototype"
-        p:favorSSO="%{idp.authn.favorSSO:false}" />
-    
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-    
-    <bean id="DetectIdentitySwitch"
-        class="net.shibboleth.idp.session.impl.DetectIdentitySwitch" scope="prototype"
-        p:sessionManager-ref="shibboleth.SessionManager" />
-    
-    <bean id="IdentitySwitchIsError" class="java.lang.Boolean">
-        <constructor-arg value="%{idp.authn.identitySwitchIsError:false}" type="boolean" />
-    </bean>
-    
-    <bean id="FinalizeAuthentication"
-        class="net.shibboleth.idp.authn.impl.FinalizeAuthentication" scope="prototype"
-        p:weightMap="#{getObject('shibboleth.AuthenticationPrincipalWeightMap')}" />
-    
-    <bean id="UpdateSessionWithAuthenticationResult"
-        class="net.shibboleth.idp.session.impl.UpdateSessionWithAuthenticationResult" scope="prototype"
-        p:activationCondition="%{idp.session.enabled:true}"
-        p:sessionManager-ref="shibboleth.SessionManager" />
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+    
+    <bean id="PopulateAuthenticationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateAuthenticationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.AvailableAuthenticationFlows"
+        p:potentialFlows="#{@'shibboleth.AvailableAuthenticationFlows'.?[id matches 'authn/(' + '%{idp.authn.flows:}'.trim() + ')']}"
+        p:principalEvalPredicateFactoryRegistry-ref="shibboleth.AuthnComparisonRegistry" />
+
+    <bean id="PopulateAuthenticationContextWithInitialFlow"
+        class="net.shibboleth.idp.authn.impl.PopulateAuthenticationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.AvailableAuthenticationFlows"
+        p:potentialFlows="#{@'shibboleth.AvailableAuthenticationFlows'.?[id matches 'authn/(' + '%{idp.authn.flows.initial:}'.trim() + ')']}"
+        p:principalEvalPredicateFactoryRegistry-ref="shibboleth.AuthnComparisonRegistry" />
+
+    <bean id="PopulateSessionContext"
+        class="net.shibboleth.idp.session.impl.PopulateSessionContext" scope="prototype"
+        p:activationCondition="%{idp.session.enabled:true}"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:sessionResolver-ref="shibboleth.SessionManager" />
+    
+    <bean id="SetRPUIInformation"
+            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
+            p:activationCondition="%{idp.authn.rpui:true}"
+            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
+        <property name="fallbackLanguages">
+            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
+        </property>
+    </bean>
+    
+    <bean id="ExtractActiveAuthenticationResults"
+        class="%{idp.session.activeResultExtraction:net.shibboleth.idp.session.impl.ExtractActiveAuthenticationResults}"
+        scope="prototype" />
+
+    <bean id="InitializeRequestedPrincipalContext"
+        class="net.shibboleth.idp.authn.impl.InitializeRequestedPrincipalContext" scope="prototype"
+        p:replaceExistingContext="%{idp.authn.overrideRequestedAuthnContext:false}" />
+
+    <bean id="ResolveAttributes"
+            class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
+            c:resolverService-ref="shibboleth.AttributeResolverService"
+            p:activationCondition="#{ '%{idp.authn.resolveAttribute:null}' != 'null' }"
+            p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}">
+        <property name="attributesToResolve">
+            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{ '%{idp.authn.resolveAttribute:null}'.trim() }" />
+        </property>
+        <property name="principalNameLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.PrincipalNameLookup.Session"
+                c:f-ref="shibboleth.ChildLookup.SessionContext" />
+        </property>
+        <property name="attributeContextCreationStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookupOrCreate.AttributeContext"
+                c:f-ref="shibboleth.ChildLookup.AuthenticationContext" />
+        </property>
+    </bean>
+
+    <bean id="FilterFlowsByAttribute"
+        class="net.shibboleth.idp.authn.impl.FilterFlowsByAttribute" scope="prototype"
+        p:activationCondition="#{ '%{idp.authn.resolveAttribute:null}' != 'null' }"
+        p:attributeId="#{ T(org.springframework.util.StringUtils).commaDelimitedListToStringArray('%{idp.authn.resolveAttribute:null}'.trim())[0] }"
+        p:filterActiveResults="%{idp.authn.filterActiveResultsByAttribute:true}" />
+
+    <bean id="FilterFlowsByForcedAuthn"
+        class="net.shibboleth.idp.authn.impl.FilterFlowsByForcedAuthn" scope="prototype" />
+    
+    <bean id="FilterFlowsByNonBrowserSupport"
+        class="net.shibboleth.idp.authn.impl.FilterFlowsByNonBrowserSupport" scope="prototype" />
+
+    <bean id="SelectAuthenticationFlow"
+        class="net.shibboleth.idp.authn.impl.SelectAuthenticationFlow" scope="prototype"
+        p:favorSSO="%{idp.authn.favorSSO:false}" />
+    
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+    
+    <bean id="DetectIdentitySwitch"
+        class="net.shibboleth.idp.session.impl.DetectIdentitySwitch" scope="prototype"
+        p:sessionManager-ref="shibboleth.SessionManager" />
+    
+    <bean id="IdentitySwitchIsError" class="java.lang.Boolean">
+        <constructor-arg value="%{idp.authn.identitySwitchIsError:false}" type="boolean" />
+    </bean>
+    
+    <bean id="FinalizeAuthentication"
+        class="net.shibboleth.idp.authn.impl.FinalizeAuthentication" scope="prototype"
+        p:weightMap="#{getObject('shibboleth.AuthenticationPrincipalWeightMap')}" />
+    
+    <bean id="UpdateSessionWithAuthenticationResult"
+        class="net.shibboleth.idp.session.impl.UpdateSessionWithAuthenticationResult" scope="prototype"
+        p:activationCondition="%{idp.session.enabled:true}"
+        p:sessionManager-ref="shibboleth.SessionManager" />
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/authn-flow.xml shibboleth-idp/system/flows/authn/authn-flow.xml
--- shibboleth-idp/system/flows/authn/authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,138 +1,138 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!--
-    This is the Authentication subflow. It handles retrieval of an existing session,
-    set up and eventual selection of an subflow or active AuthenticationResult, and
-    finalization of the processing such as updating a session, before returning control
-    to the calling flow.
-    -->
-    
-    <action-state id="AuthenticationSetup">
-        <evaluate expression="PopulateAuthenticationContext" />
-        <evaluate expression="PopulateSessionContext" />
-        <evaluate expression="SetRPUIInformation" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="TestForSession" />
-    </action-state>
-   
-    <!-- Check for an existing session, and do additional steps in that case. -->
-    <decision-state id="TestForSession">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)) != null and opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)).getIdPSession() != null"
-            then="SessionExists"
-            else="FilterFlows" />
-    </decision-state>
-   
-    <action-state id="SessionExists">
-        <evaluate expression="ExtractActiveAuthenticationResults" />
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="FilterFlowsByAttribute" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="FilterFlows" />
-        <!-- Suppress resolution failure. -->
-        <transition on="UnableToResolveAttributes" to="FilterFlows" />
-    </action-state>
-   
-    <action-state id="FilterFlows">
-        <evaluate expression="InitializeRequestedPrincipalContext" />
-        <evaluate expression="FilterFlowsByForcedAuthn" />
-        <evaluate expression="FilterFlowsByNonBrowserSupport" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="SelectAuthenticationFlow" />
-    </action-state>
-    
-    <!--
-    The Select action is the "dispatching" step. Proceed here routes around
-    calling a new subflow, and goes directly to the Finalize step. Anything
-    starting with "authn/" is a flow descriptor that we send
-    control to to attempt a login.
-    -->
-    <action-state id="SelectAuthenticationFlow">
-        <evaluate expression="SelectAuthenticationFlow" />
-        <evaluate expression="'proceed'" />
-        
-        <!-- proceed indicates SSO (reuse of active result) -->
-        <transition on="proceed" to="FinalizeAuthentication" />
-
-        <!-- Call a subflow with the same ID as the event. -->
-        <transition on="#{currentEvent.id.startsWith('authn/')}" to="CallAuthenticationFlow" />
-    </action-state>
-
-    <!--
-    This invokes an authentication flow to attempt a login. Anything but proceed
-    is an error, otherwise control passes to the wrap-up actions, except for a
-    ReselectFlow signal to loop back up and try another.
-    -->
-    <subflow-state id="CallAuthenticationFlow" subflow="#{currentEvent.id}">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckSubjectCanonicalization" />
-        <transition on="ReselectFlow" to="SelectAuthenticationFlow" />
-    </subflow-state>
-
-    <!-- Checks if authentication flow already completed c14n. -->
-    <decision-state id="CheckSubjectCanonicalization">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.SubjectCanonicalizationContext)).getPrincipalName() == null"
-            then="PopulateSubjectCanonicalizationContext"
-            else="DetectIdentitySwitch" />
-    </decision-state>
-
-    <!-- This sets up the proper set of candidate c14n flows to run. -->
-    <action-state id="PopulateSubjectCanonicalizationContext">
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="DetectIdentitySwitch" />
-    </subflow-state>
-
-    <!-- Handles an identity switch by dumping the old session. -->
-    <action-state id="DetectIdentitySwitch">
-        <evaluate expression="DetectIdentitySwitch" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="FinalizeAuthentication" />
-        <transition on="IdentitySwitch" to="HandleIdentitySwitch" />
-        <!-- Ignore any session layer errors at this stage. -->
-        <transition on="InputOutputError" to="HandleIdentitySwitch" />
-    </action-state>
-    
-    <!-- Whether the identity switch should fail the request. -->
-    <decision-state id="HandleIdentitySwitch">
-        <if test="IdentitySwitchIsError" then="IdentitySwitch" else="FinalizeAuthentication" />
-    </decision-state>
-    
-    <!--
-    Wraps up the subflow or result reuse by producing a SubjectContext. If a mismatch
-    exists between an existing SubjectContext and the result here, an error occurs.
-    -->
-    <action-state id="FinalizeAuthentication">
-        <evaluate expression="FinalizeAuthentication" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="UpdateSessionWithAuthenticationResult" />
-    </action-state>
-    
-    <!-- Finally, create/update the client session. -->
-    <action-state id="UpdateSessionWithAuthenticationResult">
-        <evaluate expression="UpdateSessionWithAuthenticationResult" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-        
-        <!-- Ignore any session layer errors at this stage. -->
-        <transition on="InputOutputError" to="proceed" />
-    </action-state>
-
-    <bean-import resource="authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!--
+    This is the Authentication subflow. It handles retrieval of an existing session,
+    set up and eventual selection of an subflow or active AuthenticationResult, and
+    finalization of the processing such as updating a session, before returning control
+    to the calling flow.
+    -->
+    
+    <action-state id="AuthenticationSetup">
+        <evaluate expression="PopulateAuthenticationContext" />
+        <evaluate expression="PopulateSessionContext" />
+        <evaluate expression="SetRPUIInformation" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="TestForSession" />
+    </action-state>
+   
+    <!-- Check for an existing session, and do additional steps in that case. -->
+    <decision-state id="TestForSession">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)) != null and opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)).getIdPSession() != null"
+            then="SessionExists"
+            else="FilterFlows" />
+    </decision-state>
+   
+    <action-state id="SessionExists">
+        <evaluate expression="ExtractActiveAuthenticationResults" />
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="FilterFlowsByAttribute" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="FilterFlows" />
+        <!-- Suppress resolution failure. -->
+        <transition on="UnableToResolveAttributes" to="FilterFlows" />
+    </action-state>
+   
+    <action-state id="FilterFlows">
+        <evaluate expression="InitializeRequestedPrincipalContext" />
+        <evaluate expression="FilterFlowsByForcedAuthn" />
+        <evaluate expression="FilterFlowsByNonBrowserSupport" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="SelectAuthenticationFlow" />
+    </action-state>
+    
+    <!--
+    The Select action is the "dispatching" step. Proceed here routes around
+    calling a new subflow, and goes directly to the Finalize step. Anything
+    starting with "authn/" is a flow descriptor that we send
+    control to to attempt a login.
+    -->
+    <action-state id="SelectAuthenticationFlow">
+        <evaluate expression="SelectAuthenticationFlow" />
+        <evaluate expression="'proceed'" />
+        
+        <!-- proceed indicates SSO (reuse of active result) -->
+        <transition on="proceed" to="FinalizeAuthentication" />
+
+        <!-- Call a subflow with the same ID as the event. -->
+        <transition on="#{currentEvent.id.startsWith('authn/')}" to="CallAuthenticationFlow" />
+    </action-state>
+
+    <!--
+    This invokes an authentication flow to attempt a login. Anything but proceed
+    is an error, otherwise control passes to the wrap-up actions, except for a
+    ReselectFlow signal to loop back up and try another.
+    -->
+    <subflow-state id="CallAuthenticationFlow" subflow="#{currentEvent.id}">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckSubjectCanonicalization" />
+        <transition on="ReselectFlow" to="SelectAuthenticationFlow" />
+    </subflow-state>
+
+    <!-- Checks if authentication flow already completed c14n. -->
+    <decision-state id="CheckSubjectCanonicalization">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.SubjectCanonicalizationContext)).getPrincipalName() == null"
+            then="PopulateSubjectCanonicalizationContext"
+            else="DetectIdentitySwitch" />
+    </decision-state>
+
+    <!-- This sets up the proper set of candidate c14n flows to run. -->
+    <action-state id="PopulateSubjectCanonicalizationContext">
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="DetectIdentitySwitch" />
+    </subflow-state>
+
+    <!-- Handles an identity switch by dumping the old session. -->
+    <action-state id="DetectIdentitySwitch">
+        <evaluate expression="DetectIdentitySwitch" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="FinalizeAuthentication" />
+        <transition on="IdentitySwitch" to="HandleIdentitySwitch" />
+        <!-- Ignore any session layer errors at this stage. -->
+        <transition on="InputOutputError" to="HandleIdentitySwitch" />
+    </action-state>
+    
+    <!-- Whether the identity switch should fail the request. -->
+    <decision-state id="HandleIdentitySwitch">
+        <if test="IdentitySwitchIsError" then="IdentitySwitch" else="FinalizeAuthentication" />
+    </decision-state>
+    
+    <!--
+    Wraps up the subflow or result reuse by producing a SubjectContext. If a mismatch
+    exists between an existing SubjectContext and the result here, an error occurs.
+    -->
+    <action-state id="FinalizeAuthentication">
+        <evaluate expression="FinalizeAuthentication" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="UpdateSessionWithAuthenticationResult" />
+    </action-state>
+    
+    <!-- Finally, create/update the client session. -->
+    <action-state id="UpdateSessionWithAuthenticationResult">
+        <evaluate expression="UpdateSessionWithAuthenticationResult" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+        
+        <!-- Ignore any session layer errors at this stage. -->
+        <transition on="InputOutputError" to="proceed" />
+    </action-state>
+
+    <bean-import resource="authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/duo-authn-beans.xml shibboleth-idp/system/flows/authn/duo-authn-beans.xml
--- shibboleth-idp/system/flows/authn/duo-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/duo-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,42 +1,42 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-    default-init-method="initialize" default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:placeholderPrefix="%{"
-        p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Default static integration. -->
-    <bean id="shibboleth.authn.Duo.DuoIntegration" class="net.shibboleth.idp.authn.duo.BasicDuoIntegration"
-        p:APIHost="%{idp.duo.apiHost:none}"
-        p:applicationKey="%{idp.duo.applicationKey:none}"
-        p:integrationKey="%{idp.duo.integrationKey:none}"
-        p:secretKey="%{idp.duo.secretKey:none}" />
-    <bean id="shibboleth.authn.Duo.DuoIntegrationStrategy" class="com.google.common.base.Functions"
-        factory-method="constant" c:_0-ref="shibboleth.authn.Duo.DuoIntegration" />
-
-    <!-- Default username comes from previous c14n or session. -->        
-    <bean id="shibboleth.authn.Duo.UsernameLookupStrategy"
-        class="net.shibboleth.idp.session.context.navigate.CanonicalUsernameLookupStrategy" />
-
-    <!-- Can override one or more of the beans above. -->
-    <import resource="../../../conf/authn/duo-authn-config.xml" />
-
-    <alias name="shibboleth.authn.Duo.UsernameLookupStrategy" alias="CanonicalUsernameStrategy" />
-
-    <bean id="ValidateDuoWebResponse" scope="prototype"
-        class="net.shibboleth.idp.authn.duo.impl.ValidateDuoWebResponse"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:usernameLookupStrategy-ref="shibboleth.authn.Duo.UsernameLookupStrategy"
-        p:duoIntegrationLookupStrategy-ref="shibboleth.authn.Duo.DuoIntegrationStrategy"
-        p:addDefaultPrincipals="#{getObject('shibboleth.authn.Duo.addDefaultPrincipals') ?: true}" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+    default-init-method="initialize" default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:placeholderPrefix="%{"
+        p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Default static integration. -->
+    <bean id="shibboleth.authn.Duo.DuoIntegration" class="net.shibboleth.idp.authn.duo.BasicDuoIntegration"
+        p:APIHost="%{idp.duo.apiHost:none}"
+        p:applicationKey="%{idp.duo.applicationKey:none}"
+        p:integrationKey="%{idp.duo.integrationKey:none}"
+        p:secretKey="%{idp.duo.secretKey:none}" />
+    <bean id="shibboleth.authn.Duo.DuoIntegrationStrategy" class="com.google.common.base.Functions"
+        factory-method="constant" c:_0-ref="shibboleth.authn.Duo.DuoIntegration" />
+
+    <!-- Default username comes from previous c14n or session. -->        
+    <bean id="shibboleth.authn.Duo.UsernameLookupStrategy"
+        class="net.shibboleth.idp.session.context.navigate.CanonicalUsernameLookupStrategy" />
+
+    <!-- Can override one or more of the beans above. -->
+    <import resource="../../../conf/authn/duo-authn-config.xml" />
+
+    <alias name="shibboleth.authn.Duo.UsernameLookupStrategy" alias="CanonicalUsernameStrategy" />
+
+    <bean id="ValidateDuoWebResponse" scope="prototype"
+        class="net.shibboleth.idp.authn.duo.impl.ValidateDuoWebResponse"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:usernameLookupStrategy-ref="shibboleth.authn.Duo.UsernameLookupStrategy"
+        p:duoIntegrationLookupStrategy-ref="shibboleth.authn.Duo.DuoIntegrationStrategy"
+        p:addDefaultPrincipals="#{getObject('shibboleth.authn.Duo.addDefaultPrincipals') ?: true}" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/duo-authn-flow.xml shibboleth-idp/system/flows/authn/duo-authn-flow.xml
--- shibboleth-idp/system/flows/authn/duo-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/duo-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,45 +1,45 @@
-<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="authn.abstract">
-    
-    <!-- This is a simple login flow for Duo authentication. -->
-
-    <view-state id="DisplayDuoWebView" view="duo">
-        <on-render>
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext))" result="viewScope.authenticationContext" />
-            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-            <set name="viewScope.DuoIntegration" value="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.Duo.DuoIntegrationStrategy').apply(opensamlProfileRequestContext)" />
-            <set name="viewScope.canonicalUsername" value="CanonicalUsernameStrategy.apply(opensamlProfileRequestContext)" />
-            <set name="viewScope.duoHost" value="DuoIntegration.getAPIHost()" />
-            <set name="viewScope.duoRequest" value="T(net.shibboleth.idp.authn.duo.impl.DuoSupport).generateSignedRequestToken(DuoIntegration, canonicalUsername)" />
-            <set name="viewScope.duoScriptPath" value="'/js/Duo-Web-v2.min.js'" />
-        </on-render>
-        
-        <transition on="proceed" to="ValidateDuoWebResponse" />
-        <transition on="cancel" to="ReselectFlow" />
-        <transition on-exception="com.duosecurity.duoweb.DuoWebException" to="LogDuoException" />
-    </view-state>
-
-    <action-state id="ValidateDuoWebResponse">
-        <evaluate expression="ValidateDuoWebResponse" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <action-state id="LogDuoException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.authn.duo').error('DuoWebException', flowExecutionException.getCause())" />
-        </on-entry>
-        <evaluate expression="'AuthenticationException'" />
-    </action-state>
-
-    <bean-import resource="duo-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="authn.abstract">
+    
+    <!-- This is a simple login flow for Duo authentication. -->
+
+    <view-state id="DisplayDuoWebView" view="duo">
+        <on-render>
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext))" result="viewScope.authenticationContext" />
+            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+            <set name="viewScope.DuoIntegration" value="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.Duo.DuoIntegrationStrategy').apply(opensamlProfileRequestContext)" />
+            <set name="viewScope.canonicalUsername" value="CanonicalUsernameStrategy.apply(opensamlProfileRequestContext)" />
+            <set name="viewScope.duoHost" value="DuoIntegration.getAPIHost()" />
+            <set name="viewScope.duoRequest" value="T(net.shibboleth.idp.authn.duo.impl.DuoSupport).generateSignedRequestToken(DuoIntegration, canonicalUsername)" />
+            <set name="viewScope.duoScriptPath" value="'/js/Duo-Web-v2.min.js'" />
+        </on-render>
+        
+        <transition on="proceed" to="ValidateDuoWebResponse" />
+        <transition on="cancel" to="ReselectFlow" />
+        <transition on-exception="com.duosecurity.duoweb.DuoWebException" to="LogDuoException" />
+    </view-state>
+
+    <action-state id="ValidateDuoWebResponse">
+        <evaluate expression="ValidateDuoWebResponse" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <action-state id="LogDuoException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.authn.duo').error('DuoWebException', flowExecutionException.getCause())" />
+        </on-entry>
+        <evaluate expression="'AuthenticationException'" />
+    </action-state>
+
+    <bean-import resource="duo-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/external-authn-beans.xml shibboleth-idp/system/flows/authn/external-authn-beans.xml
--- shibboleth-idp/system/flows/authn/external-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/external-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,39 +1,39 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-       
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Default strategy function to obtain the external path. -->
-    <bean id="shibboleth.authn.External.externalAuthnPathStrategy"
-        class="com.google.common.base.Functions" factory-method="constant"
-        c:_0-ref="shibboleth.authn.External.externalAuthnPath" />
-
-    <import resource="../../../conf/authn/external-authn-config.xml" />
-
-    <bean id="ValidateExternalAuthentication"
-            class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
-            p:matchExpression="#{getObject('shibboleth.authn.External.matchExpression')}"
-            p:addDefaultPrincipals="#{getObject('shibboleth.authn.External.addDefaultPrincipals') ?: true}"
-            p:classifiedMessages-ref="shibboleth.authn.External.ClassifiedMessageMap"
-            p:resultCachingPredicate="#{getObject('shibboleth.authn.External.resultCachingPredicate')}" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+       
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Default strategy function to obtain the external path. -->
+    <bean id="shibboleth.authn.External.externalAuthnPathStrategy"
+        class="com.google.common.base.Functions" factory-method="constant"
+        c:_0-ref="shibboleth.authn.External.externalAuthnPath" />
+
+    <import resource="../../../conf/authn/external-authn-config.xml" />
+
+    <bean id="ValidateExternalAuthentication"
+            class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
+            p:matchExpression="#{getObject('shibboleth.authn.External.matchExpression')}"
+            p:addDefaultPrincipals="#{getObject('shibboleth.authn.External.addDefaultPrincipals') ?: true}"
+            p:classifiedMessages-ref="shibboleth.authn.External.ClassifiedMessageMap"
+            p:resultCachingPredicate="#{getObject('shibboleth.authn.External.resultCachingPredicate')}" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/external-authn-flow.xml shibboleth-idp/system/flows/authn/external-authn-flow.xml
--- shibboleth-idp/system/flows/authn/external-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/external-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,35 +1,35 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!-- This is a login flow for external authentication handled outside the webflow engine. -->
-    
-    <view-state id="ExternalTransfer" view="externalRedirect:#{T(net.shibboleth.idp.authn.ExternalAuthentication).getExternalRedirect(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.External.externalAuthnPathStrategy').apply(opensamlProfileRequestContext), flowExecutionContext.getKey().toString())}">
-        <on-render>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
-            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext, calledAsExtendedFlow?:false))" />
-        </on-render>
-        <transition to="ValidateExternalAuthentication" />
-    </view-state>
-    
-    <action-state id="ValidateExternalAuthentication">
-        <evaluate expression="ValidateExternalAuthentication" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <bean-import resource="external-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!-- This is a login flow for external authentication handled outside the webflow engine. -->
+    
+    <view-state id="ExternalTransfer" view="externalRedirect:#{T(net.shibboleth.idp.authn.ExternalAuthentication).getExternalRedirect(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.External.externalAuthnPathStrategy').apply(opensamlProfileRequestContext), flowExecutionContext.getKey().toString())}">
+        <on-render>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
+            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext, calledAsExtendedFlow?:false))" />
+        </on-render>
+        <transition to="ValidateExternalAuthentication" />
+    </view-state>
+    
+    <action-state id="ValidateExternalAuthentication">
+        <evaluate expression="ValidateExternalAuthentication" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <bean-import resource="external-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/initial-authn-flow.xml shibboleth-idp/system/flows/authn/initial-authn-flow.xml
--- shibboleth-idp/system/flows/authn/initial-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/initial-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,106 +1,106 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!--
-    This is the Initial Authentication subflow. It checks for an existing session, and if none exists,
-    selects a flow preconfigured as "initial", which means it runs independently of whether it meets the
-    requirements of a requester and is designed to establish a session so that the full Authentication subflow
-    will be able to operate with additional context based on the subject's identity.
-    -->
-    
-    <action-state id="AuthenticationSetup">
-        <evaluate expression="PopulateSessionContext" />
-        <evaluate expression="SetRPUIInformation" />
-         <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="TestForSession" />
-    </action-state>
-   
-    <!-- Check for an existing session, and just exit the flow successfully. -->
-    <decision-state id="TestForSession">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)) != null and opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)).getIdPSession() != null"
-            then="proceed"
-            else="FilterFlows" />
-    </decision-state>
-   
-    <action-state id="FilterFlows">
-        <evaluate expression="PopulateAuthenticationContextWithInitialFlow" />
-        <evaluate expression="FilterFlowsByForcedAuthn" />
-        <evaluate expression="FilterFlowsByNonBrowserSupport" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="SelectAuthenticationFlow" />
-    </action-state>
-    
-    <!--
-    The Select action is the "dispatching" step. Anything starting with "authn/"
-    is a flow descriptor that we send control to to attempt a login. Anything else
-    is an error, and "proceed" isn't an expected outcome here since no session
-    existed, making result reuse impossible.
-    -->
-    <action-state id="SelectAuthenticationFlow">
-        <evaluate expression="SelectAuthenticationFlow" />
-        
-        <!-- Call a subflow with the same ID as the event. -->
-        <transition on="#{currentEvent.id.startsWith('authn/')}" to="CallAuthenticationFlow" />
-    </action-state>
-
-    <!--
-    This invokes an authentication flow to attempt a login. Anything but proceed
-    is an error, otherwise control passes to the wrap-up actions, except for a
-    ReselectFlow signal to loop back up and try another.
-    -->
-    <subflow-state id="CallAuthenticationFlow" subflow="#{currentEvent.id}">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckSubjectCanonicalization" />
-        <transition on="ReselectFlow" to="SelectAuthenticationFlow" />
-    </subflow-state>
-
-    <!-- Checks if authentication flow already completed c14n. -->
-    <decision-state id="CheckSubjectCanonicalization">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.SubjectCanonicalizationContext)).getPrincipalName() == null"
-            then="PopulateSubjectCanonicalizationContext"
-            else="FinalizeAuthentication" />
-    </decision-state>
-
-    <!-- This sets up the proper set of candidate c14n flows to run. -->
-    <action-state id="PopulateSubjectCanonicalizationContext">
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="FinalizeAuthentication" />
-    </subflow-state>
-
-    <!--
-    Wraps up the subflow by producing a SubjectContext. If a mismatch exists between an existing
-    SubjectContext and the result here, an error occurs.
-    -->
-    <action-state id="FinalizeAuthentication">
-        <evaluate expression="FinalizeAuthentication" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="UpdateSessionWithAuthenticationResult" />
-    </action-state>
-    
-    <!-- Finally, create/update the client session. -->
-    <action-state id="UpdateSessionWithAuthenticationResult">
-        <evaluate expression="UpdateSessionWithAuthenticationResult" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-        
-        <!-- Ignore any session layer errors at this stage. -->
-        <transition on="InputOutputError" to="proceed" />
-    </action-state>
-
-    <bean-import resource="authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!--
+    This is the Initial Authentication subflow. It checks for an existing session, and if none exists,
+    selects a flow preconfigured as "initial", which means it runs independently of whether it meets the
+    requirements of a requester and is designed to establish a session so that the full Authentication subflow
+    will be able to operate with additional context based on the subject's identity.
+    -->
+    
+    <action-state id="AuthenticationSetup">
+        <evaluate expression="PopulateSessionContext" />
+        <evaluate expression="SetRPUIInformation" />
+         <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="TestForSession" />
+    </action-state>
+   
+    <!-- Check for an existing session, and just exit the flow successfully. -->
+    <decision-state id="TestForSession">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)) != null and opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.SessionContext)).getIdPSession() != null"
+            then="proceed"
+            else="FilterFlows" />
+    </decision-state>
+   
+    <action-state id="FilterFlows">
+        <evaluate expression="PopulateAuthenticationContextWithInitialFlow" />
+        <evaluate expression="FilterFlowsByForcedAuthn" />
+        <evaluate expression="FilterFlowsByNonBrowserSupport" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="SelectAuthenticationFlow" />
+    </action-state>
+    
+    <!--
+    The Select action is the "dispatching" step. Anything starting with "authn/"
+    is a flow descriptor that we send control to to attempt a login. Anything else
+    is an error, and "proceed" isn't an expected outcome here since no session
+    existed, making result reuse impossible.
+    -->
+    <action-state id="SelectAuthenticationFlow">
+        <evaluate expression="SelectAuthenticationFlow" />
+        
+        <!-- Call a subflow with the same ID as the event. -->
+        <transition on="#{currentEvent.id.startsWith('authn/')}" to="CallAuthenticationFlow" />
+    </action-state>
+
+    <!--
+    This invokes an authentication flow to attempt a login. Anything but proceed
+    is an error, otherwise control passes to the wrap-up actions, except for a
+    ReselectFlow signal to loop back up and try another.
+    -->
+    <subflow-state id="CallAuthenticationFlow" subflow="#{currentEvent.id}">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckSubjectCanonicalization" />
+        <transition on="ReselectFlow" to="SelectAuthenticationFlow" />
+    </subflow-state>
+
+    <!-- Checks if authentication flow already completed c14n. -->
+    <decision-state id="CheckSubjectCanonicalization">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.SubjectCanonicalizationContext)).getPrincipalName() == null"
+            then="PopulateSubjectCanonicalizationContext"
+            else="FinalizeAuthentication" />
+    </decision-state>
+
+    <!-- This sets up the proper set of candidate c14n flows to run. -->
+    <action-state id="PopulateSubjectCanonicalizationContext">
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="FinalizeAuthentication" />
+    </subflow-state>
+
+    <!--
+    Wraps up the subflow by producing a SubjectContext. If a mismatch exists between an existing
+    SubjectContext and the result here, an error occurs.
+    -->
+    <action-state id="FinalizeAuthentication">
+        <evaluate expression="FinalizeAuthentication" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="UpdateSessionWithAuthenticationResult" />
+    </action-state>
+    
+    <!-- Finally, create/update the client session. -->
+    <action-state id="UpdateSessionWithAuthenticationResult">
+        <evaluate expression="UpdateSessionWithAuthenticationResult" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+        
+        <!-- Ignore any session layer errors at this stage. -->
+        <transition on="InputOutputError" to="proceed" />
+    </action-state>
+
+    <bean-import resource="authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/ipaddress-authn-beans.xml shibboleth-idp/system/flows/authn/ipaddress-authn-beans.xml
--- shibboleth-idp/system/flows/authn/ipaddress-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/ipaddress-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,37 +1,37 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <import resource="../../../conf/authn/ipaddress-authn-config.xml" />
-    
-    <bean id="ExtractUserAgentAddress" class="net.shibboleth.idp.authn.impl.ExtractUserAgentAddress" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:trim="true"
-        p:transforms-ref="shibboleth.authn.IPAddress.Transforms" />
-        
-    <bean id="ValidateUserAgentAddress" class="net.shibboleth.idp.authn.impl.ValidateUserAgentAddress" scope="prototype"
-        p:mappings-ref="shibboleth.authn.IPAddress.Mappings"
-        p:addDefaultPrincipals="#{getObject('shibboleth.authn.IPAddress.addDefaultPrincipals') ?: true}"
-        p:resultCachingPredicate="#{getObject('shibboleth.authn.IPAddress.resultCachingPredicate')}" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <import resource="../../../conf/authn/ipaddress-authn-config.xml" />
+    
+    <bean id="ExtractUserAgentAddress" class="net.shibboleth.idp.authn.impl.ExtractUserAgentAddress" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:trim="true"
+        p:transforms-ref="shibboleth.authn.IPAddress.Transforms" />
+        
+    <bean id="ValidateUserAgentAddress" class="net.shibboleth.idp.authn.impl.ValidateUserAgentAddress" scope="prototype"
+        p:mappings-ref="shibboleth.authn.IPAddress.Mappings"
+        p:addDefaultPrincipals="#{getObject('shibboleth.authn.IPAddress.addDefaultPrincipals') ?: true}"
+        p:resultCachingPredicate="#{getObject('shibboleth.authn.IPAddress.resultCachingPredicate')}" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/ipaddress-authn-flow.xml shibboleth-idp/system/flows/authn/ipaddress-authn-flow.xml
--- shibboleth-idp/system/flows/authn/ipaddress-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/ipaddress-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,34 +1,34 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!-- This is a login flow for IP Address-based pseudo-authentication. -->
-    
-    <action-state id="UserAgentAddress">
-        <evaluate expression="ExtractUserAgentAddress" />
-        <evaluate expression="ValidateUserAgentAddress" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <!-- As a "fall-through" method, remap selected events to select a different flow. -->
-    <global-transitions>
-        <transition on="NoCredentials" to="ReselectFlow" />
-        <transition on="InvalidCredentials" to="ReselectFlow" />
-    </global-transitions>
-    
-    <bean-import resource="ipaddress-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!-- This is a login flow for IP Address-based pseudo-authentication. -->
+    
+    <action-state id="UserAgentAddress">
+        <evaluate expression="ExtractUserAgentAddress" />
+        <evaluate expression="ValidateUserAgentAddress" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <!-- As a "fall-through" method, remap selected events to select a different flow. -->
+    <global-transitions>
+        <transition on="NoCredentials" to="ReselectFlow" />
+        <transition on="InvalidCredentials" to="ReselectFlow" />
+    </global-transitions>
+    
+    <bean-import resource="ipaddress-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/mfa-authn-beans.xml shibboleth-idp/system/flows/authn/mfa-authn-beans.xml
--- shibboleth-idp/system/flows/authn/mfa-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/mfa-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,45 +1,45 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-    default-init-method="initialize" default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:placeholderPrefix="%{"
-        p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Parent bean for transition rules. -->
-    <bean id="shibboleth.authn.MFA.Transition"
-        class="net.shibboleth.idp.authn.MultiFactorAuthenticationTransition" abstract="true" />
-
-    <!-- Default empty map. -->
-    <util:map id="shibboleth.authn.MFA.TransitionMap" />
-
-    <bean id="shibboleth.authn.MFA.TransitionMapStrategy" class="com.google.common.base.Functions"
-        factory-method="constant" c:_0-ref="shibboleth.authn.MFA.TransitionMap" />
-
-    <import resource="../../../conf/authn/mfa-authn-config.xml" />
-
-    <bean id="PopulateMultiFactorAuthenticationContext" scope="prototype"
-        class="net.shibboleth.idp.authn.impl.PopulateMultiFactorAuthenticationContext"
-        p:transitionMapLookupStrategy-ref="shibboleth.authn.MFA.TransitionMapStrategy" />
-        
-    <bean id="TransitionMultiFactorAuthentication" scope="prototype"
-        class="net.shibboleth.idp.authn.impl.TransitionMultiFactorAuthentication"
-        p:validateLoginTransitions="#{getObject('shibboleth.authn.MFA.validateLoginTransitions') ?: true}" />
-
-    <bean id="FinalizeMultiFactorAuthentication" scope="prototype"
-        class="net.shibboleth.idp.authn.impl.FinalizeMultiFactorAuthentication"
-        p:resultMergingStrategy="#{getObject('shibboleth.authn.MFA.resultMergingStrategy')}"
-        p:resultCachingPredicate="#{getObject('shibboleth.authn.MFA.resultCachingPredicate')}" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+    default-init-method="initialize" default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:placeholderPrefix="%{"
+        p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Parent bean for transition rules. -->
+    <bean id="shibboleth.authn.MFA.Transition"
+        class="net.shibboleth.idp.authn.MultiFactorAuthenticationTransition" abstract="true" />
+
+    <!-- Default empty map. -->
+    <util:map id="shibboleth.authn.MFA.TransitionMap" />
+
+    <bean id="shibboleth.authn.MFA.TransitionMapStrategy" class="com.google.common.base.Functions"
+        factory-method="constant" c:_0-ref="shibboleth.authn.MFA.TransitionMap" />
+
+    <import resource="../../../conf/authn/mfa-authn-config.xml" />
+
+    <bean id="PopulateMultiFactorAuthenticationContext" scope="prototype"
+        class="net.shibboleth.idp.authn.impl.PopulateMultiFactorAuthenticationContext"
+        p:transitionMapLookupStrategy-ref="shibboleth.authn.MFA.TransitionMapStrategy" />
+        
+    <bean id="TransitionMultiFactorAuthentication" scope="prototype"
+        class="net.shibboleth.idp.authn.impl.TransitionMultiFactorAuthentication"
+        p:validateLoginTransitions="#{getObject('shibboleth.authn.MFA.validateLoginTransitions') ?: true}" />
+
+    <bean id="FinalizeMultiFactorAuthentication" scope="prototype"
+        class="net.shibboleth.idp.authn.impl.FinalizeMultiFactorAuthentication"
+        p:resultMergingStrategy="#{getObject('shibboleth.authn.MFA.resultMergingStrategy')}"
+        p:resultCachingPredicate="#{getObject('shibboleth.authn.MFA.resultCachingPredicate')}" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/mfa-authn-flow.xml shibboleth-idp/system/flows/authn/mfa-authn-flow.xml
--- shibboleth-idp/system/flows/authn/mfa-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/mfa-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,53 +1,53 @@
-<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="authn.abstract">
-    
-    <!-- This is a login flow for executing an arbitrary multi-factor workflow consisting of other flows. -->
-    
-    <action-state id="PopulateMultiFactorAuthenticationContext">
-        <evaluate expression="PopulateMultiFactorAuthenticationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="TransitionMultiFactorAuthentication" />
-        
-        <on-exit>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getSubcontext(T(net.shibboleth.idp.authn.context.MultiFactorAuthenticationContext))" result="flowScope.mfaContext" />
-        </on-exit>
-    </action-state>
-    
-    <action-state id="TransitionMultiFactorAuthentication">
-        <evaluate expression="TransitionMultiFactorAuthentication" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CheckProceed" />
-    </action-state>
-    
-    <decision-state id="CheckProceed">
-        <if test="mfaContext.getNextFlowId() != null" then="CallSubflow" else="FinalizeMultiFactorAuthentication" />
-    </decision-state>
-    
-    <subflow-state id="CallSubflow" subflow="#{mfaContext.getNextFlowId()}">
-        <input name="calledAsSubflow" value="true" />
-        <transition to="TransitionMultiFactorAuthentication" />
-    </subflow-state>
-    
-    <action-state id="FinalizeMultiFactorAuthentication">
-        <evaluate expression="FinalizeMultiFactorAuthentication" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <bean-import resource="mfa-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="authn.abstract">
+    
+    <!-- This is a login flow for executing an arbitrary multi-factor workflow consisting of other flows. -->
+    
+    <action-state id="PopulateMultiFactorAuthenticationContext">
+        <evaluate expression="PopulateMultiFactorAuthenticationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="TransitionMultiFactorAuthentication" />
+        
+        <on-exit>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getSubcontext(T(net.shibboleth.idp.authn.context.MultiFactorAuthenticationContext))" result="flowScope.mfaContext" />
+        </on-exit>
+    </action-state>
+    
+    <action-state id="TransitionMultiFactorAuthentication">
+        <evaluate expression="TransitionMultiFactorAuthentication" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CheckProceed" />
+    </action-state>
+    
+    <decision-state id="CheckProceed">
+        <if test="mfaContext.getNextFlowId() != null" then="CallSubflow" else="FinalizeMultiFactorAuthentication" />
+    </decision-state>
+    
+    <subflow-state id="CallSubflow" subflow="#{mfaContext.getNextFlowId()}">
+        <input name="calledAsSubflow" value="true" />
+        <transition to="TransitionMultiFactorAuthentication" />
+    </subflow-state>
+    
+    <action-state id="FinalizeMultiFactorAuthentication">
+        <evaluate expression="FinalizeMultiFactorAuthentication" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <bean-import resource="mfa-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/password-authn-beans.xml shibboleth-idp/system/flows/authn/password-authn-beans.xml
--- shibboleth-idp/system/flows/authn/password-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/password-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,121 +1,121 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-       
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <bean id="shibboleth.StorageBackedAccountLockoutManager" abstract="true"
-            class="net.shibboleth.idp.authn.impl.StorageBackedAccountLockoutManager"
-            p:storageService-ref="shibboleth.StorageService">
-        <property name="lockoutKeyStrategy">
-            <bean class="net.shibboleth.idp.authn.impl.StorageBackedAccountLockoutManager.UsernameIPLockoutKeyStrategy"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-        </property>
-    </bean>
-
-    <import resource="../../../conf/authn/password-authn-config.xml" />
-
-    <bean id="ExtractUsernamePasswordFromBasicAuth"
-        class="net.shibboleth.idp.authn.impl.ExtractUsernamePasswordFromBasicAuth" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:lowercase-ref="shibboleth.authn.Password.Lowercase"
-        p:uppercase-ref="shibboleth.authn.Password.Uppercase"
-        p:trim-ref="shibboleth.authn.Password.Trim"
-        p:transforms-ref="shibboleth.authn.Password.Transforms" />
-
-    <bean id="PreserveAuthenticationFlowState"
-        class="net.shibboleth.idp.authn.impl.PreserveAuthenticationFlowState" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:parameterNames="#{getObject('shibboleth.authn.Password.ExtendedFlowParameters')}" />
-    
-    <bean id="ExtractUsernamePasswordFromFormRequest"
-        class="net.shibboleth.idp.authn.impl.ExtractUsernamePasswordFromFormRequest" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:usernameFieldName-ref="shibboleth.authn.Password.UsernameFieldName"
-        p:passwordFieldName-ref="shibboleth.authn.Password.PasswordFieldName"
-        p:SSOBypassFieldName-ref="shibboleth.authn.Password.SSOBypassFieldName"
-        p:lowercase-ref="shibboleth.authn.Password.Lowercase"
-        p:uppercase-ref="shibboleth.authn.Password.Uppercase"
-        p:trim-ref="shibboleth.authn.Password.Trim"
-        p:transforms-ref="shibboleth.authn.Password.Transforms" />
-        
-    <bean id="ValidateUsernamePasswordAgainstJAAS"
-            class="net.shibboleth.idp.authn.impl.ValidateUsernamePasswordAgainstJAAS" scope="prototype"
-            p:savePasswordToCredentialSet="#{getObject('shibboleth.authn.Password.RetainAsPrivateCredential') ?: false}"
-            p:removeContextAfterValidation="#{getObject('shibboleth.authn.Password.RemoveAfterValidation') ?: true}"
-            p:loginConfigStrategy="#{getObject('shibboleth.authn.JAAS.LoginConfigStrategy')}"
-            p:loginConfigNames="#{getObject('shibboleth.authn.JAAS.LoginConfigNames')}"
-            p:loginConfigurations="#{getObject('shibboleth.authn.JAAS.LoginConfigurations')}"
-            p:loginConfigType="JavaLoginConfig"
-            p:addDefaultPrincipals="#{getObject('shibboleth.authn.Password.addDefaultPrincipals') ?:
-                (getObject('shibboleth.authn.Password.PrincipalOverride') == null
-                    or getObject('shibboleth.authn.Password.PrincipalOverride').isEmpty())}"
-            p:supportedPrincipals="#{getObject('shibboleth.authn.Password.PrincipalOverride')}"
-            p:classifiedMessages-ref="shibboleth.authn.Password.ClassifiedMessageMap"
-            p:resultCachingPredicate="#{getObject('shibboleth.authn.Password.resultCachingPredicate')}"
-            p:matchExpression="#{getObject('shibboleth.authn.Password.matchExpression')}"
-            p:lockoutManager="#{getObject('shibboleth.authn.Password.AccountLockoutManager')}">
-        <property name="loginConfigParameters">
-            <bean class="java.security.URIParameter">
-                <constructor-arg ref="shibboleth.authn.JAAS.JAASConfigURI" />
-            </bean>
-        </property>
-    </bean>
-
-    <bean id="ValidateUsernamePasswordAgainstKerberos"
-        class="net.shibboleth.idp.authn.impl.ValidateUsernamePasswordAgainstKerberos" scope="prototype"
-        p:savePasswordToCredentialSet="#{getObject('shibboleth.authn.Password.RetainAsPrivateCredential') ?: false}"
-        p:removeContextAfterValidation="#{getObject('shibboleth.authn.Password.RemoveAfterValidation') ?: true}"
-        p:refreshKrb5Config-ref="shibboleth.authn.Krb5.RefreshConfig"
-        p:preserveTicket-ref="shibboleth.authn.Krb5.PreserveTicket"
-        p:servicePrincipal="#{getObject('shibboleth.authn.Krb5.ServicePrincipal')}"
-        p:keytabPath="#{getObject('shibboleth.authn.Krb5.Keytab')}"
-        p:addDefaultPrincipals="#{getObject('shibboleth.authn.Password.addDefaultPrincipals') ?:
-            (getObject('shibboleth.authn.Password.PrincipalOverride') == null
-                or getObject('shibboleth.authn.Password.PrincipalOverride').isEmpty())}"
-        p:supportedPrincipals="#{getObject('shibboleth.authn.Password.PrincipalOverride')}"
-        p:classifiedMessages-ref="shibboleth.authn.Password.ClassifiedMessageMap"
-        p:resultCachingPredicate="#{getObject('shibboleth.authn.Password.resultCachingPredicate')}"
-        p:matchExpression="#{getObject('shibboleth.authn.Password.matchExpression')}"
-        p:lockoutManager="#{getObject('shibboleth.authn.Password.AccountLockoutManager')}" />
-
-    <!-- Parent beans for custom ldaptive CredentialConfig types. -->
-    <bean id="shibboleth.X509ResourceCredentialConfig"
-        class="net.shibboleth.idp.authn.impl.X509ResourceCredentialConfig" abstract="true" /> 
-    <bean id="shibboleth.KeystoreResourceCredentialConfig"
-        class="net.shibboleth.idp.authn.impl.KeystoreResourceCredentialConfig" abstract="true" /> 
-
-    <bean id="ValidateUsernamePasswordAgainstLDAP"
-        class="net.shibboleth.idp.authn.impl.ValidateUsernamePasswordAgainstLDAP" scope="prototype"
-        p:savePasswordToCredentialSet="#{getObject('shibboleth.authn.Password.RetainAsPrivateCredential') ?: false}"
-        p:removeContextAfterValidation="#{getObject('shibboleth.authn.Password.RemoveAfterValidation') ?: true}"
-        p:authenticator-ref="shibboleth.authn.LDAP.authenticator"
-        p:addDefaultPrincipals="#{getObject('shibboleth.authn.Password.addDefaultPrincipals') ?:
-            (getObject('shibboleth.authn.Password.PrincipalOverride') == null
-                or getObject('shibboleth.authn.Password.PrincipalOverride').isEmpty())}"
-        p:supportedPrincipals="#{getObject('shibboleth.authn.Password.PrincipalOverride')}"
-        p:classifiedMessages-ref="shibboleth.authn.Password.ClassifiedMessageMap"
-        p:resultCachingPredicate="#{getObject('shibboleth.authn.Password.resultCachingPredicate')}"
-        p:matchExpression="#{getObject('shibboleth.authn.Password.matchExpression')}"
-        p:returnAttributes-ref="shibboleth.authn.LDAP.returnAttributes"
-        p:lockoutManager="#{getObject('shibboleth.authn.Password.AccountLockoutManager')}" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+       
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <bean id="shibboleth.StorageBackedAccountLockoutManager" abstract="true"
+            class="net.shibboleth.idp.authn.impl.StorageBackedAccountLockoutManager"
+            p:storageService-ref="shibboleth.StorageService">
+        <property name="lockoutKeyStrategy">
+            <bean class="net.shibboleth.idp.authn.impl.StorageBackedAccountLockoutManager.UsernameIPLockoutKeyStrategy"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+        </property>
+    </bean>
+
+    <import resource="../../../conf/authn/password-authn-config.xml" />
+
+    <bean id="ExtractUsernamePasswordFromBasicAuth"
+        class="net.shibboleth.idp.authn.impl.ExtractUsernamePasswordFromBasicAuth" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:lowercase-ref="shibboleth.authn.Password.Lowercase"
+        p:uppercase-ref="shibboleth.authn.Password.Uppercase"
+        p:trim-ref="shibboleth.authn.Password.Trim"
+        p:transforms-ref="shibboleth.authn.Password.Transforms" />
+
+    <bean id="PreserveAuthenticationFlowState"
+        class="net.shibboleth.idp.authn.impl.PreserveAuthenticationFlowState" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:parameterNames="#{getObject('shibboleth.authn.Password.ExtendedFlowParameters')}" />
+    
+    <bean id="ExtractUsernamePasswordFromFormRequest"
+        class="net.shibboleth.idp.authn.impl.ExtractUsernamePasswordFromFormRequest" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:usernameFieldName-ref="shibboleth.authn.Password.UsernameFieldName"
+        p:passwordFieldName-ref="shibboleth.authn.Password.PasswordFieldName"
+        p:SSOBypassFieldName-ref="shibboleth.authn.Password.SSOBypassFieldName"
+        p:lowercase-ref="shibboleth.authn.Password.Lowercase"
+        p:uppercase-ref="shibboleth.authn.Password.Uppercase"
+        p:trim-ref="shibboleth.authn.Password.Trim"
+        p:transforms-ref="shibboleth.authn.Password.Transforms" />
+        
+    <bean id="ValidateUsernamePasswordAgainstJAAS"
+            class="net.shibboleth.idp.authn.impl.ValidateUsernamePasswordAgainstJAAS" scope="prototype"
+            p:savePasswordToCredentialSet="#{getObject('shibboleth.authn.Password.RetainAsPrivateCredential') ?: false}"
+            p:removeContextAfterValidation="#{getObject('shibboleth.authn.Password.RemoveAfterValidation') ?: true}"
+            p:loginConfigStrategy="#{getObject('shibboleth.authn.JAAS.LoginConfigStrategy')}"
+            p:loginConfigNames="#{getObject('shibboleth.authn.JAAS.LoginConfigNames')}"
+            p:loginConfigurations="#{getObject('shibboleth.authn.JAAS.LoginConfigurations')}"
+            p:loginConfigType="JavaLoginConfig"
+            p:addDefaultPrincipals="#{getObject('shibboleth.authn.Password.addDefaultPrincipals') ?:
+                (getObject('shibboleth.authn.Password.PrincipalOverride') == null
+                    or getObject('shibboleth.authn.Password.PrincipalOverride').isEmpty())}"
+            p:supportedPrincipals="#{getObject('shibboleth.authn.Password.PrincipalOverride')}"
+            p:classifiedMessages-ref="shibboleth.authn.Password.ClassifiedMessageMap"
+            p:resultCachingPredicate="#{getObject('shibboleth.authn.Password.resultCachingPredicate')}"
+            p:matchExpression="#{getObject('shibboleth.authn.Password.matchExpression')}"
+            p:lockoutManager="#{getObject('shibboleth.authn.Password.AccountLockoutManager')}">
+        <property name="loginConfigParameters">
+            <bean class="java.security.URIParameter">
+                <constructor-arg ref="shibboleth.authn.JAAS.JAASConfigURI" />
+            </bean>
+        </property>
+    </bean>
+
+    <bean id="ValidateUsernamePasswordAgainstKerberos"
+        class="net.shibboleth.idp.authn.impl.ValidateUsernamePasswordAgainstKerberos" scope="prototype"
+        p:savePasswordToCredentialSet="#{getObject('shibboleth.authn.Password.RetainAsPrivateCredential') ?: false}"
+        p:removeContextAfterValidation="#{getObject('shibboleth.authn.Password.RemoveAfterValidation') ?: true}"
+        p:refreshKrb5Config-ref="shibboleth.authn.Krb5.RefreshConfig"
+        p:preserveTicket-ref="shibboleth.authn.Krb5.PreserveTicket"
+        p:servicePrincipal="#{getObject('shibboleth.authn.Krb5.ServicePrincipal')}"
+        p:keytabPath="#{getObject('shibboleth.authn.Krb5.Keytab')}"
+        p:addDefaultPrincipals="#{getObject('shibboleth.authn.Password.addDefaultPrincipals') ?:
+            (getObject('shibboleth.authn.Password.PrincipalOverride') == null
+                or getObject('shibboleth.authn.Password.PrincipalOverride').isEmpty())}"
+        p:supportedPrincipals="#{getObject('shibboleth.authn.Password.PrincipalOverride')}"
+        p:classifiedMessages-ref="shibboleth.authn.Password.ClassifiedMessageMap"
+        p:resultCachingPredicate="#{getObject('shibboleth.authn.Password.resultCachingPredicate')}"
+        p:matchExpression="#{getObject('shibboleth.authn.Password.matchExpression')}"
+        p:lockoutManager="#{getObject('shibboleth.authn.Password.AccountLockoutManager')}" />
+
+    <!-- Parent beans for custom ldaptive CredentialConfig types. -->
+    <bean id="shibboleth.X509ResourceCredentialConfig"
+        class="net.shibboleth.idp.authn.impl.X509ResourceCredentialConfig" abstract="true" /> 
+    <bean id="shibboleth.KeystoreResourceCredentialConfig"
+        class="net.shibboleth.idp.authn.impl.KeystoreResourceCredentialConfig" abstract="true" /> 
+
+    <bean id="ValidateUsernamePasswordAgainstLDAP"
+        class="net.shibboleth.idp.authn.impl.ValidateUsernamePasswordAgainstLDAP" scope="prototype"
+        p:savePasswordToCredentialSet="#{getObject('shibboleth.authn.Password.RetainAsPrivateCredential') ?: false}"
+        p:removeContextAfterValidation="#{getObject('shibboleth.authn.Password.RemoveAfterValidation') ?: true}"
+        p:authenticator-ref="shibboleth.authn.LDAP.authenticator"
+        p:addDefaultPrincipals="#{getObject('shibboleth.authn.Password.addDefaultPrincipals') ?:
+            (getObject('shibboleth.authn.Password.PrincipalOverride') == null
+                or getObject('shibboleth.authn.Password.PrincipalOverride').isEmpty())}"
+        p:supportedPrincipals="#{getObject('shibboleth.authn.Password.PrincipalOverride')}"
+        p:classifiedMessages-ref="shibboleth.authn.Password.ClassifiedMessageMap"
+        p:resultCachingPredicate="#{getObject('shibboleth.authn.Password.resultCachingPredicate')}"
+        p:matchExpression="#{getObject('shibboleth.authn.Password.matchExpression')}"
+        p:returnAttributes-ref="shibboleth.authn.LDAP.returnAttributes"
+        p:lockoutManager="#{getObject('shibboleth.authn.Password.AccountLockoutManager')}" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/password-authn-flow.xml shibboleth-idp/system/flows/authn/password-authn-flow.xml
--- shibboleth-idp/system/flows/authn/password-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/password-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,112 +1,112 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract, authn/conditions">
-
-    <!--
-    This is a login flow for basic-auth or form-based password authentication. The back-end step is named
-    "ValidateUsernamePassword" and can be supplied by different back-end implementation files. 
-    -->
-
-    <var name="thisFlow" class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor" />
-
-    <action-state id="ExtractUsernamePasswordFromBasicAuth">
-        <evaluate expression="ExtractUsernamePasswordFromBasicAuth" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ValidateUsernamePassword" />
-        
-        <!-- Fall through to a different flow if basic-auth extract fails on a passive or non-browser request. -->
-        <transition on="#{ opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive() || !opensamlProfileRequestContext.isBrowserProfile() }" to="ReselectFlow" />
-        
-        <transition on="NoCredentials" to="DisplayUsernamePasswordPage" />
-        <transition on="InvalidCredentials" to="DisplayUsernamePasswordPage" />
-        <on-exit>
-            <set name="thisFlow" value="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAttemptedFlow()" />
-        </on-exit>
-    </action-state>
-    
-    <view-state id="DisplayUsernamePasswordPage" view="login">
-        <on-render>
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext))" result="viewScope.authenticationContext" />
-            <evaluate expression="authenticationContext.getPotentialFlows().values().?[id matches 'authn/(' + (flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.authn.Password.ExtendedFlows') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.Password.ExtendedFlows').trim() : '') + ')']" result="viewScope.extendedAuthenticationFlows" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.authn.Password.PrincipalOverride') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.Password.PrincipalOverride') : null" result="viewScope.passwordPrincipals" />
-            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
-            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationErrorContext))" result="viewScope.authenticationErrorContext" />
-            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationWarningContext))" result="viewScope.authenticationWarningContext" />
-            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.authn.context.LDAPResponseContext))" result="viewScope.ldapResponseContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-        </on-render>
-
-        <transition on="proceed" to="ExtractUsernamePasswordFromFormRequest">
-            <evaluate expression="authenticationContext.setAttemptedFlow(thisFlow)" />
-        </transition>
-        <transition on="#{currentEvent.id.startsWith('authn/')}" to="PreserveAuthenticationFlowState">
-            <evaluate expression="authenticationContext.setAttemptedFlow(authenticationContext.getPotentialFlows().get(currentEvent.id))" />
-        </transition>
-
-        <on-exit>
-            <evaluate expression="opensamlProfileRequestContext.addSubcontext(new net.shibboleth.idp.consent.context.ConsentManagementContext(), true).setRevokeConsent(requestParameters._shib_idp_revokeConsent == 'true')" />
-        </on-exit>
-    </view-state>
-    
-    <action-state id="PreserveAuthenticationFlowState">
-        <evaluate expression="PreserveAuthenticationFlowState" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallExtendedFlow" />
-    </action-state>
-    
-    <subflow-state id="CallExtendedFlow" subflow="#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAttemptedFlow().getId()}">
-        <input name="calledAsSubflow" value="true" />
-        <input name="calledAsExtendedFlow" value="true" />
-        <transition on="proceed" to="proceed" />
-        <transition to="DisplayUsernamePasswordPage">
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getIntermediateFlows().put(opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAttemptedFlow().getId(), opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAttemptedFlow())" />
-        </transition>
-    </subflow-state>
-    
-    <action-state id="ExtractUsernamePasswordFromFormRequest">
-        <evaluate expression="ExtractUsernamePasswordFromFormRequest" />
-        <evaluate expression="'proceed'" />
-    
-        <!-- Let the validate action handle any problems later. -->        
-        <transition to="ValidateUsernamePassword" />
-    </action-state>
-    
-    <action-state id="ValidateUsernamePassword" parent="authn/conditions#ValidateUsernamePassword">
-        <evaluate expression="ValidateUsernamePassword" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ContinueSuccessfulAuthentication" />
-        
-        <!-- Fall through to a different flow if login fails on a passive or non-browser request. -->
-        <transition on="#{ opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive() || !opensamlProfileRequestContext.isBrowserProfile() }" to="ReselectFlow" />
-
-        <!-- Other event transitions are determined by deployer in /flows/authn/conditions/conditions-flow.xml -->
-    </action-state>
-
-    <action-state id="ContinueSuccessfulAuthentication">
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <bean-import resource="password-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract, authn/conditions">
+
+    <!--
+    This is a login flow for basic-auth or form-based password authentication. The back-end step is named
+    "ValidateUsernamePassword" and can be supplied by different back-end implementation files. 
+    -->
+
+    <var name="thisFlow" class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor" />
+
+    <action-state id="ExtractUsernamePasswordFromBasicAuth">
+        <evaluate expression="ExtractUsernamePasswordFromBasicAuth" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ValidateUsernamePassword" />
+        
+        <!-- Fall through to a different flow if basic-auth extract fails on a passive or non-browser request. -->
+        <transition on="#{ opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive() || !opensamlProfileRequestContext.isBrowserProfile() }" to="ReselectFlow" />
+        
+        <transition on="NoCredentials" to="DisplayUsernamePasswordPage" />
+        <transition on="InvalidCredentials" to="DisplayUsernamePasswordPage" />
+        <on-exit>
+            <set name="thisFlow" value="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAttemptedFlow()" />
+        </on-exit>
+    </action-state>
+    
+    <view-state id="DisplayUsernamePasswordPage" view="login">
+        <on-render>
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext))" result="viewScope.authenticationContext" />
+            <evaluate expression="authenticationContext.getPotentialFlows().values().?[id matches 'authn/(' + (flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.authn.Password.ExtendedFlows') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.Password.ExtendedFlows').trim() : '') + ')']" result="viewScope.extendedAuthenticationFlows" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.authn.Password.PrincipalOverride') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.Password.PrincipalOverride') : null" result="viewScope.passwordPrincipals" />
+            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
+            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationErrorContext))" result="viewScope.authenticationErrorContext" />
+            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationWarningContext))" result="viewScope.authenticationWarningContext" />
+            <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.authn.context.LDAPResponseContext))" result="viewScope.ldapResponseContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+        </on-render>
+
+        <transition on="proceed" to="ExtractUsernamePasswordFromFormRequest">
+            <evaluate expression="authenticationContext.setAttemptedFlow(thisFlow)" />
+        </transition>
+        <transition on="#{currentEvent.id.startsWith('authn/')}" to="PreserveAuthenticationFlowState">
+            <evaluate expression="authenticationContext.setAttemptedFlow(authenticationContext.getPotentialFlows().get(currentEvent.id))" />
+        </transition>
+
+        <on-exit>
+            <evaluate expression="opensamlProfileRequestContext.addSubcontext(new net.shibboleth.idp.consent.context.ConsentManagementContext(), true).setRevokeConsent(requestParameters._shib_idp_revokeConsent == 'true')" />
+        </on-exit>
+    </view-state>
+    
+    <action-state id="PreserveAuthenticationFlowState">
+        <evaluate expression="PreserveAuthenticationFlowState" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallExtendedFlow" />
+    </action-state>
+    
+    <subflow-state id="CallExtendedFlow" subflow="#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAttemptedFlow().getId()}">
+        <input name="calledAsSubflow" value="true" />
+        <input name="calledAsExtendedFlow" value="true" />
+        <transition on="proceed" to="proceed" />
+        <transition to="DisplayUsernamePasswordPage">
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getIntermediateFlows().put(opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAttemptedFlow().getId(), opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAttemptedFlow())" />
+        </transition>
+    </subflow-state>
+    
+    <action-state id="ExtractUsernamePasswordFromFormRequest">
+        <evaluate expression="ExtractUsernamePasswordFromFormRequest" />
+        <evaluate expression="'proceed'" />
+    
+        <!-- Let the validate action handle any problems later. -->        
+        <transition to="ValidateUsernamePassword" />
+    </action-state>
+    
+    <action-state id="ValidateUsernamePassword" parent="authn/conditions#ValidateUsernamePassword">
+        <evaluate expression="ValidateUsernamePassword" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ContinueSuccessfulAuthentication" />
+        
+        <!-- Fall through to a different flow if login fails on a passive or non-browser request. -->
+        <transition on="#{ opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive() || !opensamlProfileRequestContext.isBrowserProfile() }" to="ReselectFlow" />
+
+        <!-- Other event transitions are determined by deployer in /flows/authn/conditions/conditions-flow.xml -->
+    </action-state>
+
+    <action-state id="ContinueSuccessfulAuthentication">
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <bean-import resource="password-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/remoteuser-authn-beans.xml shibboleth-idp/system/flows/authn/remoteuser-authn-beans.xml
--- shibboleth-idp/system/flows/authn/remoteuser-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/remoteuser-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,40 +1,40 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-       
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Default strategy function to obtain the external path. -->
-    <bean id="shibboleth.authn.RemoteUser.externalAuthnPathStrategy"
-        class="com.google.common.base.Functions" factory-method="constant"
-        c:_0-ref="shibboleth.authn.RemoteUser.externalAuthnPath" />
-    
-    <import resource="../../../conf/authn/remoteuser-authn-config.xml" />
-
-    <bean id="ValidateExternalAuthentication"
-        class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
-        p:metricName="net.shibboleth.idp.authn.remoteuser"
-        p:matchExpression="#{getObject('shibboleth.authn.RemoteUser.matchExpression')}"
-        p:addDefaultPrincipals="#{getObject('shibboleth.authn.RemoteUser.addDefaultPrincipals') ?: true}"
-        p:classifiedMessages-ref="shibboleth.authn.RemoteUser.ClassifiedMessageMap"
-        p:resultCachingPredicate="#{getObject('shibboleth.authn.RemoteUser.resultCachingPredicate')}" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+       
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Default strategy function to obtain the external path. -->
+    <bean id="shibboleth.authn.RemoteUser.externalAuthnPathStrategy"
+        class="com.google.common.base.Functions" factory-method="constant"
+        c:_0-ref="shibboleth.authn.RemoteUser.externalAuthnPath" />
+    
+    <import resource="../../../conf/authn/remoteuser-authn-config.xml" />
+
+    <bean id="ValidateExternalAuthentication"
+        class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
+        p:metricName="net.shibboleth.idp.authn.remoteuser"
+        p:matchExpression="#{getObject('shibboleth.authn.RemoteUser.matchExpression')}"
+        p:addDefaultPrincipals="#{getObject('shibboleth.authn.RemoteUser.addDefaultPrincipals') ?: true}"
+        p:classifiedMessages-ref="shibboleth.authn.RemoteUser.ClassifiedMessageMap"
+        p:resultCachingPredicate="#{getObject('shibboleth.authn.RemoteUser.resultCachingPredicate')}" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/remoteuser-authn-flow.xml shibboleth-idp/system/flows/authn/remoteuser-authn-flow.xml
--- shibboleth-idp/system/flows/authn/remoteuser-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/remoteuser-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,35 +1,35 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!-- This is a login flow for container-based pseudo-authentication implemented via external authentication. -->
-    
-    <view-state id="ExternalTransfer" view="externalRedirect:#{T(net.shibboleth.idp.authn.ExternalAuthentication).getExternalRedirect(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.RemoteUser.externalAuthnPathStrategy').apply(opensamlProfileRequestContext), flowExecutionContext.getKey().toString())}">
-        <on-render>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
-            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext, calledAsExtendedFlow?:false))" />
-        </on-render>
-        <transition to="ValidateExternalAuthentication" />
-    </view-state>
-    
-    <action-state id="ValidateExternalAuthentication">
-        <evaluate expression="ValidateExternalAuthentication" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <bean-import resource="remoteuser-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!-- This is a login flow for container-based pseudo-authentication implemented via external authentication. -->
+    
+    <view-state id="ExternalTransfer" view="externalRedirect:#{T(net.shibboleth.idp.authn.ExternalAuthentication).getExternalRedirect(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.RemoteUser.externalAuthnPathStrategy').apply(opensamlProfileRequestContext), flowExecutionContext.getKey().toString())}">
+        <on-render>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
+            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext, calledAsExtendedFlow?:false))" />
+        </on-render>
+        <transition to="ValidateExternalAuthentication" />
+    </view-state>
+    
+    <action-state id="ValidateExternalAuthentication">
+        <evaluate expression="ValidateExternalAuthentication" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <bean-import resource="remoteuser-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/remoteuser-internal-authn-beans.xml shibboleth-idp/system/flows/authn/remoteuser-internal-authn-beans.xml
--- shibboleth-idp/system/flows/authn/remoteuser-internal-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/remoteuser-internal-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,44 +1,44 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-    
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <import resource="../../../conf/authn/remoteuser-internal-authn-config.xml" />
-    
-    <bean id="ExtractRemoteUser" class="net.shibboleth.idp.authn.impl.ExtractRemoteUser" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:checkRemoteUser-ref="shibboleth.authn.RemoteUser.checkRemoteUser"
-        p:checkHeaders-ref="shibboleth.authn.RemoteUser.checkHeaders"
-        p:checkAttributes-ref="shibboleth.authn.RemoteUser.checkAttributes"
-        p:lowercase-ref="shibboleth.authn.RemoteUser.Lowercase"
-        p:uppercase-ref="shibboleth.authn.RemoteUser.Uppercase"
-        p:trim-ref="shibboleth.authn.RemoteUser.Trim"
-        p:transforms-ref="shibboleth.authn.RemoteUser.Transforms" />
-        
-    <bean id="ValidateRemoteUser" class="net.shibboleth.idp.authn.impl.ValidateRemoteUser" scope="prototype"
-        p:matchExpression="#{getObject('shibboleth.authn.RemoteUser.matchExpression')}"
-        p:whitelistedUsernames-ref="shibboleth.authn.RemoteUser.whitelistedUsernames"
-        p:blacklistedUsernames-ref="shibboleth.authn.RemoteUser.blacklistedUsernames"
-        p:addDefaultPrincipals="#{getObject('shibboleth.authn.RemoteUser.addDefaultPrincipals') ?: true}"
-        p:resultCachingPredicate="#{getObject('shibboleth.authn.RemoteUser.resultCachingPredicate')}" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+    
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <import resource="../../../conf/authn/remoteuser-internal-authn-config.xml" />
+    
+    <bean id="ExtractRemoteUser" class="net.shibboleth.idp.authn.impl.ExtractRemoteUser" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:checkRemoteUser-ref="shibboleth.authn.RemoteUser.checkRemoteUser"
+        p:checkHeaders-ref="shibboleth.authn.RemoteUser.checkHeaders"
+        p:checkAttributes-ref="shibboleth.authn.RemoteUser.checkAttributes"
+        p:lowercase-ref="shibboleth.authn.RemoteUser.Lowercase"
+        p:uppercase-ref="shibboleth.authn.RemoteUser.Uppercase"
+        p:trim-ref="shibboleth.authn.RemoteUser.Trim"
+        p:transforms-ref="shibboleth.authn.RemoteUser.Transforms" />
+        
+    <bean id="ValidateRemoteUser" class="net.shibboleth.idp.authn.impl.ValidateRemoteUser" scope="prototype"
+        p:matchExpression="#{getObject('shibboleth.authn.RemoteUser.matchExpression')}"
+        p:whitelistedUsernames-ref="shibboleth.authn.RemoteUser.whitelistedUsernames"
+        p:blacklistedUsernames-ref="shibboleth.authn.RemoteUser.blacklistedUsernames"
+        p:addDefaultPrincipals="#{getObject('shibboleth.authn.RemoteUser.addDefaultPrincipals') ?: true}"
+        p:resultCachingPredicate="#{getObject('shibboleth.authn.RemoteUser.resultCachingPredicate')}" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/remoteuser-internal-authn-flow.xml shibboleth-idp/system/flows/authn/remoteuser-internal-authn-flow.xml
--- shibboleth-idp/system/flows/authn/remoteuser-internal-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/remoteuser-internal-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,34 +1,34 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!-- This is a login flow for container-based pseudo-authentication. -->
-    
-    <action-state id="RemoteUser">
-        <evaluate expression="ExtractRemoteUser" />
-        <evaluate expression="ValidateRemoteUser" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <!-- As a "fall-through" method, remap selected events to select a different flow. -->
-    <global-transitions>
-        <transition on="NoCredentials" to="ReselectFlow" />
-        <transition on="InvalidCredentials" to="ReselectFlow" />
-    </global-transitions>
-
-    <bean-import resource="remoteuser-internal-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!-- This is a login flow for container-based pseudo-authentication. -->
+    
+    <action-state id="RemoteUser">
+        <evaluate expression="ExtractRemoteUser" />
+        <evaluate expression="ValidateRemoteUser" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <!-- As a "fall-through" method, remap selected events to select a different flow. -->
+    <global-transitions>
+        <transition on="NoCredentials" to="ReselectFlow" />
+        <transition on="InvalidCredentials" to="ReselectFlow" />
+    </global-transitions>
+
+    <bean-import resource="remoteuser-internal-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/spnego-authn-beans.xml shibboleth-idp/system/flows/authn/spnego-authn-beans.xml
--- shibboleth-idp/system/flows/authn/spnego-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/spnego-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,60 +1,60 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <bean id="shibboleth.KerberosRealmSettings"
-        class="net.shibboleth.idp.authn.spnego.impl.KerberosRealmSettings" abstract="true" />
-
-    <bean id="shibboleth.authn.SPNEGO.externalAuthnPath" class="java.lang.String"
-        c:_0="servletRelative:%{idp.authn.spnego.externalAuthnPath:/Authn/SPNEGO}" />
-
-    <!-- Default strategy function to obtain the external path. -->
-    <bean id="shibboleth.authn.SPNEGO.externalAuthnPathStrategy"
-        class="com.google.common.base.Functions" factory-method="constant"
-        c:_0-ref="shibboleth.authn.SPNEGO.externalAuthnPath" />
-
-    <import resource="../../../conf/authn/spnego-authn-config.xml" />
-
-    <!-- Make configurable values available in flow. -->
-    
-    <alias name="shibboleth.authn.SPNEGO.EnforceRun" alias="enforceRun"/>
-
-    <!-- Kerberos settings and realms. -->
-    
-    <bean id="shibboleth.authn.SPNEGO.Krb5.Settings" class="net.shibboleth.idp.authn.spnego.impl.KerberosSettings"
-        p:refreshKrb5Config-ref="shibboleth.authn.SPNEGO.Krb5.RefreshConfig"
-        p:realms-ref="shibboleth.authn.SPNEGO.Krb5.Realms" />
-
-    <!-- Action beans. -->
-
-    <bean id="ValidateExternalAuthentication"
-            class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
-            p:metricName="net.shibboleth.idp.authn.spnego"
-            p:matchExpression="#{getObject('shibboleth.authn.SPNEGO.matchExpression')}"
-            p:classifiedMessages-ref="shibboleth.authn.SPNEGO.ClassifiedMessageMap" />
-            
-    <bean id="SPNEGOAutoLoginManager"
-          class="net.shibboleth.idp.authn.spnego.impl.SPNEGOAutoLoginManager"
-          p:cookieManager-ref="shibboleth.UserPrefsCookieManager" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <bean id="shibboleth.KerberosRealmSettings"
+        class="net.shibboleth.idp.authn.spnego.impl.KerberosRealmSettings" abstract="true" />
+
+    <bean id="shibboleth.authn.SPNEGO.externalAuthnPath" class="java.lang.String"
+        c:_0="servletRelative:%{idp.authn.spnego.externalAuthnPath:/Authn/SPNEGO}" />
+
+    <!-- Default strategy function to obtain the external path. -->
+    <bean id="shibboleth.authn.SPNEGO.externalAuthnPathStrategy"
+        class="com.google.common.base.Functions" factory-method="constant"
+        c:_0-ref="shibboleth.authn.SPNEGO.externalAuthnPath" />
+
+    <import resource="../../../conf/authn/spnego-authn-config.xml" />
+
+    <!-- Make configurable values available in flow. -->
+    
+    <alias name="shibboleth.authn.SPNEGO.EnforceRun" alias="enforceRun"/>
+
+    <!-- Kerberos settings and realms. -->
+    
+    <bean id="shibboleth.authn.SPNEGO.Krb5.Settings" class="net.shibboleth.idp.authn.spnego.impl.KerberosSettings"
+        p:refreshKrb5Config-ref="shibboleth.authn.SPNEGO.Krb5.RefreshConfig"
+        p:realms-ref="shibboleth.authn.SPNEGO.Krb5.Realms" />
+
+    <!-- Action beans. -->
+
+    <bean id="ValidateExternalAuthentication"
+            class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
+            p:metricName="net.shibboleth.idp.authn.spnego"
+            p:matchExpression="#{getObject('shibboleth.authn.SPNEGO.matchExpression')}"
+            p:classifiedMessages-ref="shibboleth.authn.SPNEGO.ClassifiedMessageMap" />
+            
+    <bean id="SPNEGOAutoLoginManager"
+          class="net.shibboleth.idp.authn.spnego.impl.SPNEGOAutoLoginManager"
+          p:cookieManager-ref="shibboleth.UserPrefsCookieManager" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/spnego-authn-flow.xml shibboleth-idp/system/flows/authn/spnego-authn-flow.xml
--- shibboleth-idp/system/flows/authn/spnego-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/spnego-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,105 +1,105 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!-- This is a login flow for SPNEGO authentication implemented via external authentication. -->
-
-    <!-- Store current autologin state to a flow variable. -->
-    <on-start>
-        <evaluate expression="SPNEGOAutoLoginManager.isEnabled()"
-            result="flowScope.enableAutoLoginOnSuccess" />
-    </on-start>
-
-    <!-- If running SPNEGO is enforced for all users, run SPNEGO without further checks. -->
-    <decision-state id="CheckEnforceRun">
-        <if test="enforceRun"
-            then="DisableAutoLoginBeforeRunSPNEGO"
-            else="CheckCalledAsExtendedFlow" />
-    </decision-state>
-
-    <!-- If called as extended flow from another login flow, the flow always runs. -->
-    <decision-state id="CheckCalledAsExtendedFlow">
-      <if test="calledAsExtendedFlow"
-          then="CheckEnableAutoLoginRequested"
-          else="CheckAutoLoginEnabled" />
-    </decision-state>
-
-    <!--  If called directly, the flow exits unless autologin is enabled. -->
-    <decision-state id="CheckAutoLoginEnabled">
-        <if test="SPNEGOAutoLoginManager.isEnabled()"
-            then="DisableAutoLoginBeforeRunSPNEGO"
-            else="ReselectFlow" />
-    </decision-state>
-
-    <!-- If called as extended flow, check if interflow state contains autologin-enabling parameter. -->
-    <decision-state id="CheckEnableAutoLoginRequested">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAuthenticationStateMap().get(T(net.shibboleth.idp.authn.spnego.impl.SPNEGOAutoLoginManager).AUTOLOGIN_PARAMETER_NAME)"
-            then="MarkEnableAutoLoginOnSuccess"
-            else="DisableAutoLoginBeforeRunSPNEGO" />
-    </decision-state>
-
-    <action-state id="MarkEnableAutoLoginOnSuccess">
-        <evaluate expression="true" result="flowScope.enableAutoLoginOnSuccess" />
-        
-        <transition to="DisableAutoLoginBeforeRunSPNEGO" />
-    </action-state>
-
-    <action-state id="DisableAutoLoginBeforeRunSPNEGO">
-        <evaluate expression="SPNEGOAutoLoginManager.disable()" />
-
-        <transition to="RunSPNEGO" />
-    </action-state>
-
-    <view-state id="RunSPNEGO" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.SPNEGO.externalAuthnPathStrategy').apply(opensamlProfileRequestContext)}/#{flowExecutionContext.getKey().toString()}?conversation=#{flowExecutionContext.getKey().toString()}">
-        <on-render>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.spnego.impl.SPNEGOContext(), true).setKerberosSettings(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.SPNEGO.Krb5.Settings'))" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
-            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext))" />
-        </on-render>
-
-        <transition on="proceed" to="ValidateExternalAuthentication" />
-    </view-state>
-
-    <action-state id="ValidateExternalAuthentication">
-        <evaluate expression="ValidateExternalAuthentication" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-        
-        <!--
-        If not mapped otherwise in the ClassifiedMessages map, remap some
-        relevant events to (possibly) fall through to a different login flow.
-        This preserves the error event captured in the context tree for later
-        use by a UI in a different flow.  
-        -->
-        <transition on="NoCredentials" to="ReselectFlow" />
-        <transition on="InvalidCredentials" to="ReselectFlow" />
-        <transition on="SPNEGONotAvailable" to="ReselectFlow" />
-        <transition on="NTLMUnsupported" to="ReselectFlow" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckWhetherToEnableAutoLogin" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <decision-state id="CheckWhetherToEnableAutoLogin">
-        <if test="flowScope.enableAutoLoginOnSuccess"
-            then="EnableAutoLoginOnSuccess"
-            else="proceed" />
-    </decision-state>
-
-    <action-state id="EnableAutoLoginOnSuccess">
-        <evaluate expression="SPNEGOAutoLoginManager.enable()" />
-
-        <transition to="proceed" />
-    </action-state>
-
-    <bean-import resource="spnego-authn-beans.xml" />
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!-- This is a login flow for SPNEGO authentication implemented via external authentication. -->
+
+    <!-- Store current autologin state to a flow variable. -->
+    <on-start>
+        <evaluate expression="SPNEGOAutoLoginManager.isEnabled()"
+            result="flowScope.enableAutoLoginOnSuccess" />
+    </on-start>
+
+    <!-- If running SPNEGO is enforced for all users, run SPNEGO without further checks. -->
+    <decision-state id="CheckEnforceRun">
+        <if test="enforceRun"
+            then="DisableAutoLoginBeforeRunSPNEGO"
+            else="CheckCalledAsExtendedFlow" />
+    </decision-state>
+
+    <!-- If called as extended flow from another login flow, the flow always runs. -->
+    <decision-state id="CheckCalledAsExtendedFlow">
+      <if test="calledAsExtendedFlow"
+          then="CheckEnableAutoLoginRequested"
+          else="CheckAutoLoginEnabled" />
+    </decision-state>
+
+    <!--  If called directly, the flow exits unless autologin is enabled. -->
+    <decision-state id="CheckAutoLoginEnabled">
+        <if test="SPNEGOAutoLoginManager.isEnabled()"
+            then="DisableAutoLoginBeforeRunSPNEGO"
+            else="ReselectFlow" />
+    </decision-state>
+
+    <!-- If called as extended flow, check if interflow state contains autologin-enabling parameter. -->
+    <decision-state id="CheckEnableAutoLoginRequested">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getAuthenticationStateMap().get(T(net.shibboleth.idp.authn.spnego.impl.SPNEGOAutoLoginManager).AUTOLOGIN_PARAMETER_NAME)"
+            then="MarkEnableAutoLoginOnSuccess"
+            else="DisableAutoLoginBeforeRunSPNEGO" />
+    </decision-state>
+
+    <action-state id="MarkEnableAutoLoginOnSuccess">
+        <evaluate expression="true" result="flowScope.enableAutoLoginOnSuccess" />
+        
+        <transition to="DisableAutoLoginBeforeRunSPNEGO" />
+    </action-state>
+
+    <action-state id="DisableAutoLoginBeforeRunSPNEGO">
+        <evaluate expression="SPNEGOAutoLoginManager.disable()" />
+
+        <transition to="RunSPNEGO" />
+    </action-state>
+
+    <view-state id="RunSPNEGO" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.SPNEGO.externalAuthnPathStrategy').apply(opensamlProfileRequestContext)}/#{flowExecutionContext.getKey().toString()}?conversation=#{flowExecutionContext.getKey().toString()}">
+        <on-render>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.spnego.impl.SPNEGOContext(), true).setKerberosSettings(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.SPNEGO.Krb5.Settings'))" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
+            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext))" />
+        </on-render>
+
+        <transition on="proceed" to="ValidateExternalAuthentication" />
+    </view-state>
+
+    <action-state id="ValidateExternalAuthentication">
+        <evaluate expression="ValidateExternalAuthentication" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+        
+        <!--
+        If not mapped otherwise in the ClassifiedMessages map, remap some
+        relevant events to (possibly) fall through to a different login flow.
+        This preserves the error event captured in the context tree for later
+        use by a UI in a different flow.  
+        -->
+        <transition on="NoCredentials" to="ReselectFlow" />
+        <transition on="InvalidCredentials" to="ReselectFlow" />
+        <transition on="SPNEGONotAvailable" to="ReselectFlow" />
+        <transition on="NTLMUnsupported" to="ReselectFlow" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckWhetherToEnableAutoLogin" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <decision-state id="CheckWhetherToEnableAutoLogin">
+        <if test="flowScope.enableAutoLoginOnSuccess"
+            then="EnableAutoLoginOnSuccess"
+            else="proceed" />
+    </decision-state>
+
+    <action-state id="EnableAutoLoginOnSuccess">
+        <evaluate expression="SPNEGOAutoLoginManager.enable()" />
+
+        <transition to="proceed" />
+    </action-state>
+
+    <bean-import resource="spnego-authn-beans.xml" />
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/x509-authn-beans.xml shibboleth-idp/system/flows/authn/x509-authn-beans.xml
--- shibboleth-idp/system/flows/authn/x509-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/x509-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,39 +1,39 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-       
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Default strategy function to obtain the external path. -->
-    <bean id="shibboleth.authn.X509.externalAuthnPathStrategy"
-        class="com.google.common.base.Functions" factory-method="constant"
-        c:_0-ref="shibboleth.authn.X509.externalAuthnPath" />
-
-    <import resource="../../../conf/authn/x509-authn-config.xml" />
-
-    <bean id="ValidateExternalAuthentication"
-        class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
-        p:metricName="net.shibboleth.idp.authn.x509"
-        p:addDefaultPrincipals="#{getObject('shibboleth.authn.X509.addDefaultPrincipals') ?: true}"
-        p:classifiedMessages-ref="shibboleth.authn.X509.ClassifiedMessageMap"
-        p:resultCachingPredicate="#{getObject('shibboleth.authn.X509.resultCachingPredicate')}" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+       
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Default strategy function to obtain the external path. -->
+    <bean id="shibboleth.authn.X509.externalAuthnPathStrategy"
+        class="com.google.common.base.Functions" factory-method="constant"
+        c:_0-ref="shibboleth.authn.X509.externalAuthnPath" />
+
+    <import resource="../../../conf/authn/x509-authn-config.xml" />
+
+    <bean id="ValidateExternalAuthentication"
+        class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
+        p:metricName="net.shibboleth.idp.authn.x509"
+        p:addDefaultPrincipals="#{getObject('shibboleth.authn.X509.addDefaultPrincipals') ?: true}"
+        p:classifiedMessages-ref="shibboleth.authn.X509.ClassifiedMessageMap"
+        p:resultCachingPredicate="#{getObject('shibboleth.authn.X509.resultCachingPredicate')}" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/x509-authn-flow.xml shibboleth-idp/system/flows/authn/x509-authn-flow.xml
--- shibboleth-idp/system/flows/authn/x509-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/x509-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,38 +1,38 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!--
-    This is a login flow for authentication via X.509 certificate via TLS
-    implemented via external authentication.
-    -->
-    
-    <view-state id="ExternalTransfer" view="externalRedirect:#{T(net.shibboleth.idp.authn.ExternalAuthentication).getExternalRedirect(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.X509.externalAuthnPathStrategy').apply(opensamlProfileRequestContext), flowExecutionContext.getKey().toString())}">
-        <on-render>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
-            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext))" />
-        </on-render>
-        <transition to="ValidateExternalAuthentication" />
-    </view-state>
-    
-    <action-state id="ValidateExternalAuthentication">
-        <evaluate expression="ValidateExternalAuthentication" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <bean-import resource="x509-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!--
+    This is a login flow for authentication via X.509 certificate via TLS
+    implemented via external authentication.
+    -->
+    
+    <view-state id="ExternalTransfer" view="externalRedirect:#{T(net.shibboleth.idp.authn.ExternalAuthentication).getExternalRedirect(flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.X509.externalAuthnPathStrategy').apply(opensamlProfileRequestContext), flowExecutionContext.getKey().toString())}">
+        <on-render>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).addSubcontext(new net.shibboleth.idp.authn.context.ExternalAuthenticationContext(), true).setFlowExecutionUrl(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
+            <evaluate expression="externalContext.getNativeRequest().getSession().setAttribute('conversation' + flowExecutionContext.getKey().toString(), new net.shibboleth.idp.authn.impl.ExternalAuthenticationImpl(opensamlProfileRequestContext))" />
+        </on-render>
+        <transition to="ValidateExternalAuthentication" />
+    </view-state>
+    
+    <action-state id="ValidateExternalAuthentication">
+        <evaluate expression="ValidateExternalAuthentication" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <bean-import resource="x509-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/authn/x509-internal-authn-beans.xml shibboleth-idp/system/flows/authn/x509-internal-authn-beans.xml
--- shibboleth-idp/system/flows/authn/x509-internal-authn-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/x509-internal-authn-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,37 +1,37 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-    
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <import resource="../../../conf/authn/x509-internal-authn-config.xml" />
-    
-    <bean id="ExtractX509CertificateFromRequest"
-        class="net.shibboleth.idp.authn.impl.ExtractX509CertificateFromRequest" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-        
-    <bean id="ValidateX509Certificate"
-        class="net.shibboleth.idp.authn.impl.ValidateX509Certificate" scope="prototype"
-        p:trustEngine="#{getObject('shibboleth.authn.X509.TrustEngine')}"
-        p:addDefaultPrincipals="#{getObject('shibboleth.authn.X509.addDefaultPrincipals') ?: true}"
-        p:resultCachingPredicate="#{getObject('shibboleth.authn.X509.resultCachingPredicate')}" />
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+    
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <import resource="../../../conf/authn/x509-internal-authn-config.xml" />
+    
+    <bean id="ExtractX509CertificateFromRequest"
+        class="net.shibboleth.idp.authn.impl.ExtractX509CertificateFromRequest" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+        
+    <bean id="ValidateX509Certificate"
+        class="net.shibboleth.idp.authn.impl.ValidateX509Certificate" scope="prototype"
+        p:trustEngine="#{getObject('shibboleth.authn.X509.TrustEngine')}"
+        p:addDefaultPrincipals="#{getObject('shibboleth.authn.X509.addDefaultPrincipals') ?: true}"
+        p:resultCachingPredicate="#{getObject('shibboleth.authn.X509.resultCachingPredicate')}" />
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.PostLoginSubjectCanonicalizationFlows" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/authn/x509-internal-authn-flow.xml shibboleth-idp/system/flows/authn/x509-internal-authn-flow.xml
--- shibboleth-idp/system/flows/authn/x509-internal-authn-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/authn/x509-internal-authn-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,34 +1,34 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="authn.abstract">
-
-    <!-- This is a login flow for authentication via X.509 certificate via TLS. -->
-    
-    <action-state id="X509">
-        <evaluate expression="ExtractX509CertificateFromRequest" />
-        <evaluate expression="ValidateX509Certificate" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <!-- This runs a c14n step on the result of the authentication. -->
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        
-        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
-        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
-    </subflow-state>
-
-    <!-- As a "fall-through" method, remap selected events to select a different flow. -->
-    <global-transitions>
-        <transition on="NoCredentials" to="ReselectFlow" />
-        <transition on="InvalidCredentials" to="ReselectFlow" />
-    </global-transitions>
-
-    <bean-import resource="x509-internal-authn-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="authn.abstract">
+
+    <!-- This is a login flow for authentication via X.509 certificate via TLS. -->
+    
+    <action-state id="X509">
+        <evaluate expression="ExtractX509CertificateFromRequest" />
+        <evaluate expression="ValidateX509Certificate" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <!-- This runs a c14n step on the result of the authentication. -->
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        
+        <!-- This shouldn't generally happen, but if c14n fails, it's allowable to fall through. -->
+        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
+    </subflow-state>
+
+    <!-- As a "fall-through" method, remap selected events to select a different flow. -->
+    <global-transitions>
+        <transition on="NoCredentials" to="ReselectFlow" />
+        <transition on="InvalidCredentials" to="ReselectFlow" />
+    </global-transitions>
+
+    <bean-import resource="x509-internal-authn-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/c14n/attribute-sourced-subject-c14n-beans.xml shibboleth-idp/system/flows/c14n/attribute-sourced-subject-c14n-beans.xml
--- shibboleth-idp/system/flows/c14n/attribute-sourced-subject-c14n-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/attribute-sourced-subject-c14n-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,43 +1,43 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <import resource="../../../conf/c14n/attribute-sourced-subject-c14n-config.xml" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-    
-    <bean id="ResolveAttributes" class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
-            c:resolverService-ref="shibboleth.AttributeResolverService"
-            p:attributesToResolve-ref="shibboleth.c14n.attribute.AttributesToResolve"
-            p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}"
-            p:principalNameLookupStrategy="#{getObject('shibboleth.c14n.attribute.PrincipalNameLookupStrategy')}">
-        <property name="attributeContextCreationStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookupOrCreate.AttributeContext"
-                c:f-ref="shibboleth.ChildLookup.SubjectCanonicalizationContext" />
-        </property>
-    </bean>
-    
-    <bean id="AttributeSourcedSubjectCanonicalization"
-        class="net.shibboleth.idp.authn.impl.AttributeSourcedSubjectCanonicalization" scope="prototype"
-        p:attributeSourceIds-ref="shibboleth.c14n.attribute.AttributeSourceIds"
-        p:lowercase-ref="shibboleth.c14n.attribute.Lowercase"
-        p:uppercase-ref="shibboleth.c14n.attribute.Uppercase"
-        p:trim-ref="shibboleth.c14n.attribute.Trim"
-        p:transforms-ref="shibboleth.c14n.attribute.Transforms" />
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <import resource="../../../conf/c14n/attribute-sourced-subject-c14n-config.xml" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+    
+    <bean id="ResolveAttributes" class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
+            c:resolverService-ref="shibboleth.AttributeResolverService"
+            p:attributesToResolve-ref="shibboleth.c14n.attribute.AttributesToResolve"
+            p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}"
+            p:principalNameLookupStrategy="#{getObject('shibboleth.c14n.attribute.PrincipalNameLookupStrategy')}">
+        <property name="attributeContextCreationStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookupOrCreate.AttributeContext"
+                c:f-ref="shibboleth.ChildLookup.SubjectCanonicalizationContext" />
+        </property>
+    </bean>
+    
+    <bean id="AttributeSourcedSubjectCanonicalization"
+        class="net.shibboleth.idp.authn.impl.AttributeSourcedSubjectCanonicalization" scope="prototype"
+        p:attributeSourceIds-ref="shibboleth.c14n.attribute.AttributeSourceIds"
+        p:lowercase-ref="shibboleth.c14n.attribute.Lowercase"
+        p:uppercase-ref="shibboleth.c14n.attribute.Uppercase"
+        p:trim-ref="shibboleth.c14n.attribute.Trim"
+        p:transforms-ref="shibboleth.c14n.attribute.Transforms" />
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/c14n/attribute-sourced-subject-c14n-flow.xml shibboleth-idp/system/flows/c14n/attribute-sourced-subject-c14n-flow.xml
--- shibboleth-idp/system/flows/c14n/attribute-sourced-subject-c14n-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/attribute-sourced-subject-c14n-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,18 +1,18 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="c14n.abstract">
-
-    <!-- This is a subflow that does Subject Canonicalization using the Attribute Resolver service. -->
-    
-    <action-state id="AttributeSourcedSubjectCanonicalization">
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="AttributeSourcedSubjectCanonicalization" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <bean-import resource="attribute-sourced-subject-c14n-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="c14n.abstract">
+
+    <!-- This is a subflow that does Subject Canonicalization using the Attribute Resolver service. -->
+    
+    <action-state id="AttributeSourcedSubjectCanonicalization">
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="AttributeSourcedSubjectCanonicalization" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <bean-import resource="attribute-sourced-subject-c14n-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/c14n/simple-subject-c14n-beans.xml shibboleth-idp/system/flows/c14n/simple-subject-c14n-beans.xml
--- shibboleth-idp/system/flows/c14n/simple-subject-c14n-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/simple-subject-c14n-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,27 +1,27 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <import resource="../../../conf/c14n/simple-subject-c14n-config.xml" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-    
-    <bean id="SimpleSubjectCanonicalization"
-        class="net.shibboleth.idp.authn.impl.SimpleSubjectCanonicalization" scope="prototype"
-        p:lowercase-ref="shibboleth.c14n.simple.Lowercase"
-        p:uppercase-ref="shibboleth.c14n.simple.Uppercase"
-        p:trim-ref="shibboleth.c14n.simple.Trim"
-        p:transforms-ref="shibboleth.c14n.simple.Transforms" />
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <import resource="../../../conf/c14n/simple-subject-c14n-config.xml" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+    
+    <bean id="SimpleSubjectCanonicalization"
+        class="net.shibboleth.idp.authn.impl.SimpleSubjectCanonicalization" scope="prototype"
+        p:lowercase-ref="shibboleth.c14n.simple.Lowercase"
+        p:uppercase-ref="shibboleth.c14n.simple.Uppercase"
+        p:trim-ref="shibboleth.c14n.simple.Trim"
+        p:transforms-ref="shibboleth.c14n.simple.Transforms" />
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/c14n/simple-subject-c14n-flow.xml shibboleth-idp/system/flows/c14n/simple-subject-c14n-flow.xml
--- shibboleth-idp/system/flows/c14n/simple-subject-c14n-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/simple-subject-c14n-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,17 +1,17 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="c14n.abstract">
-
-    <!-- This is a one-step subflow that does Subject Canonicalization using the simplest built-in action. -->
-    
-    <action-state id="SimpleSubjectCanonicalization">
-        <evaluate expression="SimpleSubjectCanonicalization" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <bean-import resource="simple-subject-c14n-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="c14n.abstract">
+
+    <!-- This is a one-step subflow that does Subject Canonicalization using the simplest built-in action. -->
+    
+    <action-state id="SimpleSubjectCanonicalization">
+        <evaluate expression="SimpleSubjectCanonicalization" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <bean-import resource="simple-subject-c14n-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/c14n/subject-c14n-abstract-flow.xml shibboleth-idp/system/flows/c14n/subject-c14n-abstract-flow.xml
--- shibboleth-idp/system/flows/c14n/subject-c14n-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/subject-c14n-abstract-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,43 +1,43 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      abstract="true" parent="c14n.events">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-
-    <!-- Defines the possible end-state events, and a global transition rule. -->
-
-    <!-- Successful completion of subflow. -->
-    <end-state id="proceed" />
-
-    <!-- Error events to reflect back from this subflow. -->
-    <end-state id="InvalidProfileContext" />
-    <end-state id="InvalidSubject" />
-    <end-state id="InvalidSubjectContext" />
-    <end-state id="InvalidSubjectCanonicalizationContext" />
-    <end-state id="NoPotentialFlow" />
-    <end-state id="ReselectFlow" />
-    <end-state id="RuntimeException" />
-    <end-state id="SubjectCanonicalizationError" />
-
-    <action-state id="LogRuntimeException">
-        <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.authn').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        <transition to="RuntimeException" />
-    </action-state>
-
-    <!-- Default is to turn known error events into end-state, except InvalidSubject, which triggers a Reselect. -->
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="InvalidSubject" to="ReselectFlow" />
-        
-        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
-        <transition on="InvalidSubjectContext" to="InvalidSubjectContext" />
-        <transition on="InvalidSubjectCanonicalizationContext" to="InvalidSubjectCanonicalizationContext" />
-        <transition on="NoPotentialFlow" to="NoPotentialFlow" />
-        <transition on="ReselectFlow" to="ReselectFlow" />
-        <transition on="RuntimeException" to="RuntimeException" />
-        <transition on="SubjectCanonicalizationError" to="SubjectCanonicalizationError" />
-    </global-transitions>
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      abstract="true" parent="c14n.events">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+
+    <!-- Defines the possible end-state events, and a global transition rule. -->
+
+    <!-- Successful completion of subflow. -->
+    <end-state id="proceed" />
+
+    <!-- Error events to reflect back from this subflow. -->
+    <end-state id="InvalidProfileContext" />
+    <end-state id="InvalidSubject" />
+    <end-state id="InvalidSubjectContext" />
+    <end-state id="InvalidSubjectCanonicalizationContext" />
+    <end-state id="NoPotentialFlow" />
+    <end-state id="ReselectFlow" />
+    <end-state id="RuntimeException" />
+    <end-state id="SubjectCanonicalizationError" />
+
+    <action-state id="LogRuntimeException">
+        <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.authn').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        <transition to="RuntimeException" />
+    </action-state>
+
+    <!-- Default is to turn known error events into end-state, except InvalidSubject, which triggers a Reselect. -->
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="InvalidSubject" to="ReselectFlow" />
+        
+        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
+        <transition on="InvalidSubjectContext" to="InvalidSubjectContext" />
+        <transition on="InvalidSubjectCanonicalizationContext" to="InvalidSubjectCanonicalizationContext" />
+        <transition on="NoPotentialFlow" to="NoPotentialFlow" />
+        <transition on="ReselectFlow" to="ReselectFlow" />
+        <transition on="RuntimeException" to="RuntimeException" />
+        <transition on="SubjectCanonicalizationError" to="SubjectCanonicalizationError" />
+    </global-transitions>
+
+</flow>
diff -rupN shibboleth-idp/system/flows/c14n/subject-c14n-beans.xml shibboleth-idp/system/flows/c14n/subject-c14n-beans.xml
--- shibboleth-idp/system/flows/c14n/subject-c14n-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/subject-c14n-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,21 +1,21 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-    
-    <bean id="SelectSubjectCanonicalizationFlow"
-        class="net.shibboleth.idp.authn.impl.SelectSubjectCanonicalizationFlow" scope="prototype" />
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+    
+    <bean id="SelectSubjectCanonicalizationFlow"
+        class="net.shibboleth.idp.authn.impl.SelectSubjectCanonicalizationFlow" scope="prototype" />
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/c14n/subject-c14n-flow.xml shibboleth-idp/system/flows/c14n/subject-c14n-flow.xml
--- shibboleth-idp/system/flows/c14n/subject-c14n-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/subject-c14n-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,37 +1,37 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="c14n.abstract">
-
-    <!--
-    This is the master SubjectCanonicalization subflow. It handles selection of
-    c14n subflows before returning control to the calling flow.
-    -->
-        
-    <!--
-    The Select action is the "dispatching" step. Anything starting with "c14n/"
-    is a flow descriptor that we send control to.
-    -->
-    <action-state id="SelectSubjectCanonicalizationFlow">
-        <evaluate expression="SelectSubjectCanonicalizationFlow" />
-
-        <!-- Call a subflow with the same ID as the event. -->
-        <transition on="#{currentEvent.id.startsWith('c14n/')}" to="CallSubjectCanonicalizationFlow" />
-        
-        <!-- Remap the case of no flows to run into a more recognizeable fatal error. -->
-        <transition on="NoPotentialFlow" to="SubjectCanonicalizationError" />
-    </action-state>
-
-    <!--
-    This invokes a c14n flow. Anything but proceed is an error, otherwise control passes to the caller,
-    except for a ReselectFlow signal to loop back up and try another.
-    -->
-    <subflow-state id="CallSubjectCanonicalizationFlow" subflow="#{currentEvent.id}">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="proceed" />
-        <transition on="ReselectFlow" to="SelectSubjectCanonicalizationFlow" />
-    </subflow-state>
-
-    <bean-import resource="subject-c14n-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="c14n.abstract">
+
+    <!--
+    This is the master SubjectCanonicalization subflow. It handles selection of
+    c14n subflows before returning control to the calling flow.
+    -->
+        
+    <!--
+    The Select action is the "dispatching" step. Anything starting with "c14n/"
+    is a flow descriptor that we send control to.
+    -->
+    <action-state id="SelectSubjectCanonicalizationFlow">
+        <evaluate expression="SelectSubjectCanonicalizationFlow" />
+
+        <!-- Call a subflow with the same ID as the event. -->
+        <transition on="#{currentEvent.id.startsWith('c14n/')}" to="CallSubjectCanonicalizationFlow" />
+        
+        <!-- Remap the case of no flows to run into a more recognizeable fatal error. -->
+        <transition on="NoPotentialFlow" to="SubjectCanonicalizationError" />
+    </action-state>
+
+    <!--
+    This invokes a c14n flow. Anything but proceed is an error, otherwise control passes to the caller,
+    except for a ReselectFlow signal to loop back up and try another.
+    -->
+    <subflow-state id="CallSubjectCanonicalizationFlow" subflow="#{currentEvent.id}">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="proceed" />
+        <transition on="ReselectFlow" to="SelectSubjectCanonicalizationFlow" />
+    </subflow-state>
+
+    <bean-import resource="subject-c14n-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/c14n/subject-c14n-saml-default-beans.xml shibboleth-idp/system/flows/c14n/subject-c14n-saml-default-beans.xml
--- shibboleth-idp/system/flows/c14n/subject-c14n-saml-default-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/subject-c14n-saml-default-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,79 +1,79 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-	xmlns:context="http://www.springframework.org/schema/context"
-	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
-	xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-	default-init-method="initialize" default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-	<bean id="Shibboleth.C14N.LegacyPrincipalConnector"
-		class="net.shibboleth.idp.saml.nameid.impl.LegacyCanonicalization"
-		scope="prototype" c:resolverService-ref="shibboleth.AttributeResolverService"/>
-
-    <bean id="Shibboleth.C14N.SAML2Transient"
-            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
-        <property name="decoder">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.TransientNameIDDecoder"
-                p:idStore-ref="shibboleth.StorageService" />
-        </property>
-    </bean>
-
-    <bean id="Shibboleth.C14N.SAML2CryptoTransient"
-            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
-        <property name="decoder">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientNameIDDecoder"
-                p:dataSealer-ref="shibboleth.DataSealer" />
-        </property>
-    </bean>
-
-    <bean id="Shibboleth.C14N.SAML2Persistent"
-            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
-        <property name="decoder">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.StoredPersistentIdDecoder"
-                p:persistentIdStore="#{getObject('%{idp.persistentId.store:undefined}'.trim())}"
-                p:dataSource="#{getObject('%{idp.persistentId.dataSource:undefined}'.trim())}" />
-        </property>
-    </bean>
-
-    <bean id="Shibboleth.C14N.SAML2Transform"
-            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
-        <property name="decoder">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.TransformingNameIDDecoder"
-                p:transforms-ref="shibboleth.NameTransforms" />
-        </property>
-    </bean>
-
-    <bean id="Shibboleth.C14N.SAML1Transient"
-            class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype">
-        <property name="decoder">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.TransientNameIdentifierDecoder"
-                p:idStore-ref="shibboleth.StorageService" />
-        </property>
-    </bean>
-
-    <bean id="Shibboleth.C14N.SAML1CryptoTransient"
-            class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype">
-        <property name="decoder">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientNameIdentifierDecoder"
-                p:dataSealer-ref="shibboleth.DataSealer" />
-        </property>
-    </bean>
-
-    <bean id="Shibboleth.C14N.SAML1Transform"
-            class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype">
-        <property name="decoder">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.TransformingNameIdentifierDecoder"
-                p:transforms-ref="shibboleth.NameTransforms" />
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+	xmlns:context="http://www.springframework.org/schema/context"
+	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
+	xmlns:c="http://www.springframework.org/schema/c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+	default-init-method="initialize" default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+	<bean id="Shibboleth.C14N.LegacyPrincipalConnector"
+		class="net.shibboleth.idp.saml.nameid.impl.LegacyCanonicalization"
+		scope="prototype" c:resolverService-ref="shibboleth.AttributeResolverService"/>
+
+    <bean id="Shibboleth.C14N.SAML2Transient"
+            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
+        <property name="decoder">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.TransientNameIDDecoder"
+                p:idStore-ref="shibboleth.StorageService" />
+        </property>
+    </bean>
+
+    <bean id="Shibboleth.C14N.SAML2CryptoTransient"
+            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
+        <property name="decoder">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientNameIDDecoder"
+                p:dataSealer-ref="shibboleth.DataSealer" />
+        </property>
+    </bean>
+
+    <bean id="Shibboleth.C14N.SAML2Persistent"
+            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
+        <property name="decoder">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.StoredPersistentIdDecoder"
+                p:persistentIdStore="#{getObject('%{idp.persistentId.store:undefined}'.trim())}"
+                p:dataSource="#{getObject('%{idp.persistentId.dataSource:undefined}'.trim())}" />
+        </property>
+    </bean>
+
+    <bean id="Shibboleth.C14N.SAML2Transform"
+            class="net.shibboleth.idp.saml.nameid.impl.NameIDCanonicalization" scope="prototype">
+        <property name="decoder">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.TransformingNameIDDecoder"
+                p:transforms-ref="shibboleth.NameTransforms" />
+        </property>
+    </bean>
+
+    <bean id="Shibboleth.C14N.SAML1Transient"
+            class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype">
+        <property name="decoder">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.TransientNameIdentifierDecoder"
+                p:idStore-ref="shibboleth.StorageService" />
+        </property>
+    </bean>
+
+    <bean id="Shibboleth.C14N.SAML1CryptoTransient"
+            class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype">
+        <property name="decoder">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientNameIdentifierDecoder"
+                p:dataSealer-ref="shibboleth.DataSealer" />
+        </property>
+    </bean>
+
+    <bean id="Shibboleth.C14N.SAML1Transform"
+            class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierCanonicalization" scope="prototype">
+        <property name="decoder">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.TransformingNameIdentifierDecoder"
+                p:transforms-ref="shibboleth.NameTransforms" />
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/c14n/subject-c14n-saml-default-flow.xml shibboleth-idp/system/flows/c14n/subject-c14n-saml-default-flow.xml
--- shibboleth-idp/system/flows/c14n/subject-c14n-saml-default-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/subject-c14n-saml-default-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,23 +1,23 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="c14n.abstract">
-
-    <!--
-    This is a one-step subflow that uses the subflow ID to derive a bean name to invoke, the bean being
-    an action that performs SAML subject canonicalization of some type. This is used to run the built-in
-    canonicalization capabilities pre-defined in the software.
-    -->
-    
-    <action-state id="DoCanonicalization">
-        <on-entry>
-            <set name="requestScope.beanId" value="'Shibboleth.C14N.' + flowRequestContext.getActiveFlow().getId().split('/')[1]" />
-        </on-entry>
-        <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().getBean(beanId).execute(flowRequestContext)" />
-
-        <transition on="success" to="proceed" />
-    </action-state>
-
-    <bean-import resource="subject-c14n-saml-default-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="c14n.abstract">
+
+    <!--
+    This is a one-step subflow that uses the subflow ID to derive a bean name to invoke, the bean being
+    an action that performs SAML subject canonicalization of some type. This is used to run the built-in
+    canonicalization capabilities pre-defined in the software.
+    -->
+    
+    <action-state id="DoCanonicalization">
+        <on-entry>
+            <set name="requestScope.beanId" value="'Shibboleth.C14N.' + flowRequestContext.getActiveFlow().getId().split('/')[1]" />
+        </on-entry>
+        <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().getBean(beanId).execute(flowRequestContext)" />
+
+        <transition on="success" to="proceed" />
+    </action-state>
+
+    <bean-import resource="subject-c14n-saml-default-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/c14n/x500-subject-c14n-beans.xml shibboleth-idp/system/flows/c14n/x500-subject-c14n-beans.xml
--- shibboleth-idp/system/flows/c14n/x500-subject-c14n-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/x500-subject-c14n-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,29 +1,29 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <import resource="../../../conf/c14n/x500-subject-c14n-config.xml" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-    
-    <bean id="X500SubjectCanonicalization"
-        class="net.shibboleth.idp.authn.impl.X500SubjectCanonicalization" scope="prototype"
-        p:subjectAltNameTypes-ref="shibboleth.c14n.x500.SubjectAltNameTypes"
-        p:objectIds-ref="shibboleth.c14n.x500.ObjectIDs"
-        p:lowercase-ref="shibboleth.c14n.x500.Lowercase"
-        p:uppercase-ref="shibboleth.c14n.x500.Uppercase"
-        p:trim-ref="shibboleth.c14n.x500.Trim"
-        p:transforms-ref="shibboleth.c14n.x500.Transforms" />
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <import resource="../../../conf/c14n/x500-subject-c14n-config.xml" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+    
+    <bean id="X500SubjectCanonicalization"
+        class="net.shibboleth.idp.authn.impl.X500SubjectCanonicalization" scope="prototype"
+        p:subjectAltNameTypes-ref="shibboleth.c14n.x500.SubjectAltNameTypes"
+        p:objectIds-ref="shibboleth.c14n.x500.ObjectIDs"
+        p:lowercase-ref="shibboleth.c14n.x500.Lowercase"
+        p:uppercase-ref="shibboleth.c14n.x500.Uppercase"
+        p:trim-ref="shibboleth.c14n.x500.Trim"
+        p:transforms-ref="shibboleth.c14n.x500.Transforms" />
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/c14n/x500-subject-c14n-flow.xml shibboleth-idp/system/flows/c14n/x500-subject-c14n-flow.xml
--- shibboleth-idp/system/flows/c14n/x500-subject-c14n-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/c14n/x500-subject-c14n-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,17 +1,17 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="c14n.abstract">
-
-    <!-- This is a one-step subflow that does Subject Canonicalization against an X500Principal. -->
-    
-    <action-state id="X500SubjectCanonicalization">
-        <evaluate expression="X500SubjectCanonicalization" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <bean-import resource="x500-subject-c14n-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="c14n.abstract">
+
+    <!-- This is a one-step subflow that does Subject Canonicalization against an X500Principal. -->
+    
+    <action-state id="X500SubjectCanonicalization">
+        <evaluate expression="X500SubjectCanonicalization" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <bean-import resource="x500-subject-c14n-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/cas/cas-abstract-beans.xml shibboleth-idp/system/flows/cas/cas-abstract-beans.xml
--- shibboleth-idp/system/flows/cas/cas-abstract-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/cas-abstract-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,115 +1,115 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xsi:schemaLocation="
-           http://www.springframework.org/schema/beans
-           http://www.springframework.org/schema/beans/spring-beans.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-          p:placeholderPrefix="%{"
-          p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
-    <import resource="../../conf/audit-system.xml" />
-
-    <!-- These are beans that are common to all CAS protocol flows. -->
-
-    <bean id="PopulateMetricContext"
-        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
-        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
-        
-    <bean id="BuildRelyingPartyContext"
-          class="net.shibboleth.idp.cas.flow.impl.BuildRelyingPartyContextAction"
-          c:registry-ref="shibboleth.CASServiceRegistry"/>
-
-    <bean id="BuildSAMLMetadataContext"
-          class="net.shibboleth.idp.cas.flow.impl.BuildSAMLMetadataContextAction" />
-
-    <bean id="PopulateInboundInterceptContext"
-          class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext"
-          scope="prototype"
-          p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
-        <property name="activeFlowsLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.InboundFlowsLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="PopulateOutboundInterceptContext"
-          class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext"
-          scope="prototype"
-          p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
-        <property name="activeFlowsLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.OutboundFlowsLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="PublishProtocolRequest"
-          class="net.shibboleth.idp.cas.flow.impl.PublishProtocolMessageAction"
-          c:isRequest="true" />
-
-    <bean id="PublishProtocolResponse"
-          class="net.shibboleth.idp.cas.flow.impl.PublishProtocolMessageAction"
-          c:isRequest="false" />
-
-    <bean id="SelectProfileConfiguration"
-          class="net.shibboleth.idp.profile.impl.SelectProfileConfiguration"
-          scope="prototype" />
-
-    <bean id="SelectRelyingPartyConfiguration"
-          class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration"
-          scope="prototype"
-          p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-
-    <bean id="PopulateSubjectContext"
-          class="net.shibboleth.idp.profile.impl.PopulateSubjectContext"
-          scope="prototype"
-          p:principalNameLookupStrategy-ref="PrincipalLookupFunction" />
-
-    <bean id="ResolveAttributes"
-          class="net.shibboleth.idp.profile.impl.ResolveAttributes"
-          scope="prototype"
-          c:resolverService-ref="shibboleth.AttributeResolverService" />
-
-    <bean id="FilterAttributes"
-          class="net.shibboleth.idp.profile.impl.FilterAttributes"
-          scope="prototype"
-          c:filterService-ref="shibboleth.AttributeFilterService"
-          p:maskFailures="%{idp.service.attribute.filter.maskFailures:true}">
-        <property name="metadataContextLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.context.navigate.SAMLMetadataContextLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
-            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
-        <property name="eventContextLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="MapEventToView"
-          class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
-          p:defaultView-ref="shibboleth.DefaultErrorView"
-          p:eventMap="#{getObject('shibboleth.EventViewMap')}" />
-
-    <bean id="WriteAuditLog"
-          class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog"
-          scope="prototype"
-          p:formattingMap-ref="shibboleth.AuditFormattingMap"
-          p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
-          p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
-          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <bean id="ErrorViewPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-          p:fieldExtractors="#{getObject('shibboleth.ErrorViewAuditExtractors') ?: getObject('shibboleth.DefaultErrorViewAuditExtractors')}" />
-
-    <bean id="PopulateProtocolError"
-          class="net.shibboleth.idp.cas.flow.impl.PopulateProtocolErrorAction" />
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="
+           http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+          p:placeholderPrefix="%{"
+          p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
+    <import resource="../../conf/audit-system.xml" />
+
+    <!-- These are beans that are common to all CAS protocol flows. -->
+
+    <bean id="PopulateMetricContext"
+        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
+        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
+        
+    <bean id="BuildRelyingPartyContext"
+          class="net.shibboleth.idp.cas.flow.impl.BuildRelyingPartyContextAction"
+          c:registry-ref="shibboleth.CASServiceRegistry"/>
+
+    <bean id="BuildSAMLMetadataContext"
+          class="net.shibboleth.idp.cas.flow.impl.BuildSAMLMetadataContextAction" />
+
+    <bean id="PopulateInboundInterceptContext"
+          class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext"
+          scope="prototype"
+          p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
+        <property name="activeFlowsLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.InboundFlowsLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="PopulateOutboundInterceptContext"
+          class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext"
+          scope="prototype"
+          p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
+        <property name="activeFlowsLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.OutboundFlowsLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="PublishProtocolRequest"
+          class="net.shibboleth.idp.cas.flow.impl.PublishProtocolMessageAction"
+          c:isRequest="true" />
+
+    <bean id="PublishProtocolResponse"
+          class="net.shibboleth.idp.cas.flow.impl.PublishProtocolMessageAction"
+          c:isRequest="false" />
+
+    <bean id="SelectProfileConfiguration"
+          class="net.shibboleth.idp.profile.impl.SelectProfileConfiguration"
+          scope="prototype" />
+
+    <bean id="SelectRelyingPartyConfiguration"
+          class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration"
+          scope="prototype"
+          p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+
+    <bean id="PopulateSubjectContext"
+          class="net.shibboleth.idp.profile.impl.PopulateSubjectContext"
+          scope="prototype"
+          p:principalNameLookupStrategy-ref="PrincipalLookupFunction" />
+
+    <bean id="ResolveAttributes"
+          class="net.shibboleth.idp.profile.impl.ResolveAttributes"
+          scope="prototype"
+          c:resolverService-ref="shibboleth.AttributeResolverService" />
+
+    <bean id="FilterAttributes"
+          class="net.shibboleth.idp.profile.impl.FilterAttributes"
+          scope="prototype"
+          c:filterService-ref="shibboleth.AttributeFilterService"
+          p:maskFailures="%{idp.service.attribute.filter.maskFailures:true}">
+        <property name="metadataContextLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.context.navigate.SAMLMetadataContextLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
+            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
+        <property name="eventContextLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="MapEventToView"
+          class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
+          p:defaultView-ref="shibboleth.DefaultErrorView"
+          p:eventMap="#{getObject('shibboleth.EventViewMap')}" />
+
+    <bean id="WriteAuditLog"
+          class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog"
+          scope="prototype"
+          p:formattingMap-ref="shibboleth.AuditFormattingMap"
+          p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
+          p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
+          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <bean id="ErrorViewPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+          p:fieldExtractors="#{getObject('shibboleth.ErrorViewAuditExtractors') ?: getObject('shibboleth.DefaultErrorViewAuditExtractors')}" />
+
+    <bean id="PopulateProtocolError"
+          class="net.shibboleth.idp.cas.flow.impl.PopulateProtocolErrorAction" />
+</beans>
diff -rupN shibboleth-idp/system/flows/cas/cas-abstract-flow.xml shibboleth-idp/system/flows/cas/cas-abstract-flow.xml
--- shibboleth-idp/system/flows/cas/cas-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/cas-abstract-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,63 +1,63 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="
-          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
-      abstract="true">
-
-    <!-- Base flow for all CAS protocol interactions -->
-
-    <action-state id="LogRuntimeException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.cas').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        </on-entry>
-        <evaluate expression="'RuntimeException'" />
-        <transition to="HandleError" />
-    </action-state>
-
-    <decision-state id="HandleError">
-        <on-entry>
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <if test="opensamlProfileRequestContext.isBrowserProfile()"
-            then="AuditedErrorView"
-            else="ProtocolErrorView" />
-    </decision-state>
-
-    <!-- View end state that produces an IdP error page displayed to the user -->
-    <end-state id="AuditedErrorView" view="#{MapEventToView.apply(currentEvent)}">
-        <on-entry>
-            <evaluate expression="ErrorViewPopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <!-- View end state that produces a CAS protocol error message sent to requesting service/relying party -->
-    <end-state id="ProtocolErrorView" view="cas/#{flowScope.casProtocolErrorView}">
-        <on-entry>
-            <evaluate expression="PopulateProtocolError" />
-            <evaluate expression="PopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="PublishProtocolResponse" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <!--
-    Default is to turn non-proceed events into an error
-    -->
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleError" />
-    </global-transitions>
-
-    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
-    <bean-import resource="../cas-abstract-beans.xml" />
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="
+          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
+      abstract="true">
+
+    <!-- Base flow for all CAS protocol interactions -->
+
+    <action-state id="LogRuntimeException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.cas').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        </on-entry>
+        <evaluate expression="'RuntimeException'" />
+        <transition to="HandleError" />
+    </action-state>
+
+    <decision-state id="HandleError">
+        <on-entry>
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <if test="opensamlProfileRequestContext.isBrowserProfile()"
+            then="AuditedErrorView"
+            else="ProtocolErrorView" />
+    </decision-state>
+
+    <!-- View end state that produces an IdP error page displayed to the user -->
+    <end-state id="AuditedErrorView" view="#{MapEventToView.apply(currentEvent)}">
+        <on-entry>
+            <evaluate expression="ErrorViewPopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <!-- View end state that produces a CAS protocol error message sent to requesting service/relying party -->
+    <end-state id="ProtocolErrorView" view="cas/#{flowScope.casProtocolErrorView}">
+        <on-entry>
+            <evaluate expression="PopulateProtocolError" />
+            <evaluate expression="PopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="PublishProtocolResponse" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <!--
+    Default is to turn non-proceed events into an error
+    -->
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleError" />
+    </global-transitions>
+
+    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
+    <bean-import resource="../cas-abstract-beans.xml" />
 </flow>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/login/login-beans.xml shibboleth-idp/system/flows/cas/login/login-beans.xml
--- shibboleth-idp/system/flows/cas/login/login-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/login/login-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,86 +1,86 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xsi:schemaLocation="
-           http://www.springframework.org/schema/beans
-           http://www.springframework.org/schema/beans/spring-beans.xsd"
-       default-init-method="initialize">
-
-    <!-- Action beans -->
-    <bean id="InitializeProfileRequestContext"
-          class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
-          p:profileId="#{T(net.shibboleth.idp.cas.config.impl.LoginConfiguration).PROFILE_ID}"
-          p:loggingId="%{idp.service.logging.cas:SSO}"
-          p:browserProfile="true" />
-
-    <bean id="PopulateUserAgentContext"
-          class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
-          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <bean id="PopulateClientStorageLoadContext"
-          class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext"
-          scope="prototype"
-          p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-    <bean id="PopulateClientStorageSaveContext"
-          class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext"
-          scope="prototype"
-          p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-    <bean id="InitializeLogin"
-          class="net.shibboleth.idp.cas.flow.impl.InitializeLoginAction" />
-
-    <bean id="BuildAuthenticationContext"
-          class="net.shibboleth.idp.cas.flow.impl.BuildAuthenticationContextAction" />
-
-    <bean id="GrantServiceTicket"
-          class="net.shibboleth.idp.cas.flow.impl.GrantServiceTicketAction"
-          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
-
-    <bean id="PopulateSessionContext"
-          class="net.shibboleth.idp.session.impl.PopulateSessionContext"
-          scope="prototype"
-          p:activationCondition="%{idp.session.enabled:true}"
-          p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-          p:sessionResolver-ref="shibboleth.SessionManager" />
-
-    <bean id="LoginConfigLookup"
-          class="net.shibboleth.idp.cas.config.impl.ConfigLookupFunction"
-          c:clazz="net.shibboleth.idp.cas.config.impl.LoginConfiguration" />
-
-    <bean id="SubjectContextLookup"
-          class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-          c:type="net.shibboleth.idp.authn.context.SubjectContext" />
-
-    <bean id="PopulatePostAuthnInterceptContext"
-          class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext"
-          scope="prototype"
-          p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
-        <property name="activeFlowsLookupStrategy">
-            <bean class="net.shibboleth.idp.authn.config.navigate.PostAuthenticationFlowsLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="PopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-          p:fieldExtractors="#{getObject('shibboleth.CASLoginAuditExtractors') ?: getObject('shibboleth.DefaultCASLoginAuditExtractors')}" />
-
-    <bean id="InitialAuthenticationFlag" class="java.lang.Boolean">
-        <constructor-arg value="#{ '%{idp.authn.flows.initial:}'.trim().length() gt 0 }" type="boolean" />
-    </bean>
-
-    <!-- Supplementary beans -->
-    <bean id="SessionContextLookup"
-          class="org.opensaml.messaging.context.navigate.ChildContextLookup"
-          c:type="net.shibboleth.idp.session.context.SessionContext" />
-
-    <bean id="PrincipalLookupFunction"
-          class="com.google.common.base.Functions"
-          factory-method="compose">
-        <constructor-arg index="0">
-            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextPrincipalLookupFunction" />
-        </constructor-arg>
-        <constructor-arg index="1" ref="SessionContextLookup" />
-    </bean>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="
+           http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd"
+       default-init-method="initialize">
+
+    <!-- Action beans -->
+    <bean id="InitializeProfileRequestContext"
+          class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
+          p:profileId="#{T(net.shibboleth.idp.cas.config.impl.LoginConfiguration).PROFILE_ID}"
+          p:loggingId="%{idp.service.logging.cas:SSO}"
+          p:browserProfile="true" />
+
+    <bean id="PopulateUserAgentContext"
+          class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
+          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <bean id="PopulateClientStorageLoadContext"
+          class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext"
+          scope="prototype"
+          p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+    <bean id="PopulateClientStorageSaveContext"
+          class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext"
+          scope="prototype"
+          p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+    <bean id="InitializeLogin"
+          class="net.shibboleth.idp.cas.flow.impl.InitializeLoginAction" />
+
+    <bean id="BuildAuthenticationContext"
+          class="net.shibboleth.idp.cas.flow.impl.BuildAuthenticationContextAction" />
+
+    <bean id="GrantServiceTicket"
+          class="net.shibboleth.idp.cas.flow.impl.GrantServiceTicketAction"
+          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
+
+    <bean id="PopulateSessionContext"
+          class="net.shibboleth.idp.session.impl.PopulateSessionContext"
+          scope="prototype"
+          p:activationCondition="%{idp.session.enabled:true}"
+          p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+          p:sessionResolver-ref="shibboleth.SessionManager" />
+
+    <bean id="LoginConfigLookup"
+          class="net.shibboleth.idp.cas.config.impl.ConfigLookupFunction"
+          c:clazz="net.shibboleth.idp.cas.config.impl.LoginConfiguration" />
+
+    <bean id="SubjectContextLookup"
+          class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+          c:type="net.shibboleth.idp.authn.context.SubjectContext" />
+
+    <bean id="PopulatePostAuthnInterceptContext"
+          class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext"
+          scope="prototype"
+          p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
+        <property name="activeFlowsLookupStrategy">
+            <bean class="net.shibboleth.idp.authn.config.navigate.PostAuthenticationFlowsLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="PopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+          p:fieldExtractors="#{getObject('shibboleth.CASLoginAuditExtractors') ?: getObject('shibboleth.DefaultCASLoginAuditExtractors')}" />
+
+    <bean id="InitialAuthenticationFlag" class="java.lang.Boolean">
+        <constructor-arg value="#{ '%{idp.authn.flows.initial:}'.trim().length() gt 0 }" type="boolean" />
+    </bean>
+
+    <!-- Supplementary beans -->
+    <bean id="SessionContextLookup"
+          class="org.opensaml.messaging.context.navigate.ChildContextLookup"
+          c:type="net.shibboleth.idp.session.context.SessionContext" />
+
+    <bean id="PrincipalLookupFunction"
+          class="com.google.common.base.Functions"
+          factory-method="compose">
+        <constructor-arg index="0">
+            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextPrincipalLookupFunction" />
+        </constructor-arg>
+        <constructor-arg index="1" ref="SessionContextLookup" />
+    </bean>
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/login/login-flow.xml shibboleth-idp/system/flows/cas/login/login-flow.xml
--- shibboleth-idp/system/flows/cas/login/login-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/login/login-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,196 +1,196 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="
-          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
-      parent="cas.abstract">
-
-    <action-state id="InitializeLogin">
-        <on-entry>
-            <evaluate result="flowScope.hasAuthenticationContext" expression="false" />
-        </on-entry>
-        <evaluate expression="InitializeProfileRequestContext"/>
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="InitializeLogin" />
-        <evaluate expression="PopulateClientStorageLoadContext" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="ClientStorageLoad" />
-        <transition on="NoLoadNeeded" to="ContinueLogin" />
-    </action-state>
-
-    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ContinueLogin"/>
-    </subflow-state>
-
-    <action-state id="ContinueLogin">
-        <evaluate expression="PopulateSessionContext"/>
-        <evaluate expression="BuildRelyingPartyContext" />
-        <evaluate expression="BuildSAMLMetadataContext" />
-        <evaluate expression="SelectRelyingPartyConfiguration" />
-        <evaluate expression="SelectProfileConfiguration" />
-        <evaluate expression="PublishProtocolRequest" />
-        <evaluate expression="PopulateInboundInterceptContext" />
-        <evaluate expression="PopulateUserAgentContext"/>
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CheckInboundInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckInboundInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="CheckAuthenticationRequired"
-            else="DoInboundInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckAuthenticationRequired" />
-    </subflow-state>
-
-    <decision-state id="CheckAuthenticationRequired">
-        <if test="flowScope.serviceTicketRequest.gateway"
-            then="CheckForExistingSession"
-            else="CheckInitialAuthenticationRequired" />
-    </decision-state>
-
-    <decision-state id="CheckForExistingSession">
-        <on-entry>
-            <set name="flowScope.sessionContext" value="SessionContextLookup.apply(opensamlProfileRequestContext)" />
-        </on-entry>
-        <if test="sessionContext != null and sessionContext.idPSession.authenticationResults.size() > 0"
-            then="CheckResolveAttributes"
-            else="PrepareForReturnToService" />
-    </decision-state>
-
-    <action-state id="PrepareForReturnToService">
-        <set name="flowScope.redirectUrl" value="flowScope.serviceTicketRequest.service" />
-        <transition to="CheckOutboundInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckInitialAuthenticationRequired">
-        <if test="InitialAuthenticationFlag" then="PreInitialSetup" else="PostInitialSetup" />
-    </decision-state>
-
-    <action-state id="PreInitialSetup">
-        <evaluate expression="BuildAuthenticationContext"/>
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="DoInitialAuthenticationSubflow" />
-    </action-state>
-
-    <subflow-state id="DoInitialAuthenticationSubflow" subflow="authn-initial">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="PostInitialSetup" />
-    </subflow-state>
-
-    <action-state id="PostInitialSetup">
-        <evaluate expression="BuildAuthenticationContext"/>
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="DoAuthenticationSubflow" />
-    </action-state>
-
-    <subflow-state id="DoAuthenticationSubflow" subflow="authn">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckResolveAttributes">
-            <evaluate result="flowScope.hasAuthenticationContext" expression="true" />
-        </transition>
-        <transition on="RestartAuthentication" to="PostInitialSetup" />
-    </subflow-state>
-
-    <decision-state id="CheckResolveAttributes">
-        <if test="LoginConfigLookup.apply(opensamlProfileRequestContext).isResolveAttributes()"
-            then="CheckForSubjectContext"
-            else="GrantServiceTicket" />
-    </decision-state>
-
-    <decision-state id="CheckForSubjectContext">
-        <if test="SubjectContextLookup.apply(opensamlProfileRequestContext) == null"
-            then="PopulateSubjectContext"
-            else="ResolveAttributes" />
-    </decision-state>
-
-    <action-state id="PopulateSubjectContext">
-        <evaluate expression="PopulateSubjectContext" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="ResolveAttributes" />
-    </action-state>
-
-    <action-state id="ResolveAttributes">
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="FilterAttributes" />
-        <evaluate expression="PopulatePostAuthnInterceptContext" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CheckPostAuthnInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckPostAuthnInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="GrantServiceTicket"
-            else="DoPostAuthnInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoPostAuthnInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="GrantServiceTicket" />
-        <transition on="RestartAuthentication" to="PostInitialSetup" />
-    </subflow-state>
-
-    <action-state id="GrantServiceTicket">
-        <evaluate expression="GrantServiceTicket" />
-        <evaluate expression="PublishProtocolResponse" />
-        <evaluate expression="PopulateOutboundInterceptContext" />
-        <evaluate expression="PopulateClientStorageSaveContext" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="ClientStorageSave" />
-        <transition on="NoSaveNeeded" to="CheckOutboundInterceptContext">
-            <set name="flowScope.redirectUrl" value="flowScope.serviceTicketResponse.redirectUrl" />
-        </transition>
-    </action-state>
-
-    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckOutboundInterceptContext">
-            <set name="flowScope.redirectUrl" value="flowScope.serviceTicketResponse.redirectUrl" />
-        </transition>
-    </subflow-state>
-
-    <decision-state id="CheckOutboundInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="ReturnToService"
-            else="DoOutboundInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ReturnToService" />
-        <transition to="HandleError" />
-    </subflow-state>
-
-    <decision-state id="ReturnToService">
-        <if test="flowScope.serviceTicketRequest.method == 'POST'"
-            then="PostBackToService"
-            else="RedirectToService" />
-    </decision-state>
-
-    <!-- End states -->
-    <end-state id="RedirectToService" view="externalRedirect:#{flowScope.redirectUrl}">
-        <on-entry>
-            <evaluate expression="PopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-        </on-entry>
-    </end-state>
-
-    <end-state id="PostBackToService" view="cas/postBack">
-        <on-entry>
-            <evaluate expression="PopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <set name="requestScope.service" value="flowScope.serviceTicketResponse.service" />
-            <set name="requestScope.ticketParamName" value="flowScope.serviceTicketResponse.ticketParameterName" />
-            <set name="requestScope.ticket" value="flowScope.serviceTicketResponse.ticket" />
-        </on-entry>
-    </end-state>
-
-    <bean-import resource="login-beans.xml" />
-
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="
+          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
+      parent="cas.abstract">
+
+    <action-state id="InitializeLogin">
+        <on-entry>
+            <evaluate result="flowScope.hasAuthenticationContext" expression="false" />
+        </on-entry>
+        <evaluate expression="InitializeProfileRequestContext"/>
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="InitializeLogin" />
+        <evaluate expression="PopulateClientStorageLoadContext" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="ClientStorageLoad" />
+        <transition on="NoLoadNeeded" to="ContinueLogin" />
+    </action-state>
+
+    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ContinueLogin"/>
+    </subflow-state>
+
+    <action-state id="ContinueLogin">
+        <evaluate expression="PopulateSessionContext"/>
+        <evaluate expression="BuildRelyingPartyContext" />
+        <evaluate expression="BuildSAMLMetadataContext" />
+        <evaluate expression="SelectRelyingPartyConfiguration" />
+        <evaluate expression="SelectProfileConfiguration" />
+        <evaluate expression="PublishProtocolRequest" />
+        <evaluate expression="PopulateInboundInterceptContext" />
+        <evaluate expression="PopulateUserAgentContext"/>
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CheckInboundInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckInboundInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="CheckAuthenticationRequired"
+            else="DoInboundInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckAuthenticationRequired" />
+    </subflow-state>
+
+    <decision-state id="CheckAuthenticationRequired">
+        <if test="flowScope.serviceTicketRequest.gateway"
+            then="CheckForExistingSession"
+            else="CheckInitialAuthenticationRequired" />
+    </decision-state>
+
+    <decision-state id="CheckForExistingSession">
+        <on-entry>
+            <set name="flowScope.sessionContext" value="SessionContextLookup.apply(opensamlProfileRequestContext)" />
+        </on-entry>
+        <if test="sessionContext != null and sessionContext.idPSession.authenticationResults.size() > 0"
+            then="CheckResolveAttributes"
+            else="PrepareForReturnToService" />
+    </decision-state>
+
+    <action-state id="PrepareForReturnToService">
+        <set name="flowScope.redirectUrl" value="flowScope.serviceTicketRequest.service" />
+        <transition to="CheckOutboundInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckInitialAuthenticationRequired">
+        <if test="InitialAuthenticationFlag" then="PreInitialSetup" else="PostInitialSetup" />
+    </decision-state>
+
+    <action-state id="PreInitialSetup">
+        <evaluate expression="BuildAuthenticationContext"/>
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="DoInitialAuthenticationSubflow" />
+    </action-state>
+
+    <subflow-state id="DoInitialAuthenticationSubflow" subflow="authn-initial">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="PostInitialSetup" />
+    </subflow-state>
+
+    <action-state id="PostInitialSetup">
+        <evaluate expression="BuildAuthenticationContext"/>
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="DoAuthenticationSubflow" />
+    </action-state>
+
+    <subflow-state id="DoAuthenticationSubflow" subflow="authn">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckResolveAttributes">
+            <evaluate result="flowScope.hasAuthenticationContext" expression="true" />
+        </transition>
+        <transition on="RestartAuthentication" to="PostInitialSetup" />
+    </subflow-state>
+
+    <decision-state id="CheckResolveAttributes">
+        <if test="LoginConfigLookup.apply(opensamlProfileRequestContext).isResolveAttributes()"
+            then="CheckForSubjectContext"
+            else="GrantServiceTicket" />
+    </decision-state>
+
+    <decision-state id="CheckForSubjectContext">
+        <if test="SubjectContextLookup.apply(opensamlProfileRequestContext) == null"
+            then="PopulateSubjectContext"
+            else="ResolveAttributes" />
+    </decision-state>
+
+    <action-state id="PopulateSubjectContext">
+        <evaluate expression="PopulateSubjectContext" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="ResolveAttributes" />
+    </action-state>
+
+    <action-state id="ResolveAttributes">
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="FilterAttributes" />
+        <evaluate expression="PopulatePostAuthnInterceptContext" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CheckPostAuthnInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckPostAuthnInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="GrantServiceTicket"
+            else="DoPostAuthnInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoPostAuthnInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="GrantServiceTicket" />
+        <transition on="RestartAuthentication" to="PostInitialSetup" />
+    </subflow-state>
+
+    <action-state id="GrantServiceTicket">
+        <evaluate expression="GrantServiceTicket" />
+        <evaluate expression="PublishProtocolResponse" />
+        <evaluate expression="PopulateOutboundInterceptContext" />
+        <evaluate expression="PopulateClientStorageSaveContext" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="ClientStorageSave" />
+        <transition on="NoSaveNeeded" to="CheckOutboundInterceptContext">
+            <set name="flowScope.redirectUrl" value="flowScope.serviceTicketResponse.redirectUrl" />
+        </transition>
+    </action-state>
+
+    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckOutboundInterceptContext">
+            <set name="flowScope.redirectUrl" value="flowScope.serviceTicketResponse.redirectUrl" />
+        </transition>
+    </subflow-state>
+
+    <decision-state id="CheckOutboundInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="ReturnToService"
+            else="DoOutboundInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ReturnToService" />
+        <transition to="HandleError" />
+    </subflow-state>
+
+    <decision-state id="ReturnToService">
+        <if test="flowScope.serviceTicketRequest.method == 'POST'"
+            then="PostBackToService"
+            else="RedirectToService" />
+    </decision-state>
+
+    <!-- End states -->
+    <end-state id="RedirectToService" view="externalRedirect:#{flowScope.redirectUrl}">
+        <on-entry>
+            <evaluate expression="PopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+        </on-entry>
+    </end-state>
+
+    <end-state id="PostBackToService" view="cas/postBack">
+        <on-entry>
+            <evaluate expression="PopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <set name="requestScope.service" value="flowScope.serviceTicketResponse.service" />
+            <set name="requestScope.ticketParamName" value="flowScope.serviceTicketResponse.ticketParameterName" />
+            <set name="requestScope.ticket" value="flowScope.serviceTicketResponse.ticket" />
+        </on-entry>
+    </end-state>
+
+    <bean-import resource="login-beans.xml" />
+
 </flow>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/proxy/proxy-beans.xml shibboleth-idp/system/flows/cas/proxy/proxy-beans.xml
--- shibboleth-idp/system/flows/cas/proxy/proxy-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/proxy/proxy-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,33 +1,33 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xsi:schemaLocation="
-           http://www.springframework.org/schema/beans
-           http://www.springframework.org/schema/beans/spring-beans.xsd"
-       default-init-method="initialize">
-
-    <!-- Action beans -->
-    <bean id="InitializeProfileRequestContext"
-          class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
-          p:profileId="#{T(net.shibboleth.idp.cas.config.impl.ProxyConfiguration).PROFILE_ID}"
-          p:loggingId="%{idp.service.logging.cas:SSO}"
-          p:browserProfile="false" />
-
-    <bean id="InitializeProxy"
-          class="net.shibboleth.idp.cas.flow.impl.InitializeProxyAction"
-          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
-
-    <bean id="GrantProxyTicket"
-          class="net.shibboleth.idp.cas.flow.impl.GrantProxyTicketAction"
-          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}"
-          c:resolver-ref="shibboleth.SessionManager"
-          p:validateIdPSessionPredicate="#{getObject('shibboleth.CASProxyValidateIdPSessionPredicate') ?: getObject('shibboleth.DefaultCASProxyValidateIdPSessionPredicate')}" />
-
-    <bean id="PopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-          p:fieldExtractors="#{getObject('shibboleth.CASProxyAuditExtractors') ?: getObject('shibboleth.DefaultCASProxyAuditExtractors')}" />
-
-    <!-- Supplementary beans -->
-    <bean id="PrincipalLookupFunction" class="net.shibboleth.idp.cas.ticket.TicketPrincipalLookupFunction" />
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="
+           http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd"
+       default-init-method="initialize">
+
+    <!-- Action beans -->
+    <bean id="InitializeProfileRequestContext"
+          class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
+          p:profileId="#{T(net.shibboleth.idp.cas.config.impl.ProxyConfiguration).PROFILE_ID}"
+          p:loggingId="%{idp.service.logging.cas:SSO}"
+          p:browserProfile="false" />
+
+    <bean id="InitializeProxy"
+          class="net.shibboleth.idp.cas.flow.impl.InitializeProxyAction"
+          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
+
+    <bean id="GrantProxyTicket"
+          class="net.shibboleth.idp.cas.flow.impl.GrantProxyTicketAction"
+          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}"
+          c:resolver-ref="shibboleth.SessionManager"
+          p:validateIdPSessionPredicate="#{getObject('shibboleth.CASProxyValidateIdPSessionPredicate') ?: getObject('shibboleth.DefaultCASProxyValidateIdPSessionPredicate')}" />
+
+    <bean id="PopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+          p:fieldExtractors="#{getObject('shibboleth.CASProxyAuditExtractors') ?: getObject('shibboleth.DefaultCASProxyAuditExtractors')}" />
+
+    <!-- Supplementary beans -->
+    <bean id="PrincipalLookupFunction" class="net.shibboleth.idp.cas.ticket.TicketPrincipalLookupFunction" />
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/proxy/proxy-flow.xml shibboleth-idp/system/flows/cas/proxy/proxy-flow.xml
--- shibboleth-idp/system/flows/cas/proxy/proxy-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/proxy/proxy-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,68 +1,68 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="
-          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
-      parent="cas.abstract">
-
-    <on-start>
-        <set name="flowScope.casProtocolErrorView" value="'proxyFailure'" />
-    </on-start>
-
-    <action-state id="InitializeProxy">
-        <evaluate expression="InitializeProfileRequestContext"/>
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="InitializeProxy" />
-        <evaluate expression="BuildRelyingPartyContext" />
-        <evaluate expression="BuildSAMLMetadataContext" />
-        <evaluate expression="SelectRelyingPartyConfiguration" />
-        <evaluate expression="SelectProfileConfiguration" />
-        <evaluate expression="PublishProtocolRequest" />
-        <evaluate expression="PopulateInboundInterceptContext" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CheckInboundInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckInboundInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="GrantProxyTicket"
-            else="DoInboundInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="GrantProxyTicket" />
-    </subflow-state>
-
-    <action-state id="GrantProxyTicket">
-        <evaluate expression="GrantProxyTicket" />
-        <evaluate expression="PopulateOutboundInterceptContext" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CheckOutboundInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckOutboundInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="ProxySuccess"
-            else="DoOutboundInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ProxySuccess" />
-        <transition to="HandleError" />
-    </subflow-state>
-
-    <!-- View end states -->
-    <end-state id="ProxySuccess" view="cas/proxySuccess">
-        <on-entry>
-            <evaluate expression="PopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="PublishProtocolResponse" />
-            <set name="flashScope.escapeUtils" value="T(org.apache.commons.lang.StringEscapeUtils)" />
-        </on-entry>
-    </end-state>
-
-    <bean-import resource="proxy-beans.xml" />
-
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="
+          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
+      parent="cas.abstract">
+
+    <on-start>
+        <set name="flowScope.casProtocolErrorView" value="'proxyFailure'" />
+    </on-start>
+
+    <action-state id="InitializeProxy">
+        <evaluate expression="InitializeProfileRequestContext"/>
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="InitializeProxy" />
+        <evaluate expression="BuildRelyingPartyContext" />
+        <evaluate expression="BuildSAMLMetadataContext" />
+        <evaluate expression="SelectRelyingPartyConfiguration" />
+        <evaluate expression="SelectProfileConfiguration" />
+        <evaluate expression="PublishProtocolRequest" />
+        <evaluate expression="PopulateInboundInterceptContext" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CheckInboundInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckInboundInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="GrantProxyTicket"
+            else="DoInboundInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="GrantProxyTicket" />
+    </subflow-state>
+
+    <action-state id="GrantProxyTicket">
+        <evaluate expression="GrantProxyTicket" />
+        <evaluate expression="PopulateOutboundInterceptContext" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CheckOutboundInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckOutboundInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="ProxySuccess"
+            else="DoOutboundInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ProxySuccess" />
+        <transition to="HandleError" />
+    </subflow-state>
+
+    <!-- View end states -->
+    <end-state id="ProxySuccess" view="cas/proxySuccess">
+        <on-entry>
+            <evaluate expression="PopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="PublishProtocolResponse" />
+            <set name="flashScope.escapeUtils" value="T(org.apache.commons.lang.StringEscapeUtils)" />
+        </on-entry>
+    </end-state>
+
+    <bean-import resource="proxy-beans.xml" />
+
 </flow>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/proxyValidate/proxyValidate-beans.xml shibboleth-idp/system/flows/cas/proxyValidate/proxyValidate-beans.xml
--- shibboleth-idp/system/flows/cas/proxyValidate/proxyValidate-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/proxyValidate/proxyValidate-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,15 +1,15 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xsi:schemaLocation="
-           http://www.springframework.org/schema/beans
-           http://www.springframework.org/schema/beans/spring-beans.xsd"
-       default-init-method="initialize">
-
-    <!-- Action beans -->
-    <bean id="BuildProxyChain"
-          class="net.shibboleth.idp.cas.flow.impl.BuildProxyChainAction"
-          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xsi:schemaLocation="
+           http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd"
+       default-init-method="initialize">
+
+    <!-- Action beans -->
+    <bean id="BuildProxyChain"
+          class="net.shibboleth.idp.cas.flow.impl.BuildProxyChainAction"
+          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/proxyValidate/proxyValidate-flow.xml shibboleth-idp/system/flows/cas/proxyValidate/proxyValidate-flow.xml
--- shibboleth-idp/system/flows/cas/proxyValidate/proxyValidate-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/proxyValidate/proxyValidate-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,25 +1,25 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="
-          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
-      parent="cas.abstractValidate" >
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    <action-state id="InitializeValidate">
-        <evaluate expression="InitializeProfileRequestContext"/>
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="InitializeValidate" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="InitializeRelyingParty" />
-    </action-state>
-
-    <action-state id="HandleValidProxyTicket">
-        <evaluate expression="BuildProxyChain" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="ValidateRenew" />
-    </action-state>
-
-    <bean-import resource="proxyValidate-beans.xml" />
-
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="
+          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
+      parent="cas.abstractValidate" >
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    <action-state id="InitializeValidate">
+        <evaluate expression="InitializeProfileRequestContext"/>
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="InitializeValidate" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="InitializeRelyingParty" />
+    </action-state>
+
+    <action-state id="HandleValidProxyTicket">
+        <evaluate expression="BuildProxyChain" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="ValidateRenew" />
+    </action-state>
+
+    <bean-import resource="proxyValidate-beans.xml" />
+
 </flow>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/samlValidate/samlValidate-beans.xml shibboleth-idp/system/flows/cas/samlValidate/samlValidate-beans.xml
--- shibboleth-idp/system/flows/cas/samlValidate/samlValidate-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/samlValidate/samlValidate-beans.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,45 +1,45 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xsi:schemaLocation="
-           http://www.springframework.org/schema/beans
-           http://www.springframework.org/schema/beans/spring-beans.xsd"
-       default-init-method="initialize">
-
-    <bean id="DecodeMessage"
-          class="org.opensaml.profile.action.impl.DecodeMessage"
-          scope="prototype"
-          c:messageDecoder-ref="SoapDecoder" />
-
-    <bean id="SoapDecoder"
-          class="org.opensaml.saml.saml1.binding.decoding.impl.HTTPSOAP11Decoder"
-          scope="prototype"
-          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <bean id="ProcessSamlMessage"
-          class="net.shibboleth.idp.cas.flow.impl.ProcessSamlMessageAction" />
-
-    <bean id="BuildSamlValidationSuccessMessage"
-          class="net.shibboleth.idp.cas.flow.impl.BuildSamlValidationSuccessMessageAction"
-          c:strategy-ref="shibboleth.DefaultIdentifierGenerationStrategy"
-          c:id="%{idp.entityID}" />
-
-    <bean id="BuildSamlValidationFailureMessage"
-          class="net.shibboleth.idp.cas.flow.impl.BuildSamlValidationFailureMessageAction" />
-
-    <bean id="MessageEncoderFactory"
-          class="net.shibboleth.idp.saml.profile.impl.SpringAwareMessageEncoderFactory"
-          p:bindings-ref="shibboleth.OutgoingSOAPBindings" />
-
-    <bean id="EncodeMessage"
-          class="org.opensaml.profile.action.impl.EncodeMessage"
-          scope="prototype"
-          p:messageEncoderFactory-ref="MessageEncoderFactory"
-          p:messageHandler="#{getObject('shibboleth.BindingSpecificMessageHandler')}" />
-
-   <bean id="RecordResponseComplete"
-          class="net.shibboleth.idp.profile.impl.RecordResponseComplete"
-          scope="prototype" />
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="
+           http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd"
+       default-init-method="initialize">
+
+    <bean id="DecodeMessage"
+          class="org.opensaml.profile.action.impl.DecodeMessage"
+          scope="prototype"
+          c:messageDecoder-ref="SoapDecoder" />
+
+    <bean id="SoapDecoder"
+          class="org.opensaml.saml.saml1.binding.decoding.impl.HTTPSOAP11Decoder"
+          scope="prototype"
+          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <bean id="ProcessSamlMessage"
+          class="net.shibboleth.idp.cas.flow.impl.ProcessSamlMessageAction" />
+
+    <bean id="BuildSamlValidationSuccessMessage"
+          class="net.shibboleth.idp.cas.flow.impl.BuildSamlValidationSuccessMessageAction"
+          c:strategy-ref="shibboleth.DefaultIdentifierGenerationStrategy"
+          c:id="%{idp.entityID}" />
+
+    <bean id="BuildSamlValidationFailureMessage"
+          class="net.shibboleth.idp.cas.flow.impl.BuildSamlValidationFailureMessageAction" />
+
+    <bean id="MessageEncoderFactory"
+          class="net.shibboleth.idp.saml.profile.impl.SpringAwareMessageEncoderFactory"
+          p:bindings-ref="shibboleth.OutgoingSOAPBindings" />
+
+    <bean id="EncodeMessage"
+          class="org.opensaml.profile.action.impl.EncodeMessage"
+          scope="prototype"
+          p:messageEncoderFactory-ref="MessageEncoderFactory"
+          p:messageHandler="#{getObject('shibboleth.BindingSpecificMessageHandler')}" />
+
+   <bean id="RecordResponseComplete"
+          class="net.shibboleth.idp.profile.impl.RecordResponseComplete"
+          scope="prototype" />
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/samlValidate/samlValidate-flow.xml shibboleth-idp/system/flows/cas/samlValidate/samlValidate-flow.xml
--- shibboleth-idp/system/flows/cas/samlValidate/samlValidate-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/samlValidate/samlValidate-flow.xml	2019-07-01 13:03:37.441961419 -0400
@@ -1,49 +1,49 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="
-          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
-      parent="cas.abstractValidate" >
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    <action-state id="InitializeValidate">
-        <evaluate expression="InitializeProfileRequestContext"/>
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="DecodeMessage" />
-        <evaluate expression="ProcessSamlMessage" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="InitializeRelyingParty" />
-    </action-state>
-
-    <!--
-       | Override attribute resolution check in parent flow.
-       | Always resolve attributes for /samlValidate protocol endpoint.
-       -->
-    <decision-state id="CheckResolveAttributes">
-        <if test="ValidateConfigLookup.apply(opensamlProfileRequestContext).isResolveAttributes()"
-            then="ResolveAttributes"
-            else="ResolveAttributes" />
-    </decision-state>
-
-    <!-- End states that render the SAML message in the outgoing message context -->
-    <end-state id="ValidateSuccess">
-        <on-entry>
-            <evaluate expression="BuildSamlValidationSuccessMessage" />
-            <evaluate expression="EncodeMessage" />
-            <evaluate expression="RecordResponseComplete" />
-        </on-entry>
-    </end-state>
-
-    <!-- Override protocol error view in parent flow -->
-    <end-state id="ProtocolErrorView">
-        <on-entry>
-            <evaluate expression="BuildSamlValidationFailureMessage" />
-            <evaluate expression="EncodeMessage" />
-            <evaluate expression="RecordResponseComplete" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <bean-import resource="samlValidate-beans.xml" />
-
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="
+          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
+      parent="cas.abstractValidate" >
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    <action-state id="InitializeValidate">
+        <evaluate expression="InitializeProfileRequestContext"/>
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="DecodeMessage" />
+        <evaluate expression="ProcessSamlMessage" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="InitializeRelyingParty" />
+    </action-state>
+
+    <!--
+       | Override attribute resolution check in parent flow.
+       | Always resolve attributes for /samlValidate protocol endpoint.
+       -->
+    <decision-state id="CheckResolveAttributes">
+        <if test="ValidateConfigLookup.apply(opensamlProfileRequestContext).isResolveAttributes()"
+            then="ResolveAttributes"
+            else="ResolveAttributes" />
+    </decision-state>
+
+    <!-- End states that render the SAML message in the outgoing message context -->
+    <end-state id="ValidateSuccess">
+        <on-entry>
+            <evaluate expression="BuildSamlValidationSuccessMessage" />
+            <evaluate expression="EncodeMessage" />
+            <evaluate expression="RecordResponseComplete" />
+        </on-entry>
+    </end-state>
+
+    <!-- Override protocol error view in parent flow -->
+    <end-state id="ProtocolErrorView">
+        <on-entry>
+            <evaluate expression="BuildSamlValidationFailureMessage" />
+            <evaluate expression="EncodeMessage" />
+            <evaluate expression="RecordResponseComplete" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <bean-import resource="samlValidate-beans.xml" />
+
 </flow>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/serviceValidate/serviceValidate-beans.xml shibboleth-idp/system/flows/cas/serviceValidate/serviceValidate-beans.xml
--- shibboleth-idp/system/flows/cas/serviceValidate/serviceValidate-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/serviceValidate/serviceValidate-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,9 +1,9 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="
-           http://www.springframework.org/schema/beans
-           http://www.springframework.org/schema/beans/spring-beans.xsd"
-       default-init-method="initialize">
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="
+           http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd"
+       default-init-method="initialize">
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/serviceValidate/serviceValidate-flow.xml shibboleth-idp/system/flows/cas/serviceValidate/serviceValidate-flow.xml
--- shibboleth-idp/system/flows/cas/serviceValidate/serviceValidate-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/serviceValidate/serviceValidate-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,23 +1,23 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="
-          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
-      parent="cas.abstractValidate">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    <action-state id="InitializeValidate">
-        <evaluate expression="InitializeProfileRequestContext"/>
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="InitializeValidate" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="InitializeRelyingParty" />
-    </action-state>
-
-    <action-state id="HandleValidProxyTicket">
-        <evaluate expression="T(net.shibboleth.idp.cas.protocol.ProtocolError).InvalidTicketType.event(flowRequestContext.currentState)" />
-    </action-state>
-
-    <bean-import resource="serviceValidate-beans.xml" />
-
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="
+          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
+      parent="cas.abstractValidate">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    <action-state id="InitializeValidate">
+        <evaluate expression="InitializeProfileRequestContext"/>
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="InitializeValidate" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="InitializeRelyingParty" />
+    </action-state>
+
+    <action-state id="HandleValidProxyTicket">
+        <evaluate expression="T(net.shibboleth.idp.cas.protocol.ProtocolError).InvalidTicketType.event(flowRequestContext.currentState)" />
+    </action-state>
+
+    <bean-import resource="serviceValidate-beans.xml" />
+
 </flow>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/validate/validate-beans.xml shibboleth-idp/system/flows/cas/validate/validate-beans.xml
--- shibboleth-idp/system/flows/cas/validate/validate-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/validate/validate-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,22 +1,22 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xsi:schemaLocation="
-           http://www.springframework.org/schema/beans
-           http://www.springframework.org/schema/beans/spring-beans.xsd"
-       default-init-method="initialize">
-
-    <bean id="WriteValidateSuccess"
-          class="net.shibboleth.idp.cas.flow.impl.WriteValidateResponseAction"
-          c:successFlag="true" />
-
-    <bean id="WriteValidateFailure"
-          class="net.shibboleth.idp.cas.flow.impl.WriteValidateResponseAction"
-          c:successFlag="false" />
-
-    <bean id="RecordResponseComplete"
-          class="net.shibboleth.idp.profile.impl.RecordResponseComplete"
-          scope="prototype" />
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xsi:schemaLocation="
+           http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd"
+       default-init-method="initialize">
+
+    <bean id="WriteValidateSuccess"
+          class="net.shibboleth.idp.cas.flow.impl.WriteValidateResponseAction"
+          c:successFlag="true" />
+
+    <bean id="WriteValidateFailure"
+          class="net.shibboleth.idp.cas.flow.impl.WriteValidateResponseAction"
+          c:successFlag="false" />
+
+    <bean id="RecordResponseComplete"
+          class="net.shibboleth.idp.profile.impl.RecordResponseComplete"
+          scope="prototype" />
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/validate/validate-flow.xml shibboleth-idp/system/flows/cas/validate/validate-flow.xml
--- shibboleth-idp/system/flows/cas/validate/validate-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/validate/validate-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,43 +1,43 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="
-          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
-      parent="cas.abstractValidate">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    <action-state id="InitializeValidate">
-        <evaluate expression="InitializeProfileRequestContext"/>
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="InitializeValidate" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="InitializeRelyingParty" />
-    </action-state>
-
-    <action-state id="HandleValidProxyTicket">
-        <evaluate expression="T(net.shibboleth.idp.cas.protocol.ProtocolError).InvalidTicketType.event(flowRequestContext.currentState)" />
-    </action-state>
-
-    <!-- End states that render the SAML message in the outgoing message context -->
-    <end-state id="ValidateSuccess">
-        <on-entry>
-            <evaluate expression="WriteValidateSuccess" />
-            <evaluate expression="RecordResponseComplete" />
-        </on-entry>
-    </end-state>
-
-    <!-- Override protocol error view in parent flow -->
-    <end-state id="ProtocolErrorView">
-        <on-entry>
-            <evaluate expression="PopulateProtocolError" />
-            <evaluate expression="PopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="WriteValidateFailure" />
-            <evaluate expression="RecordResponseComplete" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <bean-import resource="validate-beans.xml" />
-
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="
+          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
+      parent="cas.abstractValidate">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    <action-state id="InitializeValidate">
+        <evaluate expression="InitializeProfileRequestContext"/>
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="InitializeValidate" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="InitializeRelyingParty" />
+    </action-state>
+
+    <action-state id="HandleValidProxyTicket">
+        <evaluate expression="T(net.shibboleth.idp.cas.protocol.ProtocolError).InvalidTicketType.event(flowRequestContext.currentState)" />
+    </action-state>
+
+    <!-- End states that render the SAML message in the outgoing message context -->
+    <end-state id="ValidateSuccess">
+        <on-entry>
+            <evaluate expression="WriteValidateSuccess" />
+            <evaluate expression="RecordResponseComplete" />
+        </on-entry>
+    </end-state>
+
+    <!-- Override protocol error view in parent flow -->
+    <end-state id="ProtocolErrorView">
+        <on-entry>
+            <evaluate expression="PopulateProtocolError" />
+            <evaluate expression="PopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="WriteValidateFailure" />
+            <evaluate expression="RecordResponseComplete" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <bean-import resource="validate-beans.xml" />
+
 </flow>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/validate-abstract-beans.xml shibboleth-idp/system/flows/cas/validate-abstract-beans.xml
--- shibboleth-idp/system/flows/cas/validate-abstract-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/validate-abstract-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,57 +1,57 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xsi:schemaLocation="
-           http://www.springframework.org/schema/beans
-           http://www.springframework.org/schema/beans/spring-beans.xsd"
-       default-init-method="initialize">
-
-    <!-- Action beans -->
-    <bean id="InitializeProfileRequestContext"
-          class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
-          p:profileId="#{T(net.shibboleth.idp.cas.config.impl.ValidateConfiguration).PROFILE_ID}"
-          p:loggingId="%{idp.service.logging.cas:SSO}"
-          p:browserProfile="false" />
-
-    <bean id="PopulateMetricContext"
-        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
-        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
-
-    <bean id="InitializeValidate"
-          class="net.shibboleth.idp.cas.flow.impl.InitializeValidateAction" />
-
-    <bean id="ValidateTicket"
-          class="net.shibboleth.idp.cas.flow.impl.ValidateTicketAction"
-          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
-
-    <bean id="ValidateRenew"
-          class="net.shibboleth.idp.cas.flow.impl.ValidateRenewAction" />
-
-    <bean id="CheckProxyAuthorization"
-          class="net.shibboleth.idp.cas.flow.impl.CheckProxyAuthorizationAction" />
-
-    <bean id="ValidateProxyCallback"
-          class="net.shibboleth.idp.cas.flow.impl.ValidateProxyCallbackAction"
-          c:proxyAuthenticator="#{getObject('shibboleth.CASProxyAuthenticator') ?: getObject('shibboleth.DefaultCASProxyAuthenticator')}"
-          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
-
-    <bean id="PrepareTicketValidationResponse"
-          class="net.shibboleth.idp.cas.flow.impl.PrepareTicketValidationResponseAction" />
-
-    <bean id="UpdateIdPSessionWithSPSession"
-          class="net.shibboleth.idp.cas.flow.impl.UpdateIdPSessionWithSPSessionAction"
-          c:lifetime="%{idp.session.defaultSPlifetime:PT2H}"
-          c:resolver-ref="shibboleth.SessionManager" />
-
-    <bean id="PopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-          p:fieldExtractors="#{getObject('shibboleth.CASValidationAuditExtractors') ?: getObject('shibboleth.DefaultCASValidationAuditExtractors')}" />
-
-    <bean id="ValidateConfigLookup"
-          class="net.shibboleth.idp.cas.config.impl.ConfigLookupFunction"
-          c:clazz="net.shibboleth.idp.cas.config.impl.ValidateConfiguration" />
-
-    <!-- Supplementary beans -->
-    <bean id="PrincipalLookupFunction" class="net.shibboleth.idp.cas.ticket.TicketPrincipalLookupFunction" />
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="
+           http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd"
+       default-init-method="initialize">
+
+    <!-- Action beans -->
+    <bean id="InitializeProfileRequestContext"
+          class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
+          p:profileId="#{T(net.shibboleth.idp.cas.config.impl.ValidateConfiguration).PROFILE_ID}"
+          p:loggingId="%{idp.service.logging.cas:SSO}"
+          p:browserProfile="false" />
+
+    <bean id="PopulateMetricContext"
+        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
+        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
+
+    <bean id="InitializeValidate"
+          class="net.shibboleth.idp.cas.flow.impl.InitializeValidateAction" />
+
+    <bean id="ValidateTicket"
+          class="net.shibboleth.idp.cas.flow.impl.ValidateTicketAction"
+          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
+
+    <bean id="ValidateRenew"
+          class="net.shibboleth.idp.cas.flow.impl.ValidateRenewAction" />
+
+    <bean id="CheckProxyAuthorization"
+          class="net.shibboleth.idp.cas.flow.impl.CheckProxyAuthorizationAction" />
+
+    <bean id="ValidateProxyCallback"
+          class="net.shibboleth.idp.cas.flow.impl.ValidateProxyCallbackAction"
+          c:proxyAuthenticator="#{getObject('shibboleth.CASProxyAuthenticator') ?: getObject('shibboleth.DefaultCASProxyAuthenticator')}"
+          c:ticketService="#{getObject('shibboleth.CASTicketService') ?: getObject('shibboleth.DefaultCASTicketService')}" />
+
+    <bean id="PrepareTicketValidationResponse"
+          class="net.shibboleth.idp.cas.flow.impl.PrepareTicketValidationResponseAction" />
+
+    <bean id="UpdateIdPSessionWithSPSession"
+          class="net.shibboleth.idp.cas.flow.impl.UpdateIdPSessionWithSPSessionAction"
+          c:lifetime="%{idp.session.defaultSPlifetime:PT2H}"
+          c:resolver-ref="shibboleth.SessionManager" />
+
+    <bean id="PopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+          p:fieldExtractors="#{getObject('shibboleth.CASValidationAuditExtractors') ?: getObject('shibboleth.DefaultCASValidationAuditExtractors')}" />
+
+    <bean id="ValidateConfigLookup"
+          class="net.shibboleth.idp.cas.config.impl.ConfigLookupFunction"
+          c:clazz="net.shibboleth.idp.cas.config.impl.ValidateConfiguration" />
+
+    <!-- Supplementary beans -->
+    <bean id="PrincipalLookupFunction" class="net.shibboleth.idp.cas.ticket.TicketPrincipalLookupFunction" />
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/cas/validate-abstract-flow.xml shibboleth-idp/system/flows/cas/validate-abstract-flow.xml
--- shibboleth-idp/system/flows/cas/validate-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/cas/validate-abstract-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,112 +1,112 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="
-          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
-      abstract="true"
-      parent="cas.abstract">
-
-    <!-- Base flow for all CAS protocol ticket validation operations -->
-
-    <on-start>
-        <set name="flowScope.casProtocolErrorView" value="'validateFailure'" />
-    </on-start>
-
-    <action-state id="InitializeRelyingParty">
-        <evaluate expression="PublishProtocolRequest" />
-        <evaluate expression="BuildRelyingPartyContext" />
-        <evaluate expression="BuildSAMLMetadataContext" />
-        <evaluate expression="SelectRelyingPartyConfiguration" />
-        <evaluate expression="SelectProfileConfiguration" />
-        <evaluate expression="PopulateInboundInterceptContext" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CheckInboundInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckInboundInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="ValidateTicket"
-            else="DoInboundInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ValidateTicket" />
-    </subflow-state>
-
-    <action-state id="ValidateTicket">
-        <evaluate expression="ValidateTicket" />
-        <transition on="InvalidTicketFormat" to="ProtocolErrorView" />
-        <transition on="ServiceMismatch" to="ProtocolErrorView" />
-        <transition on="TicketExpired" to="ProtocolErrorView" />
-        <transition on="TicketRetrievalError" to="ProtocolErrorView" />
-        <transition on="ServiceTicketValidated" to="ValidateRenew" />
-        <transition on="ProxyTicketValidated" to="HandleValidProxyTicket" />
-    </action-state>
-
-    <action-state id="ValidateRenew">
-        <evaluate expression="ValidateRenew" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CheckForProxy" />
-    </action-state>
-
-    <decision-state id="CheckForProxy">
-        <if test="flowScope.ticketValidationRequest.pgtUrl != null"
-            then="ValidateProxyCallback"
-            else="CheckResolveAttributes"/>
-    </decision-state>
-
-    <action-state id="ValidateProxyCallback">
-        <evaluate expression="CheckProxyAuthorization" />
-        <evaluate expression="ValidateProxyCallback" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CheckResolveAttributes" />
-    </action-state>
-
-    <decision-state id="CheckResolveAttributes">
-        <if test="ValidateConfigLookup.apply(opensamlProfileRequestContext).isResolveAttributes()"
-            then="ResolveAttributes"
-            else="UpdateIdPSessionWithSPSession" />
-    </decision-state>
-
-    <action-state id="ResolveAttributes">
-        <evaluate expression="PopulateSubjectContext" />
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="FilterAttributes" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="UpdateIdPSessionWithSPSession" />
-    </action-state>
-
-    <action-state id="UpdateIdPSessionWithSPSession">
-        <evaluate expression="UpdateIdPSessionWithSPSession" />
-        <evaluate expression="PopulateOutboundInterceptContext" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CheckOutboundInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckOutboundInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="ValidateSuccess"
-            else="DoOutboundInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ValidateSuccess" />
-        <transition to="HandleError" />
-    </subflow-state>
-
-    <!-- View end states -->
-    <end-state id="ValidateSuccess" view="cas/validateSuccess">
-        <on-entry>
-            <evaluate expression="PrepareTicketValidationResponse" />
-            <evaluate expression="PopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="PublishProtocolResponse" />
-            <set name="flashScope.escapeUtils" value="T(org.apache.commons.lang.StringEscapeUtils)" />
-        </on-entry>
-    </end-state>
-
-    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
-    <bean-import resource="../validate-abstract-beans.xml" />
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="
+          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
+      abstract="true"
+      parent="cas.abstract">
+
+    <!-- Base flow for all CAS protocol ticket validation operations -->
+
+    <on-start>
+        <set name="flowScope.casProtocolErrorView" value="'validateFailure'" />
+    </on-start>
+
+    <action-state id="InitializeRelyingParty">
+        <evaluate expression="PublishProtocolRequest" />
+        <evaluate expression="BuildRelyingPartyContext" />
+        <evaluate expression="BuildSAMLMetadataContext" />
+        <evaluate expression="SelectRelyingPartyConfiguration" />
+        <evaluate expression="SelectProfileConfiguration" />
+        <evaluate expression="PopulateInboundInterceptContext" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CheckInboundInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckInboundInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="ValidateTicket"
+            else="DoInboundInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ValidateTicket" />
+    </subflow-state>
+
+    <action-state id="ValidateTicket">
+        <evaluate expression="ValidateTicket" />
+        <transition on="InvalidTicketFormat" to="ProtocolErrorView" />
+        <transition on="ServiceMismatch" to="ProtocolErrorView" />
+        <transition on="TicketExpired" to="ProtocolErrorView" />
+        <transition on="TicketRetrievalError" to="ProtocolErrorView" />
+        <transition on="ServiceTicketValidated" to="ValidateRenew" />
+        <transition on="ProxyTicketValidated" to="HandleValidProxyTicket" />
+    </action-state>
+
+    <action-state id="ValidateRenew">
+        <evaluate expression="ValidateRenew" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CheckForProxy" />
+    </action-state>
+
+    <decision-state id="CheckForProxy">
+        <if test="flowScope.ticketValidationRequest.pgtUrl != null"
+            then="ValidateProxyCallback"
+            else="CheckResolveAttributes"/>
+    </decision-state>
+
+    <action-state id="ValidateProxyCallback">
+        <evaluate expression="CheckProxyAuthorization" />
+        <evaluate expression="ValidateProxyCallback" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CheckResolveAttributes" />
+    </action-state>
+
+    <decision-state id="CheckResolveAttributes">
+        <if test="ValidateConfigLookup.apply(opensamlProfileRequestContext).isResolveAttributes()"
+            then="ResolveAttributes"
+            else="UpdateIdPSessionWithSPSession" />
+    </decision-state>
+
+    <action-state id="ResolveAttributes">
+        <evaluate expression="PopulateSubjectContext" />
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="FilterAttributes" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="UpdateIdPSessionWithSPSession" />
+    </action-state>
+
+    <action-state id="UpdateIdPSessionWithSPSession">
+        <evaluate expression="UpdateIdPSessionWithSPSession" />
+        <evaluate expression="PopulateOutboundInterceptContext" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CheckOutboundInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckOutboundInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="ValidateSuccess"
+            else="DoOutboundInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ValidateSuccess" />
+        <transition to="HandleError" />
+    </subflow-state>
+
+    <!-- View end states -->
+    <end-state id="ValidateSuccess" view="cas/validateSuccess">
+        <on-entry>
+            <evaluate expression="PrepareTicketValidationResponse" />
+            <evaluate expression="PopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="PublishProtocolResponse" />
+            <set name="flashScope.escapeUtils" value="T(org.apache.commons.lang.StringEscapeUtils)" />
+        </on-entry>
+    </end-state>
+
+    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
+    <bean-import resource="../validate-abstract-beans.xml" />
 </flow>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/client-storage/client-storage-read-beans.xml shibboleth-idp/system/flows/client-storage/client-storage-read-beans.xml
--- shibboleth-idp/system/flows/client-storage/client-storage-read-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/client-storage/client-storage-read-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,31 +1,31 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <bean id="UseLocalStorage" class="java.lang.Boolean">
-        <constructor-arg value="%{idp.storage.htmlLocalStorage:false}" type="boolean" />
-    </bean>
-
-    <bean id="LoadClientStorageServices"
-        class="org.opensaml.storage.impl.client.LoadClientStorageServices" scope="prototype"
-        p:useLocalStorage="%{idp.storage.htmlLocalStorage:false}"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <bean id="UseLocalStorage" class="java.lang.Boolean">
+        <constructor-arg value="%{idp.storage.htmlLocalStorage:false}" type="boolean" />
+    </bean>
+
+    <bean id="LoadClientStorageServices"
+        class="org.opensaml.storage.impl.client.LoadClientStorageServices" scope="prototype"
+        p:useLocalStorage="%{idp.storage.htmlLocalStorage:false}"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/client-storage/client-storage-read-flow.xml shibboleth-idp/system/flows/client-storage/client-storage-read-flow.xml
--- shibboleth-idp/system/flows/client-storage/client-storage-read-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/client-storage/client-storage-read-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,56 +1,56 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-        
-    <decision-state id="CheckLocalStorage">
-        <if test="UseLocalStorage and opensamlProfileRequestContext.isBrowserProfile()"
-            then="LocalStorageRead" else="LoadClientStorageServices" />
-    </decision-state>
-
-    <view-state id="LocalStorageRead" view="/client-storage/client-storage-read">
-        <on-render>
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.opensaml.storage.impl.client.ClientStorageLoadContext))" result="viewScope.loadContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-        </on-render>
-
-        <transition on="proceed" to="LoadClientStorageServices" />
-    </view-state>
-
-    <action-state id="LoadClientStorageServices">
-        <evaluate expression="LoadClientStorageServices" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <!-- Passthrough state if an exception is thrown. -->
-    <action-state id="LogRuntimeException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        </on-entry>
-        <evaluate expression="'RuntimeException'" />
-    </action-state>
-
-    <!-- Successful completion of subflow. -->
-    <end-state id="proceed" />
-
-    <!-- Error events to reflect back from this subflow. -->
-    <end-state id="InvalidProfileContext" />
-    <end-state id="RuntimeException" />
-
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
-        <transition on="RuntimeException" to="RuntimeException" />
-    </global-transitions>
-
-    <bean-import resource="client-storage-read-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+        
+    <decision-state id="CheckLocalStorage">
+        <if test="UseLocalStorage and opensamlProfileRequestContext.isBrowserProfile()"
+            then="LocalStorageRead" else="LoadClientStorageServices" />
+    </decision-state>
+
+    <view-state id="LocalStorageRead" view="/client-storage/client-storage-read">
+        <on-render>
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.opensaml.storage.impl.client.ClientStorageLoadContext))" result="viewScope.loadContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+        </on-render>
+
+        <transition on="proceed" to="LoadClientStorageServices" />
+    </view-state>
+
+    <action-state id="LoadClientStorageServices">
+        <evaluate expression="LoadClientStorageServices" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <!-- Passthrough state if an exception is thrown. -->
+    <action-state id="LogRuntimeException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        </on-entry>
+        <evaluate expression="'RuntimeException'" />
+    </action-state>
+
+    <!-- Successful completion of subflow. -->
+    <end-state id="proceed" />
+
+    <!-- Error events to reflect back from this subflow. -->
+    <end-state id="InvalidProfileContext" />
+    <end-state id="RuntimeException" />
+
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
+        <transition on="RuntimeException" to="RuntimeException" />
+    </global-transitions>
+
+    <bean-import resource="client-storage-read-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/client-storage/client-storage-write-beans.xml shibboleth-idp/system/flows/client-storage/client-storage-write-beans.xml
--- shibboleth-idp/system/flows/client-storage/client-storage-write-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/client-storage/client-storage-write-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,33 +1,33 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <bean id="UseLocalStorage" class="java.lang.Boolean">
-        <constructor-arg value="%{idp.storage.htmlLocalStorage:false}" type="boolean" />
-    </bean>
-
-    <bean id="SaveCookieBackedClientStorageServices"
-        class="org.opensaml.storage.impl.client.SaveCookieBackedClientStorageServices" scope="prototype"
-        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-    <bean id="LogLocalStorageSaveResults"
-        class="org.opensaml.storage.impl.client.LogLocalStorageSaveResults" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <bean id="UseLocalStorage" class="java.lang.Boolean">
+        <constructor-arg value="%{idp.storage.htmlLocalStorage:false}" type="boolean" />
+    </bean>
+
+    <bean id="SaveCookieBackedClientStorageServices"
+        class="org.opensaml.storage.impl.client.SaveCookieBackedClientStorageServices" scope="prototype"
+        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+    <bean id="LogLocalStorageSaveResults"
+        class="org.opensaml.storage.impl.client.LogLocalStorageSaveResults" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/client-storage/client-storage-write-flow.xml shibboleth-idp/system/flows/client-storage/client-storage-write-flow.xml
--- shibboleth-idp/system/flows/client-storage/client-storage-write-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/client-storage/client-storage-write-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,63 +1,63 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-    
-    <decision-state id="CheckLocalStorage">
-        <if test="UseLocalStorage and opensamlProfileRequestContext.getSubcontext(T(org.opensaml.storage.impl.client.ClientStorageSaveContext)).isSourceRequired(T(org.opensaml.storage.impl.client.ClientStorageService.ClientStorageSource).HTML_LOCAL_STORAGE)"
-            then="LocalStorageWrite" else="SaveCookieBackedClientStorageServices" />
-    </decision-state>
-
-    <view-state id="LocalStorageWrite" view="/client-storage/client-storage-write">
-        <on-render>
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.opensaml.storage.impl.client.ClientStorageSaveContext))" result="viewScope.saveContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-        </on-render>
-
-        <transition on="proceed" to="LogLocalStorageSaveResults" />
-    </view-state>
-    
-    <action-state id="LogLocalStorageSaveResults">
-        <evaluate expression="LogLocalStorageSaveResults" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="SaveCookieBackedClientStorageServices" />
-    </action-state>
-
-    <action-state id="SaveCookieBackedClientStorageServices">
-        <evaluate expression="SaveCookieBackedClientStorageServices" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <!-- Passthrough state if an exception is thrown. -->
-    <action-state id="LogRuntimeException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        </on-entry>
-        <evaluate expression="'RuntimeException'" />
-    </action-state>
-
-    <!-- Successful completion of subflow. -->
-    <end-state id="proceed" />
-
-    <!-- Error events to reflect back from this subflow. -->
-    <end-state id="InvalidProfileContext" />
-    <end-state id="RuntimeException" />
-
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
-        <transition on="RuntimeException" to="RuntimeException" />
-    </global-transitions>
-
-    <bean-import resource="client-storage-write-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+    
+    <decision-state id="CheckLocalStorage">
+        <if test="UseLocalStorage and opensamlProfileRequestContext.getSubcontext(T(org.opensaml.storage.impl.client.ClientStorageSaveContext)).isSourceRequired(T(org.opensaml.storage.impl.client.ClientStorageService.ClientStorageSource).HTML_LOCAL_STORAGE)"
+            then="LocalStorageWrite" else="SaveCookieBackedClientStorageServices" />
+    </decision-state>
+
+    <view-state id="LocalStorageWrite" view="/client-storage/client-storage-write">
+        <on-render>
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.opensaml.storage.impl.client.ClientStorageSaveContext))" result="viewScope.saveContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+        </on-render>
+
+        <transition on="proceed" to="LogLocalStorageSaveResults" />
+    </view-state>
+    
+    <action-state id="LogLocalStorageSaveResults">
+        <evaluate expression="LogLocalStorageSaveResults" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="SaveCookieBackedClientStorageServices" />
+    </action-state>
+
+    <action-state id="SaveCookieBackedClientStorageServices">
+        <evaluate expression="SaveCookieBackedClientStorageServices" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <!-- Passthrough state if an exception is thrown. -->
+    <action-state id="LogRuntimeException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        </on-entry>
+        <evaluate expression="'RuntimeException'" />
+    </action-state>
+
+    <!-- Successful completion of subflow. -->
+    <end-state id="proceed" />
+
+    <!-- Error events to reflect back from this subflow. -->
+    <end-state id="InvalidProfileContext" />
+    <end-state id="RuntimeException" />
+
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
+        <transition on="RuntimeException" to="RuntimeException" />
+    </global-transitions>
+
+    <bean-import resource="client-storage-write-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/intercept/attribute-release-beans.xml shibboleth-idp/system/flows/intercept/attribute-release-beans.xml
--- shibboleth-idp/system/flows/intercept/attribute-release-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/attribute-release-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,164 +1,164 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xmlns:context="http://www.springframework.org/schema/context" xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-    default-init-method="initialize" default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <import resource="../../conf/audit-system.xml" />
-    <import resource="../../../conf/intercept/consent-intercept-config.xml" />
-
-    <bean id="AttributeReleaseConsentFunction"
-        class="net.shibboleth.idp.consent.logic.impl.AttributeReleaseConsentFunction" scope="prototype" />
-
-    <bean id="AttributeConsentFlowDescriptorLookupStrategy"
-        class="net.shibboleth.idp.consent.logic.impl.FlowDescriptorLookupFunction"
-        c:type="#{ T(net.shibboleth.idp.consent.flow.ar.impl.AttributeReleaseFlowDescriptor) }" />
-
-    <bean id="GlobalAttributeConsentPredicate"
-        class="net.shibboleth.idp.consent.logic.impl.GlobalAttributeConsentPredicate" />
-
-    <bean id="IsConsentRequiredPredicate"
-        class="net.shibboleth.idp.consent.logic.impl.IsConsentRequiredPredicate" />
-
-    <!-- Predicate used to determine if consent should be obtained for an attribute. -->
-    <bean id="AttributePredicate"
-        class="net.shibboleth.idp.consent.logic.impl.AttributePredicate"
-        p:whitelistedAttributeIds-ref="shibboleth.consent.attribute-release.WhitelistedAttributeIDs"
-        p:blacklistedAttributeIds-ref="shibboleth.consent.attribute-release.BlacklistedAttributeIDs"
-        p:attributeIdMatchExpression="#{getObject('shibboleth.consent.attribute-release.MatchExpression')}" />
-
-    <!-- Functions to return a storage key consisting of the user identifier. -->
-
-    <bean id="shibboleth.consent.PrincipalConsentStorageKey"
-        class="com.google.common.base.Functions" factory-method="compose"
-        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-        
-    <bean id="shibboleth.consent.AttributeConsentStorageKey"
-        class="net.shibboleth.idp.consent.logic.impl.AttributeValueLookupFunction"
-        c:userAttributeId="%{idp.consent.userStorageKeyAttribute:uid}" />
-        
-    <alias name="%{idp.consent.userStorageKey:shibboleth.consent.PrincipalConsentStorageKey}"
-        alias="shibboleth.consent.UserStorageKey" />
-
-    <!--
-    Function to return a storage key consisting of the user identifier and relying party ID
-    joined by a delimiter.
-    -->
-    <bean id="shibboleth.consent.UserAndRelyingPartyStorageKey"
-        class="net.shibboleth.idp.consent.logic.impl.JoinFunction"
-        c:functionA-ref="shibboleth.consent.UserStorageKey"
-        c:functionB-ref="shibboleth.RelyingPartyIdLookup.Simple" />
-
-    <!--
-    Function to return the storage key of the index record containing all storage keys
-    of the storage context.
-    -->
-    <bean id="shibboleth.consent.UserStorageIndexKey"
-        class="net.shibboleth.idp.consent.logic.impl.JoinFunction"
-        c:functionA-ref="shibboleth.consent.UserStorageKey">
-        <constructor-arg name="functionB">
-            <bean class="com.google.common.base.Functions" factory-method="constant">
-                <constructor-arg>
-                    <util:constant
-                        static-field="net.shibboleth.idp.consent.flow.storage.impl.AbstractConsentIndexedStorageAction.DEFAULT_STORAGE_INDEX_KEY" />
-                </constructor-arg>
-            </bean>
-        </constructor-arg>
-    </bean>
-
-    <!-- Serializer for consent records with symbolics support. -->
-    <bean id="shibboleth.consent.ConsentSerializer"
-        class="net.shibboleth.idp.consent.storage.impl.ConsentSerializer"
-        p:symbolics-ref="shibboleth.consent.AttributeSymbolics" />
-
-    <!-- Default comparator which orders attributes according to the whitelist. -->
-    <bean id="DefaultAttributeIDComparator"
-        class="net.shibboleth.idp.consent.logic.impl.PreferExplicitOrderComparator"
-        c:order="#{getObject('shibboleth.consent.attribute-release.AttributeDisplayOrder')}" />
-
-    <!-- Action beans -->
-
-    <bean id="InitializeConsentContext"
-        class="net.shibboleth.idp.consent.flow.impl.InitializeConsentContext" scope="prototype" />
-
-    <bean id="InitializeAttributeConsentContext"
-        class="net.shibboleth.idp.consent.flow.ar.impl.InitializeAttributeReleaseContext" scope="prototype" />
-
-    <bean id="PopulateAttributeConsentContext"
-        class="net.shibboleth.idp.consent.flow.ar.impl.PopulateAttributeReleaseContext" scope="prototype"
-        p:attributePredicate-ref="AttributePredicate"
-        p:attributeIdComparator="#{getObject('shibboleth.consent.attribute-release.AttributeIDComparator') ?: getObject('DefaultAttributeIDComparator') }" />
-
-    <bean id="PopulatePreConsentAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:auditContextCreationStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
-        p:fieldExtractors-ref="shibboleth.consent.PreConsentAuditExtractors"
-        p:formattingMap-ref="shibboleth.consent.attribute-release.AuditFormattingMap" />
-
-    <bean id="PopulateConsentContext"
-        class="net.shibboleth.idp.consent.flow.impl.PopulateConsentContext" scope="prototype"
-        c:currentConsentsFunction-ref="AttributeReleaseConsentFunction"  />
-
-    <bean id="FallbackLanguages" parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
-
-    <bean id="RevokeConsent"
-        class="net.shibboleth.idp.consent.flow.storage.impl.RevokeConsent" scope="prototype"
-        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey"
-        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey" />
-
-    <bean id="RevokeGlobalAttributeConsent"
-        class="net.shibboleth.idp.consent.flow.storage.impl.RevokeConsent" scope="prototype"
-        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey"
-        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey" />
-
-    <bean id="ReadConsentFromStorage"
-        class="net.shibboleth.idp.consent.flow.storage.impl.ReadConsentFromStorage" scope="prototype"
-        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey"
-        p:storageSerializer-ref="shibboleth.consent.ConsentSerializer" />
-
-    <bean id="ReadGlobalAttributeConsentFromStorage"
-        class="net.shibboleth.idp.consent.flow.storage.impl.ReadConsentFromStorage" scope="prototype"
-        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey" />
-
-    <bean id="PopulateConsentAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:auditContextCreationStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
-        p:fieldExtractors-ref="shibboleth.consent.ConsentAuditExtractors"
-        p:formattingMap-ref="shibboleth.consent.attribute-release.AuditFormattingMap" />
-
-    <bean id="ExtractConsent"
-        class="net.shibboleth.idp.consent.flow.impl.ExtractConsent" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <bean id="CreateResult"
-        class="net.shibboleth.idp.consent.flow.storage.impl.CreateResult" scope="prototype"
-        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey" 
-        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey"
-        p:storageSerializer-ref="shibboleth.consent.ConsentSerializer" />
-
-    <bean id="CreateGlobalConsentResult"
-        class="net.shibboleth.idp.consent.flow.storage.impl.CreateGlobalConsentResult" scope="prototype" 
-        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey"
-        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey" />
-
-    <bean id="ReleaseAttributes"
-        class="net.shibboleth.idp.consent.flow.ar.impl.ReleaseAttributes" scope="prototype" />
-
-    <bean id="WriteAttributeReleaseConsentAuditLog"
-        class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
-        p:auditContextLookupStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
-        p:formattingMap-ref="shibboleth.consent.attribute-release.AuditFormattingMap"
-        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
-        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:context="http://www.springframework.org/schema/context" xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+    default-init-method="initialize" default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <import resource="../../conf/audit-system.xml" />
+    <import resource="../../../conf/intercept/consent-intercept-config.xml" />
+
+    <bean id="AttributeReleaseConsentFunction"
+        class="net.shibboleth.idp.consent.logic.impl.AttributeReleaseConsentFunction" scope="prototype" />
+
+    <bean id="AttributeConsentFlowDescriptorLookupStrategy"
+        class="net.shibboleth.idp.consent.logic.impl.FlowDescriptorLookupFunction"
+        c:type="#{ T(net.shibboleth.idp.consent.flow.ar.impl.AttributeReleaseFlowDescriptor) }" />
+
+    <bean id="GlobalAttributeConsentPredicate"
+        class="net.shibboleth.idp.consent.logic.impl.GlobalAttributeConsentPredicate" />
+
+    <bean id="IsConsentRequiredPredicate"
+        class="net.shibboleth.idp.consent.logic.impl.IsConsentRequiredPredicate" />
+
+    <!-- Predicate used to determine if consent should be obtained for an attribute. -->
+    <bean id="AttributePredicate"
+        class="net.shibboleth.idp.consent.logic.impl.AttributePredicate"
+        p:whitelistedAttributeIds-ref="shibboleth.consent.attribute-release.WhitelistedAttributeIDs"
+        p:blacklistedAttributeIds-ref="shibboleth.consent.attribute-release.BlacklistedAttributeIDs"
+        p:attributeIdMatchExpression="#{getObject('shibboleth.consent.attribute-release.MatchExpression')}" />
+
+    <!-- Functions to return a storage key consisting of the user identifier. -->
+
+    <bean id="shibboleth.consent.PrincipalConsentStorageKey"
+        class="com.google.common.base.Functions" factory-method="compose"
+        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+        
+    <bean id="shibboleth.consent.AttributeConsentStorageKey"
+        class="net.shibboleth.idp.consent.logic.impl.AttributeValueLookupFunction"
+        c:userAttributeId="%{idp.consent.userStorageKeyAttribute:uid}" />
+        
+    <alias name="%{idp.consent.userStorageKey:shibboleth.consent.PrincipalConsentStorageKey}"
+        alias="shibboleth.consent.UserStorageKey" />
+
+    <!--
+    Function to return a storage key consisting of the user identifier and relying party ID
+    joined by a delimiter.
+    -->
+    <bean id="shibboleth.consent.UserAndRelyingPartyStorageKey"
+        class="net.shibboleth.idp.consent.logic.impl.JoinFunction"
+        c:functionA-ref="shibboleth.consent.UserStorageKey"
+        c:functionB-ref="shibboleth.RelyingPartyIdLookup.Simple" />
+
+    <!--
+    Function to return the storage key of the index record containing all storage keys
+    of the storage context.
+    -->
+    <bean id="shibboleth.consent.UserStorageIndexKey"
+        class="net.shibboleth.idp.consent.logic.impl.JoinFunction"
+        c:functionA-ref="shibboleth.consent.UserStorageKey">
+        <constructor-arg name="functionB">
+            <bean class="com.google.common.base.Functions" factory-method="constant">
+                <constructor-arg>
+                    <util:constant
+                        static-field="net.shibboleth.idp.consent.flow.storage.impl.AbstractConsentIndexedStorageAction.DEFAULT_STORAGE_INDEX_KEY" />
+                </constructor-arg>
+            </bean>
+        </constructor-arg>
+    </bean>
+
+    <!-- Serializer for consent records with symbolics support. -->
+    <bean id="shibboleth.consent.ConsentSerializer"
+        class="net.shibboleth.idp.consent.storage.impl.ConsentSerializer"
+        p:symbolics-ref="shibboleth.consent.AttributeSymbolics" />
+
+    <!-- Default comparator which orders attributes according to the whitelist. -->
+    <bean id="DefaultAttributeIDComparator"
+        class="net.shibboleth.idp.consent.logic.impl.PreferExplicitOrderComparator"
+        c:order="#{getObject('shibboleth.consent.attribute-release.AttributeDisplayOrder')}" />
+
+    <!-- Action beans -->
+
+    <bean id="InitializeConsentContext"
+        class="net.shibboleth.idp.consent.flow.impl.InitializeConsentContext" scope="prototype" />
+
+    <bean id="InitializeAttributeConsentContext"
+        class="net.shibboleth.idp.consent.flow.ar.impl.InitializeAttributeReleaseContext" scope="prototype" />
+
+    <bean id="PopulateAttributeConsentContext"
+        class="net.shibboleth.idp.consent.flow.ar.impl.PopulateAttributeReleaseContext" scope="prototype"
+        p:attributePredicate-ref="AttributePredicate"
+        p:attributeIdComparator="#{getObject('shibboleth.consent.attribute-release.AttributeIDComparator') ?: getObject('DefaultAttributeIDComparator') }" />
+
+    <bean id="PopulatePreConsentAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:auditContextCreationStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
+        p:fieldExtractors-ref="shibboleth.consent.PreConsentAuditExtractors"
+        p:formattingMap-ref="shibboleth.consent.attribute-release.AuditFormattingMap" />
+
+    <bean id="PopulateConsentContext"
+        class="net.shibboleth.idp.consent.flow.impl.PopulateConsentContext" scope="prototype"
+        c:currentConsentsFunction-ref="AttributeReleaseConsentFunction"  />
+
+    <bean id="FallbackLanguages" parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
+
+    <bean id="RevokeConsent"
+        class="net.shibboleth.idp.consent.flow.storage.impl.RevokeConsent" scope="prototype"
+        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey"
+        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey" />
+
+    <bean id="RevokeGlobalAttributeConsent"
+        class="net.shibboleth.idp.consent.flow.storage.impl.RevokeConsent" scope="prototype"
+        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey"
+        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey" />
+
+    <bean id="ReadConsentFromStorage"
+        class="net.shibboleth.idp.consent.flow.storage.impl.ReadConsentFromStorage" scope="prototype"
+        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey"
+        p:storageSerializer-ref="shibboleth.consent.ConsentSerializer" />
+
+    <bean id="ReadGlobalAttributeConsentFromStorage"
+        class="net.shibboleth.idp.consent.flow.storage.impl.ReadConsentFromStorage" scope="prototype"
+        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey" />
+
+    <bean id="PopulateConsentAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:auditContextCreationStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
+        p:fieldExtractors-ref="shibboleth.consent.ConsentAuditExtractors"
+        p:formattingMap-ref="shibboleth.consent.attribute-release.AuditFormattingMap" />
+
+    <bean id="ExtractConsent"
+        class="net.shibboleth.idp.consent.flow.impl.ExtractConsent" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <bean id="CreateResult"
+        class="net.shibboleth.idp.consent.flow.storage.impl.CreateResult" scope="prototype"
+        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey" 
+        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey"
+        p:storageSerializer-ref="shibboleth.consent.ConsentSerializer" />
+
+    <bean id="CreateGlobalConsentResult"
+        class="net.shibboleth.idp.consent.flow.storage.impl.CreateGlobalConsentResult" scope="prototype" 
+        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey"
+        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey" />
+
+    <bean id="ReleaseAttributes"
+        class="net.shibboleth.idp.consent.flow.ar.impl.ReleaseAttributes" scope="prototype" />
+
+    <bean id="WriteAttributeReleaseConsentAuditLog"
+        class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
+        p:auditContextLookupStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
+        p:formattingMap-ref="shibboleth.consent.attribute-release.AuditFormattingMap"
+        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
+        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/intercept/attribute-release-flow.xml shibboleth-idp/system/flows/intercept/attribute-release-flow.xml
--- shibboleth-idp/system/flows/intercept/attribute-release-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/attribute-release-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,220 +1,220 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="intercept.abstract">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-
-
-    <!-- Attribute consent setup. -->
-    
-    <on-start>
-        <evaluate expression="AttributeConsentFlowDescriptorLookupStrategy.apply(opensamlProfileRequestContext)"
-            result="flowScope.attributeReleaseFlowDescriptor" />
-    </on-start>
-
-    <action-state id="AttributeConsentSetup">
-        <evaluate expression="InitializeConsentContext" />
-        <evaluate expression="InitializeAttributeConsentContext" />
-        <evaluate expression="PopulateAttributeConsentContext" />
-        <evaluate expression="PopulatePreConsentAuditContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="TestForRevokeConsent" />
-    </action-state>
-
-
-    <!-- If consent revocation was requested, skip reading from storage. -->
-
-    <decision-state id="TestForRevokeConsent">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.consent.context.ConsentManagementContext), true).getRevokeConsent()"
-            then="RevokeConsent" else="ReadConsentFromStorage" />
-    </decision-state>
-
-    <!-- Revoke consent by deleting consent storage records. -->
-
-    <action-state id="RevokeConsent">
-        <evaluate expression="RevokeConsent" />
-        <evaluate expression="'ClearAttributeReleaseConsent'" />
-        
-        <transition on="ClearAttributeReleaseConsent" to="ClearAttributeReleaseConsent" />
-    </action-state>
-
-    <!-- Write 'ClearAttributeReleaseConsent' event to consent audit log. -->
-    <action-state id="ClearAttributeReleaseConsent">
-        <evaluate expression="WriteAttributeReleaseConsentAuditLog" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="TestForRevokeGlobalAttributeConsent" />
-    </action-state>
-
-    <decision-state id="TestForRevokeGlobalAttributeConsent">
-        <if test="attributeReleaseFlowDescriptor.isGlobalConsentAllowed()"
-            then="RevokeGlobalAttributeConsent" else="PopulateConsentContext" />
-    </decision-state>
-
-    <action-state id="RevokeGlobalAttributeConsent">
-        <evaluate expression="RevokeGlobalAttributeConsent" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PopulateConsentContext" />
-    </action-state>
-
-    <!-- Read consent from storage. -->
-
-    <action-state id="ReadConsentFromStorage">
-        <evaluate expression="ReadConsentFromStorage" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="TestForReadGlobalAttributeConsentFromStorage" />
-    </action-state>
-
-    <decision-state id="TestForReadGlobalAttributeConsentFromStorage">
-        <if test="attributeReleaseFlowDescriptor.globalConsentAllowed"
-            then="ReadGlobalAttributeConsentFromStorage" else="PopulateConsentContext" />
-    </decision-state>
-
-    <action-state id="ReadGlobalAttributeConsentFromStorage">
-        <evaluate expression="ReadGlobalAttributeConsentFromStorage" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="TestForGlobalAttributeConsent" />
-    </action-state>
-
-
-    <!-- If global consent has been given by user, skip the rest of the flow. -->
-    
-    <decision-state id="TestForGlobalAttributeConsent">
-        <if test="GlobalAttributeConsentPredicate.apply(opensamlProfileRequestContext)"
-            then="proceed" else="PopulateConsentContext" />
-    </decision-state>
-
-
-   <!-- Create consent objects and store in consent context. -->
-
-    <action-state id="PopulateConsentContext">
-        <evaluate expression="PopulateConsentContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="IsConsentRequired" />
-    </action-state>
-
-    <!-- If consent is required, display page. Otherwise, release attributes.  -->
-    
-    <decision-state id="IsConsentRequired">
-        <if test="IsConsentRequiredPredicate.apply(opensamlProfileRequestContext)"
-            then="DisplayAttributeReleasePage" else="ReleaseAttributes" />
-    </decision-state>
-
-
-    <!-- Display attribute release page. -->
-
-    <view-state id="DisplayAttributeReleasePage" view="#{flowRequestContext.activeFlow.id}">
-        <on-render>
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayNameFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages)" 
-                                                                                               result="viewScope.attributeDisplayNameFunction" />
-            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayDescriptionFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages)" 
-                                                                                               result="viewScope.attributeDisplayDescriptionFunction" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.consent.context.impl.ConsentContext))" result="viewScope.consentContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.consent.context.impl.AttributeReleaseContext))" result="viewScope.attributeReleaseContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext), true).getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-        </on-render>
-        <transition on="AttributeReleaseRejected" to="WriteAttributeReleaseConsentAuditLog" />
-        <transition on="proceed" to="TestForGlobalConsent" />
-    </view-state>
-
-
-    <!-- If consent was rejected by user, write to consent audit log and propagate the error event. -->
-
-    <action-state id="WriteAttributeReleaseConsentAuditLog">
-        <evaluate expression="WriteAttributeReleaseConsentAuditLog" />
-        <evaluate expression="'AttributeReleaseRejected'" />
-    </action-state>
-
-    <!-- If global consent was given by user, create appropriate storage result and end flow. -->
-
-    <decision-state id="TestForGlobalConsent">
-        <if test="requestParameters._shib_idp_consentOptions == '_shib_idp_globalConsent'"
-            then="GlobalConsent" else="ExtractConsent" />
-    </decision-state>
-
-    <action-state id="GlobalConsent">
-        <evaluate expression="CreateGlobalConsentResult" />
-        <evaluate expression="'GlobalAttributeReleaseConsent'" />
-        
-        <transition on="GlobalAttributeReleaseConsent" to="GlobalAttributeReleaseConsent" />
-    </action-state>
-
-    <!-- Write 'GlobalAttributeReleaseConsent' event to consent audit log. -->
-    <action-state id="GlobalAttributeReleaseConsent">
-        <evaluate expression="WriteAttributeReleaseConsentAuditLog" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-
-    <!-- Extract user input from form and update consent objects in consent context accordingly. -->
-
-    <action-state id="ExtractConsent">
-        <evaluate expression="ExtractConsent" />
-        <evaluate expression="'AttributeReleaseConsent'" />
-        
-        <transition on="AttributeReleaseConsent" to="AttributeReleaseConsent" />
-    </action-state>
-
-    <!-- Write 'AttributeReleaseConsent' event to consent audit log. -->
-    <action-state id="AttributeReleaseConsent">
-        <evaluate expression="PopulateConsentAuditContext" />
-        <evaluate expression="WriteAttributeReleaseConsentAuditLog" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="TestForDoNotRememberConsent" />
-    </action-state>
-
-
-    <!-- Determine whether consent should be stored or not. -->
-    
-    <decision-state id="TestForDoNotRememberConsent">
-        <if test="requestParameters._shib_idp_consentOptions == '_shib_idp_doNotRememberConsent'"
-            then="ReleaseAttributes" else="CreateResult" />
-    </decision-state>
-
-
-    <!-- Create result to be stored by interceptor flow. -->
-
-    <action-state id="CreateResult">
-        <evaluate expression="CreateResult" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReleaseAttributes" />
-    </action-state>
-
-
-    <!-- Release attributes consented to as well as non-consentable attributes from attribute context. -->
-    
-    <action-state id="ReleaseAttributes">
-        <evaluate expression="ReleaseAttributes" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <end-state id="proceed" />
-
-
-    <global-transitions>
-        <!-- Catch "InvalidAttributeContext" and short-circuit this intercept flow. -->
-        <transition on="InvalidAttributeContext" to="proceed" />
-    </global-transitions>
-
-    <bean-import resource="../../../system/flows/intercept/attribute-release-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="intercept.abstract">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+
+
+    <!-- Attribute consent setup. -->
+    
+    <on-start>
+        <evaluate expression="AttributeConsentFlowDescriptorLookupStrategy.apply(opensamlProfileRequestContext)"
+            result="flowScope.attributeReleaseFlowDescriptor" />
+    </on-start>
+
+    <action-state id="AttributeConsentSetup">
+        <evaluate expression="InitializeConsentContext" />
+        <evaluate expression="InitializeAttributeConsentContext" />
+        <evaluate expression="PopulateAttributeConsentContext" />
+        <evaluate expression="PopulatePreConsentAuditContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="TestForRevokeConsent" />
+    </action-state>
+
+
+    <!-- If consent revocation was requested, skip reading from storage. -->
+
+    <decision-state id="TestForRevokeConsent">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.consent.context.ConsentManagementContext), true).getRevokeConsent()"
+            then="RevokeConsent" else="ReadConsentFromStorage" />
+    </decision-state>
+
+    <!-- Revoke consent by deleting consent storage records. -->
+
+    <action-state id="RevokeConsent">
+        <evaluate expression="RevokeConsent" />
+        <evaluate expression="'ClearAttributeReleaseConsent'" />
+        
+        <transition on="ClearAttributeReleaseConsent" to="ClearAttributeReleaseConsent" />
+    </action-state>
+
+    <!-- Write 'ClearAttributeReleaseConsent' event to consent audit log. -->
+    <action-state id="ClearAttributeReleaseConsent">
+        <evaluate expression="WriteAttributeReleaseConsentAuditLog" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="TestForRevokeGlobalAttributeConsent" />
+    </action-state>
+
+    <decision-state id="TestForRevokeGlobalAttributeConsent">
+        <if test="attributeReleaseFlowDescriptor.isGlobalConsentAllowed()"
+            then="RevokeGlobalAttributeConsent" else="PopulateConsentContext" />
+    </decision-state>
+
+    <action-state id="RevokeGlobalAttributeConsent">
+        <evaluate expression="RevokeGlobalAttributeConsent" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PopulateConsentContext" />
+    </action-state>
+
+    <!-- Read consent from storage. -->
+
+    <action-state id="ReadConsentFromStorage">
+        <evaluate expression="ReadConsentFromStorage" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="TestForReadGlobalAttributeConsentFromStorage" />
+    </action-state>
+
+    <decision-state id="TestForReadGlobalAttributeConsentFromStorage">
+        <if test="attributeReleaseFlowDescriptor.globalConsentAllowed"
+            then="ReadGlobalAttributeConsentFromStorage" else="PopulateConsentContext" />
+    </decision-state>
+
+    <action-state id="ReadGlobalAttributeConsentFromStorage">
+        <evaluate expression="ReadGlobalAttributeConsentFromStorage" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="TestForGlobalAttributeConsent" />
+    </action-state>
+
+
+    <!-- If global consent has been given by user, skip the rest of the flow. -->
+    
+    <decision-state id="TestForGlobalAttributeConsent">
+        <if test="GlobalAttributeConsentPredicate.apply(opensamlProfileRequestContext)"
+            then="proceed" else="PopulateConsentContext" />
+    </decision-state>
+
+
+   <!-- Create consent objects and store in consent context. -->
+
+    <action-state id="PopulateConsentContext">
+        <evaluate expression="PopulateConsentContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="IsConsentRequired" />
+    </action-state>
+
+    <!-- If consent is required, display page. Otherwise, release attributes.  -->
+    
+    <decision-state id="IsConsentRequired">
+        <if test="IsConsentRequiredPredicate.apply(opensamlProfileRequestContext)"
+            then="DisplayAttributeReleasePage" else="ReleaseAttributes" />
+    </decision-state>
+
+
+    <!-- Display attribute release page. -->
+
+    <view-state id="DisplayAttributeReleasePage" view="#{flowRequestContext.activeFlow.id}">
+        <on-render>
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayNameFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages)" 
+                                                                                               result="viewScope.attributeDisplayNameFunction" />
+            <evaluate expression="new net.shibboleth.idp.consent.logic.impl.AttributeDisplayDescriptionFunction(flowRequestContext.getExternalContext().getNativeRequest(), FallbackLanguages)" 
+                                                                                               result="viewScope.attributeDisplayDescriptionFunction" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.consent.context.impl.ConsentContext))" result="viewScope.consentContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.consent.context.impl.AttributeReleaseContext))" result="viewScope.attributeReleaseContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext), true).getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+        </on-render>
+        <transition on="AttributeReleaseRejected" to="WriteAttributeReleaseConsentAuditLog" />
+        <transition on="proceed" to="TestForGlobalConsent" />
+    </view-state>
+
+
+    <!-- If consent was rejected by user, write to consent audit log and propagate the error event. -->
+
+    <action-state id="WriteAttributeReleaseConsentAuditLog">
+        <evaluate expression="WriteAttributeReleaseConsentAuditLog" />
+        <evaluate expression="'AttributeReleaseRejected'" />
+    </action-state>
+
+    <!-- If global consent was given by user, create appropriate storage result and end flow. -->
+
+    <decision-state id="TestForGlobalConsent">
+        <if test="requestParameters._shib_idp_consentOptions == '_shib_idp_globalConsent'"
+            then="GlobalConsent" else="ExtractConsent" />
+    </decision-state>
+
+    <action-state id="GlobalConsent">
+        <evaluate expression="CreateGlobalConsentResult" />
+        <evaluate expression="'GlobalAttributeReleaseConsent'" />
+        
+        <transition on="GlobalAttributeReleaseConsent" to="GlobalAttributeReleaseConsent" />
+    </action-state>
+
+    <!-- Write 'GlobalAttributeReleaseConsent' event to consent audit log. -->
+    <action-state id="GlobalAttributeReleaseConsent">
+        <evaluate expression="WriteAttributeReleaseConsentAuditLog" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+
+    <!-- Extract user input from form and update consent objects in consent context accordingly. -->
+
+    <action-state id="ExtractConsent">
+        <evaluate expression="ExtractConsent" />
+        <evaluate expression="'AttributeReleaseConsent'" />
+        
+        <transition on="AttributeReleaseConsent" to="AttributeReleaseConsent" />
+    </action-state>
+
+    <!-- Write 'AttributeReleaseConsent' event to consent audit log. -->
+    <action-state id="AttributeReleaseConsent">
+        <evaluate expression="PopulateConsentAuditContext" />
+        <evaluate expression="WriteAttributeReleaseConsentAuditLog" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="TestForDoNotRememberConsent" />
+    </action-state>
+
+
+    <!-- Determine whether consent should be stored or not. -->
+    
+    <decision-state id="TestForDoNotRememberConsent">
+        <if test="requestParameters._shib_idp_consentOptions == '_shib_idp_doNotRememberConsent'"
+            then="ReleaseAttributes" else="CreateResult" />
+    </decision-state>
+
+
+    <!-- Create result to be stored by interceptor flow. -->
+
+    <action-state id="CreateResult">
+        <evaluate expression="CreateResult" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReleaseAttributes" />
+    </action-state>
+
+
+    <!-- Release attributes consented to as well as non-consentable attributes from attribute context. -->
+    
+    <action-state id="ReleaseAttributes">
+        <evaluate expression="ReleaseAttributes" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <end-state id="proceed" />
+
+
+    <global-transitions>
+        <!-- Catch "InvalidAttributeContext" and short-circuit this intercept flow. -->
+        <transition on="InvalidAttributeContext" to="proceed" />
+    </global-transitions>
+
+    <bean-import resource="../../../system/flows/intercept/attribute-release-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/intercept/context-check-beans.xml shibboleth-idp/system/flows/intercept/context-check-beans.xml
--- shibboleth-idp/system/flows/intercept/context-check-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/context-check-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,25 +1,25 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"       
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-       
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <import resource="../../../conf/intercept/context-check-intercept-config.xml" />
-
-    <alias name="shibboleth.context-check.Condition" alias="ContextCheckPredicate"/>
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"       
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+       
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <import resource="../../../conf/intercept/context-check-intercept-config.xml" />
+
+    <alias name="shibboleth.context-check.Condition" alias="ContextCheckPredicate"/>
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/intercept/context-check-flow.xml shibboleth-idp/system/flows/intercept/context-check-flow.xml
--- shibboleth-idp/system/flows/intercept/context-check-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/context-check-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,13 +1,13 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="intercept.abstract">
-
-    <decision-state id="CheckContext">
-        <if test="ContextCheckPredicate.apply(opensamlProfileRequestContext)"
-            then="proceed" else="ContextCheckDenied" />
-    </decision-state>
-    
-    <bean-import resource="../../../system/flows/intercept/context-check-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="intercept.abstract">
+
+    <decision-state id="CheckContext">
+        <if test="ContextCheckPredicate.apply(opensamlProfileRequestContext)"
+            then="proceed" else="ContextCheckDenied" />
+    </decision-state>
+    
+    <bean-import resource="../../../system/flows/intercept/context-check-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/intercept/expiring-password-beans.xml shibboleth-idp/system/flows/intercept/expiring-password-beans.xml
--- shibboleth-idp/system/flows/intercept/expiring-password-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/expiring-password-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,29 +1,29 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"       
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-       
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <import resource="../../../conf/intercept/expiring-password-intercept-config.xml" />
-
-    <!-- Simplifies flow definition expressions. -->
-    <alias name="shibboleth.expiring-password.Condition" alias="ExpiringPasswordPredicate"/>
-    <alias name="shibboleth.PersistentCookieManager" alias="ExpiringPasswordCookieManager" />
-    <alias name="shibboleth.expiring-password.NotifyCookieName" alias="ExpiringPasswordCookieName" />
-    <alias name="shibboleth.expiring-password.NotifyInterval" alias="ExpiringPasswordNotifyInterval" />
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"       
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+       
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <import resource="../../../conf/intercept/expiring-password-intercept-config.xml" />
+
+    <!-- Simplifies flow definition expressions. -->
+    <alias name="shibboleth.expiring-password.Condition" alias="ExpiringPasswordPredicate"/>
+    <alias name="shibboleth.PersistentCookieManager" alias="ExpiringPasswordCookieManager" />
+    <alias name="shibboleth.expiring-password.NotifyCookieName" alias="ExpiringPasswordCookieName" />
+    <alias name="shibboleth.expiring-password.NotifyInterval" alias="ExpiringPasswordNotifyInterval" />
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/intercept/expiring-password-flow.xml shibboleth-idp/system/flows/intercept/expiring-password-flow.xml
--- shibboleth-idp/system/flows/intercept/expiring-password-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/expiring-password-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,49 +1,49 @@
- <flow xmlns="http://www.springframework.org/schema/webflow"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-       parent="intercept.abstract">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-
-    <!-- If the condition is true, we don't need to notify, otherwise check cookie to see if we do. -->
-    <decision-state id="CheckContext">
-        <if test="ExpiringPasswordPredicate.apply(opensamlProfileRequestContext)"
-            then="ShouldUnsetCookie" else="CheckCookie" />
-    </decision-state>
-
-    <decision-state id="ShouldUnsetCookie">
-        <if test="ExpiringPasswordCookieManager.getCookieValue(ExpiringPasswordCookieName, null) != null"
-            then="UnsetCookie" else="proceed" />
-    </decision-state>
-
-    <action-state id="UnsetCookie">
-        <evaluate expression="ExpiringPasswordCookieManager.unsetCookie(ExpiringPasswordCookieName)" />
-        <transition to="proceed" />
-    </action-state>
-
-    <decision-state id="CheckCookie">
-        <if test="T(java.lang.System).currentTimeMillis() - T(java.lang.Long).parseLong(ExpiringPasswordCookieManager.getCookieValue(ExpiringPasswordCookieName, '0')) > ExpiringPasswordNotifyInterval"
-            then="DisplayExpiringPasswordView" else="proceed" />
-    </decision-state>
-
-    <view-state id="DisplayExpiringPasswordView" view="#{flowRequestContext.activeFlow.id}">
-        <on-render>
-            <evaluate expression="ExpiringPasswordCookieManager.addCookie(ExpiringPasswordCookieName, T(java.lang.Long).toString(T(java.lang.System).currentTimeMillis()))" />
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-        </on-render>
-        
-        <transition to="proceed" />
-    </view-state>
-
-    <end-state id="proceed" />
-
-    <bean-import resource="../../../system/flows/intercept/expiring-password-beans.xml" />
-
-</flow>
+ <flow xmlns="http://www.springframework.org/schema/webflow"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+       parent="intercept.abstract">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+
+    <!-- If the condition is true, we don't need to notify, otherwise check cookie to see if we do. -->
+    <decision-state id="CheckContext">
+        <if test="ExpiringPasswordPredicate.apply(opensamlProfileRequestContext)"
+            then="ShouldUnsetCookie" else="CheckCookie" />
+    </decision-state>
+
+    <decision-state id="ShouldUnsetCookie">
+        <if test="ExpiringPasswordCookieManager.getCookieValue(ExpiringPasswordCookieName, null) != null"
+            then="UnsetCookie" else="proceed" />
+    </decision-state>
+
+    <action-state id="UnsetCookie">
+        <evaluate expression="ExpiringPasswordCookieManager.unsetCookie(ExpiringPasswordCookieName)" />
+        <transition to="proceed" />
+    </action-state>
+
+    <decision-state id="CheckCookie">
+        <if test="T(java.lang.System).currentTimeMillis() - T(java.lang.Long).parseLong(ExpiringPasswordCookieManager.getCookieValue(ExpiringPasswordCookieName, '0')) > ExpiringPasswordNotifyInterval"
+            then="DisplayExpiringPasswordView" else="proceed" />
+    </decision-state>
+
+    <view-state id="DisplayExpiringPasswordView" view="#{flowRequestContext.activeFlow.id}">
+        <on-render>
+            <evaluate expression="ExpiringPasswordCookieManager.addCookie(ExpiringPasswordCookieName, T(java.lang.Long).toString(T(java.lang.System).currentTimeMillis()))" />
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+        </on-render>
+        
+        <transition to="proceed" />
+    </view-state>
+
+    <end-state id="proceed" />
+
+    <bean-import resource="../../../system/flows/intercept/expiring-password-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/intercept/intercept-abstract-flow.xml shibboleth-idp/system/flows/intercept/intercept-abstract-flow.xml
--- shibboleth-idp/system/flows/intercept/intercept-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/intercept-abstract-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,43 +1,43 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      abstract="true" parent="intercept.events">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-
-    <!-- Defines the possible end-state events, and a global transition rule. -->
-
-    <!-- Successful completion of subflow. -->
-    <end-state id="proceed" />
-
-    <!-- Error events to reflect back from this subflow. -->
-    <end-state id="InvalidProfileContext" />
-    <end-state id="MessageExpired" />
-    <end-state id="MessageReplay" />
-    <end-state id="MessageAuthenticationError" />
-    <end-state id="AttributeReleaseRejected" />
-    <end-state id="TermsRejected" />
-    <end-state id="ContextCheckDenied" />
-    <end-state id="RestartAuthentication" />
-    <end-state id="RuntimeException" />
-
-    <action-state id="LogRuntimeException">
-        <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile.interceptor').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        <transition to="RuntimeException" />
-    </action-state>
-
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
-        <transition on="MessageExpired" to="MessageExpired" />
-        <transition on="MessageReplay" to="MessageReplay" />
-        <transition on="MessageAuthenticationError" to="MessageAuthenticationError" />
-        <transition on="AttributeReleaseRejected" to="AttributeReleaseRejected" />
-        <transition on="TermsRejected" to="TermsRejected" />
-        <transition on="ContextCheckDenied" to="ContextCheckDenied" />
-        <transition on="RestartAuthentication" to="RestartAuthentication" />
-        <transition on="RuntimeException" to="RuntimeException" />
-    </global-transitions>
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      abstract="true" parent="intercept.events">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+
+    <!-- Defines the possible end-state events, and a global transition rule. -->
+
+    <!-- Successful completion of subflow. -->
+    <end-state id="proceed" />
+
+    <!-- Error events to reflect back from this subflow. -->
+    <end-state id="InvalidProfileContext" />
+    <end-state id="MessageExpired" />
+    <end-state id="MessageReplay" />
+    <end-state id="MessageAuthenticationError" />
+    <end-state id="AttributeReleaseRejected" />
+    <end-state id="TermsRejected" />
+    <end-state id="ContextCheckDenied" />
+    <end-state id="RestartAuthentication" />
+    <end-state id="RuntimeException" />
+
+    <action-state id="LogRuntimeException">
+        <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile.interceptor').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        <transition to="RuntimeException" />
+    </action-state>
+
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
+        <transition on="MessageExpired" to="MessageExpired" />
+        <transition on="MessageReplay" to="MessageReplay" />
+        <transition on="MessageAuthenticationError" to="MessageAuthenticationError" />
+        <transition on="AttributeReleaseRejected" to="AttributeReleaseRejected" />
+        <transition on="TermsRejected" to="TermsRejected" />
+        <transition on="ContextCheckDenied" to="ContextCheckDenied" />
+        <transition on="RestartAuthentication" to="RestartAuthentication" />
+        <transition on="RuntimeException" to="RuntimeException" />
+    </global-transitions>
+
+</flow>
diff -rupN shibboleth-idp/system/flows/intercept/intercept-beans.xml shibboleth-idp/system/flows/intercept/intercept-beans.xml
--- shibboleth-idp/system/flows/intercept/intercept-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/intercept-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,30 +1,30 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"       
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-    
-    <bean id="FilterFlowsByNonBrowserSupport"
-        class="net.shibboleth.idp.profile.interceptor.impl.FilterFlowsByNonBrowserSupport" scope="prototype" />
-
-    <bean id="SelectInterceptFlow"
-        class="net.shibboleth.idp.profile.interceptor.impl.SelectProfileInterceptorFlow" scope="prototype" />
-
-    <bean id="WriteResultToStorage"
-        class="net.shibboleth.idp.profile.interceptor.impl.WriteProfileInterceptorResultToStorage" scope="prototype" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"       
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+    
+    <bean id="FilterFlowsByNonBrowserSupport"
+        class="net.shibboleth.idp.profile.interceptor.impl.FilterFlowsByNonBrowserSupport" scope="prototype" />
+
+    <bean id="SelectInterceptFlow"
+        class="net.shibboleth.idp.profile.interceptor.impl.SelectProfileInterceptorFlow" scope="prototype" />
+
+    <bean id="WriteResultToStorage"
+        class="net.shibboleth.idp.profile.interceptor.impl.WriteProfileInterceptorResultToStorage" scope="prototype" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/intercept/intercept-flow.xml shibboleth-idp/system/flows/intercept/intercept-flow.xml
--- shibboleth-idp/system/flows/intercept/intercept-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/intercept-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,43 +1,43 @@
-<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="intercept.abstract">
-
-    <!--
-    This is the intercept subflow. It handles invocation of all context-populated intercept subflows
-    before returning control to the calling (profile) flow.
-    -->
-
-    <!--
-    The select action is the "dispatching" step. Anything starting with "intercept/"
-    is a flow descriptor that we send control to. If there are no flows available or
-    remaining to be executed, control passes back to the calling (profile) flow.
-    -->
-    <action-state id="SelectInterceptFlow">
-        <evaluate expression="FilterFlowsByNonBrowserSupport" />
-        <evaluate expression="SelectInterceptFlow" />
-        <evaluate expression="'proceed'" />
-
-        <!-- Call a subflow with the same ID as the event. -->
-        <transition on="#{currentEvent.id.startsWith('intercept/')}" to="CallInterceptFlow" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <!--
-    This invokes a flow. Anything but proceed is an error, otherwise control passes
-    back to this flow to select another flow to be executed.
-    -->
-    <subflow-state id="CallInterceptFlow" subflow="#{currentEvent.id}">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="WriteResultToStorage" />
-    </subflow-state>
-    
-    <action-state id="WriteResultToStorage">
-        <evaluate expression="WriteResultToStorage" />
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="SelectInterceptFlow" />
-    </action-state>
-
-    <bean-import resource="intercept-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="intercept.abstract">
+
+    <!--
+    This is the intercept subflow. It handles invocation of all context-populated intercept subflows
+    before returning control to the calling (profile) flow.
+    -->
+
+    <!--
+    The select action is the "dispatching" step. Anything starting with "intercept/"
+    is a flow descriptor that we send control to. If there are no flows available or
+    remaining to be executed, control passes back to the calling (profile) flow.
+    -->
+    <action-state id="SelectInterceptFlow">
+        <evaluate expression="FilterFlowsByNonBrowserSupport" />
+        <evaluate expression="SelectInterceptFlow" />
+        <evaluate expression="'proceed'" />
+
+        <!-- Call a subflow with the same ID as the event. -->
+        <transition on="#{currentEvent.id.startsWith('intercept/')}" to="CallInterceptFlow" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <!--
+    This invokes a flow. Anything but proceed is an error, otherwise control passes
+    back to this flow to select another flow to be executed.
+    -->
+    <subflow-state id="CallInterceptFlow" subflow="#{currentEvent.id}">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="WriteResultToStorage" />
+    </subflow-state>
+    
+    <action-state id="WriteResultToStorage">
+        <evaluate expression="WriteResultToStorage" />
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="SelectInterceptFlow" />
+    </action-state>
+
+    <bean-import resource="intercept-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/intercept/terms-of-use-beans.xml shibboleth-idp/system/flows/intercept/terms-of-use-beans.xml
--- shibboleth-idp/system/flows/intercept/terms-of-use-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/terms-of-use-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,106 +1,106 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xmlns:context="http://www.springframework.org/schema/context" xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-
-    default-init-method="initialize" default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <import resource="../../conf/audit-system.xml" />
-    <import resource="../../../conf/intercept/consent-intercept-config.xml" />
-
-    <bean id="TermsOfUseConsentFunction"
-        class="net.shibboleth.idp.consent.logic.impl.MessageSourceConsentFunction"
-        p:consentKeyLookupStrategy-ref="shibboleth.consent.terms-of-use.Key" />
-
-    <bean id="IsConsentRequiredPredicate"
-        class="net.shibboleth.idp.consent.logic.impl.IsConsentRequiredPredicate" />
-
-    <!-- Functions to return part of the storage key consisting of the user identifier. -->
-    
-    <bean id="shibboleth.consent.PrincipalConsentStorageKey"
-        class="com.google.common.base.Functions" factory-method="compose"
-        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
-        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
-        
-    <bean id="shibboleth.consent.AttributeConsentStorageKey"
-        class="net.shibboleth.idp.consent.logic.impl.AttributeValueLookupFunction"
-        c:userAttributeId="%{idp.consent.userStorageKeyAttribute:uid}" />
-        
-    <alias name="%{idp.consent.userStorageKey:shibboleth.consent.PrincipalConsentStorageKey}"
-        alias="shibboleth.consent.UserStorageKey" />
-
-    <!--
-    Function to return the full storage key combining the user identifier and a consent key
-    joined by a delimiter.
-    -->
-    <bean id="shibboleth.consent.UserAndTermsStorageKey"
-        class="net.shibboleth.idp.consent.logic.impl.JoinFunction"
-        c:functionA-ref="shibboleth.consent.UserStorageKey"
-        c:functionB-ref="shibboleth.consent.terms-of-use.Key" />
-
-    <!--
-    Function to return the storage key of the index record containing all storage keys
-    of the storage context.
-    -->
-    <bean id="shibboleth.consent.UserStorageIndexKey"
-        class="net.shibboleth.idp.consent.logic.impl.JoinFunction"
-        c:functionA-ref="shibboleth.consent.UserStorageKey">
-        <constructor-arg name="functionB">
-            <bean class="com.google.common.base.Functions" factory-method="constant">
-                <constructor-arg>
-                    <util:constant
-                        static-field="net.shibboleth.idp.consent.flow.storage.impl.AbstractConsentIndexedStorageAction.DEFAULT_STORAGE_INDEX_KEY" />
-                </constructor-arg>
-            </bean>
-        </constructor-arg>
-    </bean>
-
-    <!-- Action beans -->
-    
-    <bean id="InitializeConsentContext"
-        class="net.shibboleth.idp.consent.flow.impl.InitializeConsentContext" scope="prototype" />
-
-    <bean id="PopulateConsentContext"
-        class="net.shibboleth.idp.consent.flow.impl.PopulateConsentContext" scope="prototype"
-        c:currentConsentsFunction-ref="TermsOfUseConsentFunction"  />
-        
-    <bean id="PopulatePreConsentAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:auditContextCreationStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
-        p:fieldExtractors-ref="shibboleth.consent.PreConsentAuditExtractors"
-        p:formattingMap-ref="shibboleth.consent.terms-of-use.AuditFormattingMap" />
-
-    <bean id="ReadConsentFromStorage"
-        class="net.shibboleth.idp.consent.flow.storage.impl.ReadConsentFromStorage" scope="prototype"
-        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndTermsStorageKey" />
-
-    <bean id="ExtractConsent"
-        class="net.shibboleth.idp.consent.flow.impl.ExtractConsent" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <bean id="CreateResult"
-        class="net.shibboleth.idp.consent.flow.storage.impl.CreateResult" scope="prototype"
-        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndTermsStorageKey"
-        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey" />
-
-    <bean id="PopulateConsentAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:auditContextCreationStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
-        p:fieldExtractors-ref="shibboleth.consent.ConsentAuditExtractors"
-        p:formattingMap-ref="shibboleth.consent.terms-of-use.AuditFormattingMap" />
-
-    <bean id="WriteConsentAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
-        p:auditContextLookupStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
-        p:formattingMap-ref="shibboleth.consent.terms-of-use.AuditFormattingMap"
-        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
-        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xmlns:context="http://www.springframework.org/schema/context" xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+
+    default-init-method="initialize" default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <import resource="../../conf/audit-system.xml" />
+    <import resource="../../../conf/intercept/consent-intercept-config.xml" />
+
+    <bean id="TermsOfUseConsentFunction"
+        class="net.shibboleth.idp.consent.logic.impl.MessageSourceConsentFunction"
+        p:consentKeyLookupStrategy-ref="shibboleth.consent.terms-of-use.Key" />
+
+    <bean id="IsConsentRequiredPredicate"
+        class="net.shibboleth.idp.consent.logic.impl.IsConsentRequiredPredicate" />
+
+    <!-- Functions to return part of the storage key consisting of the user identifier. -->
+    
+    <bean id="shibboleth.consent.PrincipalConsentStorageKey"
+        class="com.google.common.base.Functions" factory-method="compose"
+        c:g-ref="shibboleth.PrincipalNameLookup.Subject"
+        c:f-ref="shibboleth.ChildLookup.SubjectContext" />
+        
+    <bean id="shibboleth.consent.AttributeConsentStorageKey"
+        class="net.shibboleth.idp.consent.logic.impl.AttributeValueLookupFunction"
+        c:userAttributeId="%{idp.consent.userStorageKeyAttribute:uid}" />
+        
+    <alias name="%{idp.consent.userStorageKey:shibboleth.consent.PrincipalConsentStorageKey}"
+        alias="shibboleth.consent.UserStorageKey" />
+
+    <!--
+    Function to return the full storage key combining the user identifier and a consent key
+    joined by a delimiter.
+    -->
+    <bean id="shibboleth.consent.UserAndTermsStorageKey"
+        class="net.shibboleth.idp.consent.logic.impl.JoinFunction"
+        c:functionA-ref="shibboleth.consent.UserStorageKey"
+        c:functionB-ref="shibboleth.consent.terms-of-use.Key" />
+
+    <!--
+    Function to return the storage key of the index record containing all storage keys
+    of the storage context.
+    -->
+    <bean id="shibboleth.consent.UserStorageIndexKey"
+        class="net.shibboleth.idp.consent.logic.impl.JoinFunction"
+        c:functionA-ref="shibboleth.consent.UserStorageKey">
+        <constructor-arg name="functionB">
+            <bean class="com.google.common.base.Functions" factory-method="constant">
+                <constructor-arg>
+                    <util:constant
+                        static-field="net.shibboleth.idp.consent.flow.storage.impl.AbstractConsentIndexedStorageAction.DEFAULT_STORAGE_INDEX_KEY" />
+                </constructor-arg>
+            </bean>
+        </constructor-arg>
+    </bean>
+
+    <!-- Action beans -->
+    
+    <bean id="InitializeConsentContext"
+        class="net.shibboleth.idp.consent.flow.impl.InitializeConsentContext" scope="prototype" />
+
+    <bean id="PopulateConsentContext"
+        class="net.shibboleth.idp.consent.flow.impl.PopulateConsentContext" scope="prototype"
+        c:currentConsentsFunction-ref="TermsOfUseConsentFunction"  />
+        
+    <bean id="PopulatePreConsentAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:auditContextCreationStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
+        p:fieldExtractors-ref="shibboleth.consent.PreConsentAuditExtractors"
+        p:formattingMap-ref="shibboleth.consent.terms-of-use.AuditFormattingMap" />
+
+    <bean id="ReadConsentFromStorage"
+        class="net.shibboleth.idp.consent.flow.storage.impl.ReadConsentFromStorage" scope="prototype"
+        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndTermsStorageKey" />
+
+    <bean id="ExtractConsent"
+        class="net.shibboleth.idp.consent.flow.impl.ExtractConsent" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <bean id="CreateResult"
+        class="net.shibboleth.idp.consent.flow.storage.impl.CreateResult" scope="prototype"
+        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndTermsStorageKey"
+        p:storageIndexKeyLookupStrategy-ref="shibboleth.consent.UserStorageIndexKey" />
+
+    <bean id="PopulateConsentAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:auditContextCreationStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
+        p:fieldExtractors-ref="shibboleth.consent.ConsentAuditExtractors"
+        p:formattingMap-ref="shibboleth.consent.terms-of-use.AuditFormattingMap" />
+
+    <bean id="WriteConsentAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
+        p:auditContextLookupStrategy-ref="shibboleth.consent.ChildLookup.ConsentAuditContext"
+        p:formattingMap-ref="shibboleth.consent.terms-of-use.AuditFormattingMap"
+        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
+        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/intercept/terms-of-use-flow.xml shibboleth-idp/system/flows/intercept/terms-of-use-flow.xml
--- shibboleth-idp/system/flows/intercept/terms-of-use-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/intercept/terms-of-use-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,73 +1,73 @@
- <flow xmlns="http://www.springframework.org/schema/webflow"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-       parent="intercept.abstract">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-
-    <action-state id="TermsOfUseSetup">
-        <evaluate expression="InitializeConsentContext" />
-        <evaluate expression="PopulateConsentContext" />
-        <evaluate expression="PopulatePreConsentAuditContext" />
-        <evaluate expression="ReadConsentFromStorage" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="IsConsentRequired" />
-    </action-state>
-    
-   <decision-state id="IsConsentRequired">
-        <if test="IsConsentRequiredPredicate.apply(opensamlProfileRequestContext)" then="DisplayTermsOfUsePage" else="proceed" />
-    </decision-state>
-
-    <view-state id="DisplayTermsOfUsePage" view="#{flowRequestContext.activeFlow.id}">
-        <on-render>
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext), true).getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.consent.context.impl.ConsentContext)).getCurrentConsents().keySet().iterator().next()" result="viewScope.termsOfUseId" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-        </on-render>
-        <transition on="TermsRejected" to="AuditTermsRejected" />
-        <transition on="proceed" to="TestForCheckbox" />
-    </view-state>
-    
-    <decision-state id="TestForCheckbox">
-        <if test="requestParameters._shib_idp_consentIds != null" then="ExtractConsent" else="RequireCheckbox" />
-    </decision-state>
-    
-    <action-state id="RequireCheckbox">
-        <evaluate expression="true" result="flowScope.requireCheckbox" />
-        <transition to="DisplayTermsOfUsePage" />
-    </action-state>
-    
-    <action-state id="ExtractConsent">
-        <evaluate expression="ExtractConsent" />
-        <evaluate expression="CreateResult" />
-        <!-- Set the event ID to 'TermsAccepted' for auditing. -->
-        <evaluate expression="'TermsAccepted'" />
-        
-        <transition on="TermsAccepted" to="TermsAccepted" />
-    </action-state>
-
-    <action-state id="TermsAccepted">
-        <evaluate expression="PopulateConsentAuditContext" />
-        <evaluate expression="WriteConsentAuditLog" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <action-state id="AuditTermsRejected">
-        <evaluate expression="PopulateConsentAuditContext" />
-        <evaluate expression="WriteConsentAuditLog" />
-        <!-- Next state will be 'TermsRejected' since that is the event ID. -->
-    </action-state>
-
-    <end-state id="proceed" />
-
-    <bean-import resource="../../../system/flows/intercept/terms-of-use-beans.xml" />
-
-</flow>
+ <flow xmlns="http://www.springframework.org/schema/webflow"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+       parent="intercept.abstract">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+
+    <action-state id="TermsOfUseSetup">
+        <evaluate expression="InitializeConsentContext" />
+        <evaluate expression="PopulateConsentContext" />
+        <evaluate expression="PopulatePreConsentAuditContext" />
+        <evaluate expression="ReadConsentFromStorage" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="IsConsentRequired" />
+    </action-state>
+    
+   <decision-state id="IsConsentRequired">
+        <if test="IsConsentRequiredPredicate.apply(opensamlProfileRequestContext)" then="DisplayTermsOfUsePage" else="proceed" />
+    </decision-state>
+
+    <view-state id="DisplayTermsOfUsePage" view="#{flowRequestContext.activeFlow.id}">
+        <on-render>
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext), true).getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.consent.context.impl.ConsentContext)).getCurrentConsents().keySet().iterator().next()" result="viewScope.termsOfUseId" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+        </on-render>
+        <transition on="TermsRejected" to="AuditTermsRejected" />
+        <transition on="proceed" to="TestForCheckbox" />
+    </view-state>
+    
+    <decision-state id="TestForCheckbox">
+        <if test="requestParameters._shib_idp_consentIds != null" then="ExtractConsent" else="RequireCheckbox" />
+    </decision-state>
+    
+    <action-state id="RequireCheckbox">
+        <evaluate expression="true" result="flowScope.requireCheckbox" />
+        <transition to="DisplayTermsOfUsePage" />
+    </action-state>
+    
+    <action-state id="ExtractConsent">
+        <evaluate expression="ExtractConsent" />
+        <evaluate expression="CreateResult" />
+        <!-- Set the event ID to 'TermsAccepted' for auditing. -->
+        <evaluate expression="'TermsAccepted'" />
+        
+        <transition on="TermsAccepted" to="TermsAccepted" />
+    </action-state>
+
+    <action-state id="TermsAccepted">
+        <evaluate expression="PopulateConsentAuditContext" />
+        <evaluate expression="WriteConsentAuditLog" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <action-state id="AuditTermsRejected">
+        <evaluate expression="PopulateConsentAuditContext" />
+        <evaluate expression="WriteConsentAuditLog" />
+        <!-- Next state will be 'TermsRejected' since that is the event ID. -->
+    </action-state>
+
+    <end-state id="proceed" />
+
+    <bean-import resource="../../../system/flows/intercept/terms-of-use-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/logout/logout-beans.xml shibboleth-idp/system/flows/logout/logout-beans.xml
--- shibboleth-idp/system/flows/logout/logout-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/logout/logout-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,129 +1,129 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
-    <import resource="../../conf/audit-system.xml" />
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="http://shibboleth.net/ns/profiles/logout"
-        p:loggingId="%{idp.service.logging.logout:Logout}"
-        p:browserProfile="true" />
-
-    <bean id="PopulateMetricContext"
-        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
-        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
-
-    <bean id="PopulateUserAgentContext"
-          class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
-          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <bean id="PopulateClientStorageLoadContext"
-        class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext" scope="prototype"
-        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-    <bean id="ProcessLogout"
-        class="net.shibboleth.idp.session.impl.ProcessLogout" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
-        p:sessionManager-ref="shibboleth.SessionManager"
-        p:sessionResolver-ref="shibboleth.SessionManager" />
-    
-    <bean id="PopulateClientStorageSaveContext"
-        class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext" scope="prototype"
-        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-    
-    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.LogoutAuditExtractors') ?: getObject('shibboleth.DefaultLogoutAuditExtractors')}" />
-        
-    <bean id="PopulateMultiRPContextFromLogoutContext"
-        class="net.shibboleth.idp.session.impl.PopulateMultiRPContextFromLogoutContext" scope="prototype"
-        p:activationCondition="%{idp.logout.elaboration:false}"
-        p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
-        p:sessionTypeProtocolMap-ref="shibboleth.SessionTypeProtocolMap" />
-        
-    <bean id="SetRPUIInformation"
-            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
-            p:activationCondition="%{idp.logout.elaboration:false}"
-            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
-        <property name="fallbackLanguages">
-            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
-        </property>
-        <property name="metadataContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose">
-                <constructor-arg name="g">
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <ref bean="shibboleth.ChildLookup.SAMLMetadataContext" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
-                        </constructor-arg>
-                    </bean>
-                </constructor-arg>
-                <constructor-arg name="f">
-                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
-                </constructor-arg>
-            </bean>
-        </property>
-        <property name="RPUIContextCreateStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose">
-                <constructor-arg name="g">
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <ref bean="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
-                        </constructor-arg>
-                    </bean>
-                </constructor-arg>
-                <constructor-arg name="f">
-                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-
-    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
-            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
-        <property name="eventContextLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
-        </property>
-    </bean>
-    
-    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
-        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
-        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:formattingMap-ref="shibboleth.AuditFormattingMap" />
-
-    <bean id="ErrorViewPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.ErrorViewAuditExtractors') ?: getObject('shibboleth.DefaultErrorViewAuditExtractors')}" />
-    
-    <bean id="MapEventToView"
-        class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
-        p:defaultView-ref="shibboleth.DefaultErrorView"
-        p:eventMap="#{getObject('shibboleth.EventViewMap')}" />
-
-    <bean id="SaveLogoutContext"
-          class="net.shibboleth.idp.session.impl.SaveLogoutContext" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
+    <import resource="../../conf/audit-system.xml" />
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="http://shibboleth.net/ns/profiles/logout"
+        p:loggingId="%{idp.service.logging.logout:Logout}"
+        p:browserProfile="true" />
+
+    <bean id="PopulateMetricContext"
+        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
+        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
+
+    <bean id="PopulateUserAgentContext"
+          class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
+          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <bean id="PopulateClientStorageLoadContext"
+        class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext" scope="prototype"
+        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+    <bean id="ProcessLogout"
+        class="net.shibboleth.idp.session.impl.ProcessLogout" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:httpServletResponse-ref="shibboleth.HttpServletResponse"
+        p:sessionManager-ref="shibboleth.SessionManager"
+        p:sessionResolver-ref="shibboleth.SessionManager" />
+    
+    <bean id="PopulateClientStorageSaveContext"
+        class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext" scope="prototype"
+        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+    
+    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.LogoutAuditExtractors') ?: getObject('shibboleth.DefaultLogoutAuditExtractors')}" />
+        
+    <bean id="PopulateMultiRPContextFromLogoutContext"
+        class="net.shibboleth.idp.session.impl.PopulateMultiRPContextFromLogoutContext" scope="prototype"
+        p:activationCondition="%{idp.logout.elaboration:false}"
+        p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
+        p:sessionTypeProtocolMap-ref="shibboleth.SessionTypeProtocolMap" />
+        
+    <bean id="SetRPUIInformation"
+            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
+            p:activationCondition="%{idp.logout.elaboration:false}"
+            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
+        <property name="fallbackLanguages">
+            <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.ui.fallbackLanguages:}'.trim()}" />
+        </property>
+        <property name="metadataContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose">
+                <constructor-arg name="g">
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <ref bean="shibboleth.ChildLookup.SAMLMetadataContext" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
+                        </constructor-arg>
+                    </bean>
+                </constructor-arg>
+                <constructor-arg name="f">
+                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
+                </constructor-arg>
+            </bean>
+        </property>
+        <property name="RPUIContextCreateStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose">
+                <constructor-arg name="g">
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <ref bean="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
+                        </constructor-arg>
+                    </bean>
+                </constructor-arg>
+                <constructor-arg name="f">
+                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+
+    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
+            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
+        <property name="eventContextLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
+        </property>
+    </bean>
+    
+    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
+        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
+        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:formattingMap-ref="shibboleth.AuditFormattingMap" />
+
+    <bean id="ErrorViewPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.ErrorViewAuditExtractors') ?: getObject('shibboleth.DefaultErrorViewAuditExtractors')}" />
+    
+    <bean id="MapEventToView"
+        class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
+        p:defaultView-ref="shibboleth.DefaultErrorView"
+        p:eventMap="#{getObject('shibboleth.EventViewMap')}" />
+
+    <bean id="SaveLogoutContext"
+          class="net.shibboleth.idp.session.impl.SaveLogoutContext" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/logout/logout-flow.xml shibboleth-idp/system/flows/logout/logout-flow.xml
--- shibboleth-idp/system/flows/logout/logout-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/logout/logout-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,180 +1,180 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
-
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="PopulateUserAgentContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PopulateClientStorageLoadContext" />
-    </action-state>
-
-    <!-- Load client storage if needed. -->
-    
-    <action-state id="PopulateClientStorageLoadContext">
-        <evaluate expression="PopulateClientStorageLoadContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageLoad" />
-        <transition on="NoLoadNeeded" to="DoLogout" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="DoLogout"/>
-    </subflow-state>
-
-    <action-state id="DoLogout">
-        <evaluate expression="ProcessLogout" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PopulateClientStorageSaveContext" />
-    </action-state>
-
-    <!-- We may need to save client storage. -->
-    
-    <action-state id="PopulateClientStorageSaveContext">
-        <evaluate expression="PopulateClientStorageSaveContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageSave" />
-        <transition on="NoSaveNeeded" to="CompleteLogout" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CompleteLogout"/>
-    </subflow-state>
-
-    <!-- Continue the logout process. -->
-
-    <action-state id="CompleteLogout">
-        <evaluate expression="LogoutPopulateAuditContext" />
-        <evaluate expression="PopulateMultiRPContextFromLogoutContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="NextRelyingPartyContext" />
-    </action-state>
-    
-    <decision-state id="NextRelyingPartyContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext), true).getRelyingPartyContextIterator().hasNext()"
-            then="SetRPUIInformation" else="LogoutView" />
-    </decision-state>
-    
-    <action-state id="SetRPUIInformation">
-        <on-entry>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext)).getRelyingPartyContextIterator().next()" />
-        </on-entry>
-        <evaluate expression="SetRPUIInformation" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="NextRelyingPartyContext" />
-    </action-state>
-
-    <view-state id="LogoutView" view="logout">
-        <on-render>
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="viewScope.logoutContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="viewScope.multiRPContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-        </on-render>
-        <transition on="proceed" to="LogoutCompleteView" />
-        <transition on="end" to="LogoutCompleteView" />
-        <transition on="propagate" to="LogoutPropagateView" />
-    </view-state>
-
-    <!-- Terminus -->
-
-    <end-state id="LogoutPropagateView" view="logout-propagate">
-        <on-entry>
-            <evaluate expression="SaveLogoutContext" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="requestScope.logoutContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="requestScope.multiRPContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.htmlEncoder" />
-            <evaluate expression="T(java.net.URLEncoder)" result="requestScope.urlEncoder" />
-            <evaluate expression="T(org.cryptacular.util.CodecUtil)" result="requestScope.codecUtil" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LogoutPropagationFlowSelector')" result="requestScope.flowSelector" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-    </end-state>
-
-    <end-state id="LogoutCompleteView" view="logout-complete">
-        <on-entry>
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="requestScope.logoutContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="requestScope.multiRPContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-    </end-state>
-
-    <!-- Passthrough state if an exception is thrown. -->
-
-    <action-state id="LogRuntimeException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        </on-entry>
-        <evaluate expression="'RuntimeException'" />
-        <transition to="HandleErrorWithView" />
-    </action-state>
-
-    <!-- Unsuccessful terminal states. -->
-    
-    <decision-state id="HandleErrorWithView">
-        <on-entry>
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <if test="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').containsKey(currentEvent.id) and flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').get(currentEvent.id)"
-            then="AuditedErrorView" else="ErrorView" />
-    </decision-state>
-
-    <end-state id="AuditedErrorView" view="#{MapEventToView.apply(currentEvent)}">
-        <on-entry>
-            <evaluate expression="ErrorViewPopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <end-state id="ErrorView" view="#{MapEventToView.apply(currentEvent)}">
-        <on-entry>
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <!-- Default is to turn non-proceed events into an error. -->
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleErrorWithView" />
-    </global-transitions>
-
-    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
-    <bean-import resource="logout-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
+
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="PopulateUserAgentContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PopulateClientStorageLoadContext" />
+    </action-state>
+
+    <!-- Load client storage if needed. -->
+    
+    <action-state id="PopulateClientStorageLoadContext">
+        <evaluate expression="PopulateClientStorageLoadContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageLoad" />
+        <transition on="NoLoadNeeded" to="DoLogout" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="DoLogout"/>
+    </subflow-state>
+
+    <action-state id="DoLogout">
+        <evaluate expression="ProcessLogout" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PopulateClientStorageSaveContext" />
+    </action-state>
+
+    <!-- We may need to save client storage. -->
+    
+    <action-state id="PopulateClientStorageSaveContext">
+        <evaluate expression="PopulateClientStorageSaveContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageSave" />
+        <transition on="NoSaveNeeded" to="CompleteLogout" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CompleteLogout"/>
+    </subflow-state>
+
+    <!-- Continue the logout process. -->
+
+    <action-state id="CompleteLogout">
+        <evaluate expression="LogoutPopulateAuditContext" />
+        <evaluate expression="PopulateMultiRPContextFromLogoutContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="NextRelyingPartyContext" />
+    </action-state>
+    
+    <decision-state id="NextRelyingPartyContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext), true).getRelyingPartyContextIterator().hasNext()"
+            then="SetRPUIInformation" else="LogoutView" />
+    </decision-state>
+    
+    <action-state id="SetRPUIInformation">
+        <on-entry>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext)).getRelyingPartyContextIterator().next()" />
+        </on-entry>
+        <evaluate expression="SetRPUIInformation" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="NextRelyingPartyContext" />
+    </action-state>
+
+    <view-state id="LogoutView" view="logout">
+        <on-render>
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="viewScope.logoutContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="viewScope.multiRPContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+        </on-render>
+        <transition on="proceed" to="LogoutCompleteView" />
+        <transition on="end" to="LogoutCompleteView" />
+        <transition on="propagate" to="LogoutPropagateView" />
+    </view-state>
+
+    <!-- Terminus -->
+
+    <end-state id="LogoutPropagateView" view="logout-propagate">
+        <on-entry>
+            <evaluate expression="SaveLogoutContext" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="requestScope.logoutContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="requestScope.multiRPContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.htmlEncoder" />
+            <evaluate expression="T(java.net.URLEncoder)" result="requestScope.urlEncoder" />
+            <evaluate expression="T(org.cryptacular.util.CodecUtil)" result="requestScope.codecUtil" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LogoutPropagationFlowSelector')" result="requestScope.flowSelector" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+    </end-state>
+
+    <end-state id="LogoutCompleteView" view="logout-complete">
+        <on-entry>
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="requestScope.logoutContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="requestScope.multiRPContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+    </end-state>
+
+    <!-- Passthrough state if an exception is thrown. -->
+
+    <action-state id="LogRuntimeException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        </on-entry>
+        <evaluate expression="'RuntimeException'" />
+        <transition to="HandleErrorWithView" />
+    </action-state>
+
+    <!-- Unsuccessful terminal states. -->
+    
+    <decision-state id="HandleErrorWithView">
+        <on-entry>
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <if test="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').containsKey(currentEvent.id) and flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').get(currentEvent.id)"
+            then="AuditedErrorView" else="ErrorView" />
+    </decision-state>
+
+    <end-state id="AuditedErrorView" view="#{MapEventToView.apply(currentEvent)}">
+        <on-entry>
+            <evaluate expression="ErrorViewPopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <end-state id="ErrorView" view="#{MapEventToView.apply(currentEvent)}">
+        <on-entry>
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <!-- Default is to turn non-proceed events into an error. -->
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleErrorWithView" />
+    </global-transitions>
+
+    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
+    <bean-import resource="logout-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/logout/logout-propagation-beans.xml shibboleth-idp/system/flows/logout/logout-propagation-beans.xml
--- shibboleth-idp/system/flows/logout/logout-propagation-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/logout/logout-propagation-beans.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,55 +1,55 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
-    <import resource="../../conf/audit-system.xml" />
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="http://shibboleth.net/ns/profiles/logout-propagation"
-        p:loggingId="%{idp.service.logging.logout-propagation:LogoutPropagation}"
-        p:browserProfile="true" />
-
-    <bean id="PopulateMetricContext"
-        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
-        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
-
-    <bean id="PopulateLogoutPropagationContext"
-        class="net.shibboleth.idp.session.impl.PopulateLogoutPropagationContext" scope="prototype"
-        p:SPSessionSerializerRegistry-ref="shibboleth.SPSessionSerializerRegistry"
-        p:dataSealer="#{'%{idp.sealer.storeResource:}'.trim().length() > 0 ? getObject('shibboleth.DataSealer') : null}" />
-
-    <bean id="PopulateUserAgentContext"
-          class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
-          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-        
-    <bean id="SelectPropagationFlow"
-        class="net.shibboleth.idp.session.impl.SelectLogoutPropagationFlow" scope="prototype"
-        c:selector-ref="shibboleth.LogoutPropagationFlowSelector" />
-
-    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
-        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
-        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
-        p:formattingMap-ref="shibboleth.AuditFormattingMap"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-    <bean id="RecordResponseComplete"
-        class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
+    <import resource="../../conf/audit-system.xml" />
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="http://shibboleth.net/ns/profiles/logout-propagation"
+        p:loggingId="%{idp.service.logging.logout-propagation:LogoutPropagation}"
+        p:browserProfile="true" />
+
+    <bean id="PopulateMetricContext"
+        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
+        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
+
+    <bean id="PopulateLogoutPropagationContext"
+        class="net.shibboleth.idp.session.impl.PopulateLogoutPropagationContext" scope="prototype"
+        p:SPSessionSerializerRegistry-ref="shibboleth.SPSessionSerializerRegistry"
+        p:dataSealer="#{'%{idp.sealer.storeResource:}'.trim().length() > 0 ? getObject('shibboleth.DataSealer') : null}" />
+
+    <bean id="PopulateUserAgentContext"
+          class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
+          p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+        
+    <bean id="SelectPropagationFlow"
+        class="net.shibboleth.idp.session.impl.SelectLogoutPropagationFlow" scope="prototype"
+        c:selector-ref="shibboleth.LogoutPropagationFlowSelector" />
+
+    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
+        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
+        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
+        p:formattingMap-ref="shibboleth.AuditFormattingMap"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+    <bean id="RecordResponseComplete"
+        class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
+</beans>
diff -rupN shibboleth-idp/system/flows/logout/logout-propagation-flow.xml shibboleth-idp/system/flows/logout/logout-propagation-flow.xml
--- shibboleth-idp/system/flows/logout/logout-propagation-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/logout/logout-propagation-flow.xml	2019-07-01 13:03:37.445961259 -0400
@@ -1,73 +1,73 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
-
-    <!-- Master flow to propagate a logout of an SPSession by determining a subflow to run based on the type. -->
-
-    <action-state id="PropagateLogout">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="PopulateLogoutPropagationContext" />
-        <evaluate expression="PopulateUserAgentContext" />
-        <evaluate expression="SelectPropagationFlow" />
-        
-        <!-- Call a subflow with the same ID as the event. -->
-        <transition on="#{currentEvent.id.startsWith('logoutprop/')}" to="CallPropagationFlow" />
-        
-        <transition to="LogoutFailed" />
-    </action-state>
-
-    <!--
-    This invokes a propagation flow. Anything but proceed is an error, otherwise we signal success.
-    -->
-    <subflow-state id="CallPropagationFlow" subflow="#{currentEvent.id}">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="RenderResult" />
-        <transition on="LogoutPending" to="LogoutPending" />
-    </subflow-state>
-
-    <end-state id="RenderResult" view="logout/result">
-        <on-entry>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.UserAgentContext))" result="requestScope.userAgentContext" />
-            <evaluate expression="userAgentContext.isInstance(T(eu.bitwalker.useragentutils.Browser).IE)
-                ? externalContext.nativeResponse.setContentType('text/plain')
-                : externalContext.nativeResponse.setContentType('application/json')" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="WriteAuditLog" />
-        </on-entry>
-    </end-state>
-
-    <!-- End in limbo, assumes the propagation subflow will send the client somewhere else. -->
-
-    <end-state id="LogoutPending" />
-
-    <!-- End with a failure. -->
-
-    <end-state id="LogoutFailed">
-        <on-entry>
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="RecordResponseComplete" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <!-- Passthrough state if an exception is thrown. -->
-
-    <action-state id="LogRuntimeException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        </on-entry>
-        <evaluate expression="'RuntimeException'" />
-        <transition to="LogoutFailed" />
-    </action-state>
-
-    <!-- Default is to turn non-proceed events into an error. -->
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="LogoutFailed" />
-    </global-transitions>
-
-    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
-    <bean-import resource="logout-propagation-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
+
+    <!-- Master flow to propagate a logout of an SPSession by determining a subflow to run based on the type. -->
+
+    <action-state id="PropagateLogout">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="PopulateLogoutPropagationContext" />
+        <evaluate expression="PopulateUserAgentContext" />
+        <evaluate expression="SelectPropagationFlow" />
+        
+        <!-- Call a subflow with the same ID as the event. -->
+        <transition on="#{currentEvent.id.startsWith('logoutprop/')}" to="CallPropagationFlow" />
+        
+        <transition to="LogoutFailed" />
+    </action-state>
+
+    <!--
+    This invokes a propagation flow. Anything but proceed is an error, otherwise we signal success.
+    -->
+    <subflow-state id="CallPropagationFlow" subflow="#{currentEvent.id}">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="RenderResult" />
+        <transition on="LogoutPending" to="LogoutPending" />
+    </subflow-state>
+
+    <end-state id="RenderResult" view="logout/result">
+        <on-entry>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.UserAgentContext))" result="requestScope.userAgentContext" />
+            <evaluate expression="userAgentContext.isInstance(T(eu.bitwalker.useragentutils.Browser).IE)
+                ? externalContext.nativeResponse.setContentType('text/plain')
+                : externalContext.nativeResponse.setContentType('application/json')" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="WriteAuditLog" />
+        </on-entry>
+    </end-state>
+
+    <!-- End in limbo, assumes the propagation subflow will send the client somewhere else. -->
+
+    <end-state id="LogoutPending" />
+
+    <!-- End with a failure. -->
+
+    <end-state id="LogoutFailed">
+        <on-entry>
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="RecordResponseComplete" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <!-- Passthrough state if an exception is thrown. -->
+
+    <action-state id="LogRuntimeException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        </on-entry>
+        <evaluate expression="'RuntimeException'" />
+        <transition to="LogoutFailed" />
+    </action-state>
+
+    <!-- Default is to turn non-proceed events into an error. -->
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="LogoutFailed" />
+    </global-transitions>
+
+    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
+    <bean-import resource="logout-propagation-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/logout/propagation/cas-beans.xml shibboleth-idp/system/flows/logout/propagation/cas-beans.xml
--- shibboleth-idp/system/flows/logout/propagation/cas-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/logout/propagation/cas-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,18 +1,18 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="DateFormatter"
-          class="org.joda.time.format.ISODateTimeFormat"
-          factory-method="dateHourMinuteSecond" />
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="DateFormatter"
+          class="org.joda.time.format.ISODateTimeFormat"
+          factory-method="dateHourMinuteSecond" />
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/logout/propagation/cas-flow.xml shibboleth-idp/system/flows/logout/propagation/cas-flow.xml
--- shibboleth-idp/system/flows/logout/propagation/cas-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/logout/propagation/cas-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,25 +1,25 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
-
-    <view-state id="ShowServiceLogoutView" view="cas/logoutService">
-        <on-render>
-            <set name="viewScope.logoutPropCtx"
-                 value="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutPropagationContext))" />
-            <set name="viewScope.messageID" value="T(java.util.UUID).randomUUID()" />
-            <set name="viewScope.issueInstant" value="DateFormatter.print(T(org.joda.time.DateTime).now())" />
-        </on-render>
-        <transition on="proceed" to="proceed" />
-    </view-state>
-
-    <end-state id="proceed">
-        <on-entry>
-            <set name="requestScope.logoutPropCtx"
-                 value="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutPropagationContext))" />
-            <evaluate expression="logoutPropCtx.setResultString('Success')" />
-        </on-entry>
-    </end-state>
-
-    <bean-import resource="cas-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
+
+    <view-state id="ShowServiceLogoutView" view="cas/logoutService">
+        <on-render>
+            <set name="viewScope.logoutPropCtx"
+                 value="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutPropagationContext))" />
+            <set name="viewScope.messageID" value="T(java.util.UUID).randomUUID()" />
+            <set name="viewScope.issueInstant" value="DateFormatter.print(T(org.joda.time.DateTime).now())" />
+        </on-render>
+        <transition on="proceed" to="proceed" />
+    </view-state>
+
+    <end-state id="proceed">
+        <on-entry>
+            <set name="requestScope.logoutPropCtx"
+                 value="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutPropagationContext))" />
+            <evaluate expression="logoutPropCtx.setResultString('Success')" />
+        </on-entry>
+    </end-state>
+
+    <bean-import resource="cas-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/logout/propagation/saml2-beans.xml shibboleth-idp/system/flows/logout/propagation/saml2-beans.xml
--- shibboleth-idp/system/flows/logout/propagation/saml2-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/logout/propagation/saml2-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,90 +1,90 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
-    <import resource="../../../conf/audit-system.xml" />
-
-    <import resource="../../saml/saml-abstract-beans.xml" />
-
-    <util:constant id="shibboleth.EndpointType"
-        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />
-
-    <util:constant id="shibboleth.MetadataLookup.Protocol"
-        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
-
-    <util:constant id="shibboleth.MetadataLookup.Role"
-        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
-
-    <alias name="shibboleth.OutgoingSAML2SLOBindings" alias="shibboleth.OutgoingBindings"/>
-    
-    <bean id="PrepareInboundMessageContext"
-        class="net.shibboleth.idp.saml.session.impl.PrepareInboundMessageContext" scope="prototype" />
-
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
-        p:confidentialityActive="false" p:integrityActive="false" />
-
-    <bean id="AddLogoutRequest"
-        class="net.shibboleth.idp.saml.session.impl.AddLogoutRequest" scope="prototype"
-            p:overwriteExisting="true"
-            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <!-- This is a little iffy, but the post-assertion extractors include the fields we want here. -->
-    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostAssertionAuditExtractors') ?: getObject('shibboleth.DefaultPostAssertionAuditExtractors')}" />
-
-    <bean id="EncryptNameIDs"
-            class="org.opensaml.saml.saml2.profile.impl.EncryptNameIDs" scope="prototype"
-            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
-        <property name="encryptionContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
-                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
-        </property>
-    </bean>
-
-    <bean id="PostResponsePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostResponseAuditExtractors') ?: getObject('shibboleth.DefaultPostResponseAuditExtractors')}" />
-    
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <list>
-                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
-                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
-                        p:signErrorResponses="%{idp.errors.signed:true}">
-                    <property name="activationCondition">
-                        <bean parent="shibboleth.Conditions.NOT">
-                            <constructor-arg>
-                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
-                            </constructor-arg>
-                        </bean>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
+    <import resource="../../../conf/audit-system.xml" />
+
+    <import resource="../../saml/saml-abstract-beans.xml" />
+
+    <util:constant id="shibboleth.EndpointType"
+        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />
+
+    <util:constant id="shibboleth.MetadataLookup.Protocol"
+        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
+
+    <util:constant id="shibboleth.MetadataLookup.Role"
+        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
+
+    <alias name="shibboleth.OutgoingSAML2SLOBindings" alias="shibboleth.OutgoingBindings"/>
+    
+    <bean id="PrepareInboundMessageContext"
+        class="net.shibboleth.idp.saml.session.impl.PrepareInboundMessageContext" scope="prototype" />
+
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
+        p:confidentialityActive="false" p:integrityActive="false" />
+
+    <bean id="AddLogoutRequest"
+        class="net.shibboleth.idp.saml.session.impl.AddLogoutRequest" scope="prototype"
+            p:overwriteExisting="true"
+            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <!-- This is a little iffy, but the post-assertion extractors include the fields we want here. -->
+    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostAssertionAuditExtractors') ?: getObject('shibboleth.DefaultPostAssertionAuditExtractors')}" />
+
+    <bean id="EncryptNameIDs"
+            class="org.opensaml.saml.saml2.profile.impl.EncryptNameIDs" scope="prototype"
+            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
+        <property name="encryptionContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
+                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
+        </property>
+    </bean>
+
+    <bean id="PostResponsePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostResponseAuditExtractors') ?: getObject('shibboleth.DefaultPostResponseAuditExtractors')}" />
+    
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <list>
+                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
+                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
+                        p:signErrorResponses="%{idp.errors.signed:true}">
+                    <property name="activationCondition">
+                        <bean parent="shibboleth.Conditions.NOT">
+                            <constructor-arg>
+                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
+                            </constructor-arg>
+                        </bean>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/logout/propagation/saml2-flow.xml shibboleth-idp/system/flows/logout/propagation/saml2-flow.xml
--- shibboleth-idp/system/flows/logout/propagation/saml2-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/logout/propagation/saml2-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,86 +1,86 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
-
-    <!-- Rewrite the profile ID so that configuration is driven by the SAML2 SLO profile config. -->
-    <on-start>
-        <evaluate expression="opensamlProfileRequestContext.setProfileId(T(net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration).PROFILE_ID)" />
-    </on-start>
-
-    <action-state id="PrepareContextTree">
-        <evaluate expression="PrepareInboundMessageContext" />
-        <evaluate expression="SAMLProtocolAndRole" />
-        <evaluate expression="SAMLMetadataLookup" />
-
-        <evaluate expression="InitializeRelyingPartyContexFromSAMLPeer" />
-        <evaluate expression="SelectRelyingPartyConfiguration" />
-
-        <evaluate expression="PostLookupPopulateAuditContext" />
-        
-        <evaluate expression="SelectProfileConfiguration" />
-        
-        <evaluate expression="InitializeOutboundMessageContext" />
-        <evaluate expression="InitializeMessageChannelSecurityContext" />
-        <evaluate expression="PopulateBindingAndEndpointContexts" />
-        <evaluate expression="PopulateRequestSignatureSigningParameters" />
-        <evaluate expression="PopulateEncryptionParameters" />
-
-        <evaluate expression="AddLogoutRequest" />
-
-        <evaluate expression="LogoutPopulateAuditContext" />
-        
-        <evaluate expression="EncryptNameIDs" />
-        
-        <evaluate expression="PostResponsePopulateAuditContext" />
-
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="HandleOutboundMessage" />
-    </action-state>
-
-    <action-state id="HandleOutboundMessage">
-        <evaluate expression="HandleOutboundMessage" />
-        <evaluate expression="EncodeMessage" />
-        <evaluate expression="RecordResponseComplete" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="LogoutPending" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-
-    <!-- Passthrough state if an exception is thrown. -->
-
-    <action-state id="LogRuntimeException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.saml.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        </on-entry>
-        <evaluate expression="'RuntimeException'" />
-        <transition to="proceed" />
-    </action-state>
-    
-    <!-- Successful terminal state (success meaning outbound LogoutRequest encoded). -->
-
-    <end-state id="LogoutPending">
-        <on-entry>
-            <evaluate expression="WriteAuditLog" />
-        </on-entry>
-    </end-state>
-
-    <!--
-    Unsuccessful terminal state. This is "proceed" because the parent flow will respond to that
-    by emitting the outcome in the LogoutPropagationContext, which is always left at Failure.
-    -->
-    <end-state id="proceed"/>
-
-    <!--
-    Default is to turn non-proceed events into an error, which in this special flow is actually "proceed".
-    -->
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="proceed" />
-    </global-transitions>
-    
-    <bean-import resource="saml2-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">
+
+    <!-- Rewrite the profile ID so that configuration is driven by the SAML2 SLO profile config. -->
+    <on-start>
+        <evaluate expression="opensamlProfileRequestContext.setProfileId(T(net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration).PROFILE_ID)" />
+    </on-start>
+
+    <action-state id="PrepareContextTree">
+        <evaluate expression="PrepareInboundMessageContext" />
+        <evaluate expression="SAMLProtocolAndRole" />
+        <evaluate expression="SAMLMetadataLookup" />
+
+        <evaluate expression="InitializeRelyingPartyContexFromSAMLPeer" />
+        <evaluate expression="SelectRelyingPartyConfiguration" />
+
+        <evaluate expression="PostLookupPopulateAuditContext" />
+        
+        <evaluate expression="SelectProfileConfiguration" />
+        
+        <evaluate expression="InitializeOutboundMessageContext" />
+        <evaluate expression="InitializeMessageChannelSecurityContext" />
+        <evaluate expression="PopulateBindingAndEndpointContexts" />
+        <evaluate expression="PopulateRequestSignatureSigningParameters" />
+        <evaluate expression="PopulateEncryptionParameters" />
+
+        <evaluate expression="AddLogoutRequest" />
+
+        <evaluate expression="LogoutPopulateAuditContext" />
+        
+        <evaluate expression="EncryptNameIDs" />
+        
+        <evaluate expression="PostResponsePopulateAuditContext" />
+
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="HandleOutboundMessage" />
+    </action-state>
+
+    <action-state id="HandleOutboundMessage">
+        <evaluate expression="HandleOutboundMessage" />
+        <evaluate expression="EncodeMessage" />
+        <evaluate expression="RecordResponseComplete" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="LogoutPending" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+
+    <!-- Passthrough state if an exception is thrown. -->
+
+    <action-state id="LogRuntimeException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.saml.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        </on-entry>
+        <evaluate expression="'RuntimeException'" />
+        <transition to="proceed" />
+    </action-state>
+    
+    <!-- Successful terminal state (success meaning outbound LogoutRequest encoded). -->
+
+    <end-state id="LogoutPending">
+        <on-entry>
+            <evaluate expression="WriteAuditLog" />
+        </on-entry>
+    </end-state>
+
+    <!--
+    Unsuccessful terminal state. This is "proceed" because the parent flow will respond to that
+    by emitting the outcome in the LogoutPropagationContext, which is always left at Failure.
+    -->
+    <end-state id="proceed"/>
+
+    <!--
+    Default is to turn non-proceed events into an error, which in this special flow is actually "proceed".
+    -->
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="proceed" />
+    </global-transitions>
+    
+    <bean-import resource="saml2-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml1/artifact-resolution-beans.xml shibboleth-idp/system/flows/saml/saml1/artifact-resolution-beans.xml
--- shibboleth-idp/system/flows/saml/saml1/artifact-resolution-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/artifact-resolution-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,64 +1,64 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <import resource="common-beans.xml" />
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml1.profile.config.ArtifactResolutionProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml1artifact:ArtifactResolution}" />
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml1.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML1SOAP" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
-
-    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
-
-    <bean id="ResolveArtifacts"
-        class="org.opensaml.saml.saml1.profile.impl.ResolveArtifacts" scope="prototype"
-        p:artifactMap-ref="shibboleth.SAMLArtifactMap"
-        p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple" />
-
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <list>
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
-                        p:signErrorResponses="%{idp.errors.signed:true}">
-                    <property name="activationCondition">
-                        <bean parent="shibboleth.Conditions.NOT">
-                            <constructor-arg>
-                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
-                            </constructor-arg>
-                        </bean>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <import resource="common-beans.xml" />
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml1.profile.config.ArtifactResolutionProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml1artifact:ArtifactResolution}" />
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml1.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML1SOAP" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
+
+    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
+
+    <bean id="ResolveArtifacts"
+        class="org.opensaml.saml.saml1.profile.impl.ResolveArtifacts" scope="prototype"
+        p:artifactMap-ref="shibboleth.SAMLArtifactMap"
+        p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple" />
+
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <list>
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
+                        p:signErrorResponses="%{idp.errors.signed:true}">
+                    <property name="activationCondition">
+                        <bean parent="shibboleth.Conditions.NOT">
+                            <constructor-arg>
+                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
+                            </constructor-arg>
+                        </bean>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml1/artifact-resolution-flow.xml shibboleth-idp/system/flows/saml/saml1/artifact-resolution-flow.xml
--- shibboleth-idp/system/flows/saml/saml1/artifact-resolution-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/artifact-resolution-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,59 +1,59 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="saml.abstract">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <!-- This picks up from the parent flow. -->
-    
-    <action-state id="DoProfileWork">
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        
-        <evaluate expression="ResolveArtifacts" />
-        
-        <evaluate expression="SignAssertions" />
-        
-        <evaluate expression="PostAssertionPopulateAuditContext" />
-        <evaluate expression="PostResponsePopulateAuditContext" />
-
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-    </action-state>
-
-    <!-- Outbound message handling completes in the parent flow. -->
-
-    <!-- Error Response Generation -->
-
-    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
-
-    <action-state id="HandleError">
-        <on-entry>
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <evaluate expression="InitializeOutboundMessageContextForError" />
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-    
-    <bean-import resource="artifact-resolution-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="saml.abstract">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <!-- This picks up from the parent flow. -->
+    
+    <action-state id="DoProfileWork">
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        
+        <evaluate expression="ResolveArtifacts" />
+        
+        <evaluate expression="SignAssertions" />
+        
+        <evaluate expression="PostAssertionPopulateAuditContext" />
+        <evaluate expression="PostResponsePopulateAuditContext" />
+
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+    </action-state>
+
+    <!-- Outbound message handling completes in the parent flow. -->
+
+    <!-- Error Response Generation -->
+
+    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
+
+    <action-state id="HandleError">
+        <on-entry>
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <evaluate expression="InitializeOutboundMessageContextForError" />
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+    
+    <bean-import resource="artifact-resolution-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml1/attribute-query-beans.xml shibboleth-idp/system/flows/saml/saml1/attribute-query-beans.xml
--- shibboleth-idp/system/flows/saml/saml1/attribute-query-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/attribute-query-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,66 +1,66 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <import resource="common-beans.xml" />
-    
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml1.profile.config.AttributeQueryProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml1attrquery:AttributeQuery}" />
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml1.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML1SOAP" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
-
-    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
-
-    <bean id="CopyNameIdentifierFromRequest"
-            class="org.opensaml.saml.saml1.profile.impl.CopyNameIdentifierFromRequest" scope="prototype" />
-
-    <bean id="AddSubjectConfirmationToSubjects"
-        class="org.opensaml.saml.saml1.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
-        p:methods="#{ {'urn:oasis:names:tc:SAML:1.0:cm:sender-vouches'} }" />
-
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <list>
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
-                        p:signErrorResponses="%{idp.errors.signed:true}">
-                    <property name="activationCondition">
-                        <bean parent="shibboleth.Conditions.NOT">
-                            <constructor-arg>
-                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
-                            </constructor-arg>
-                        </bean>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <import resource="common-beans.xml" />
+    
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml1.profile.config.AttributeQueryProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml1attrquery:AttributeQuery}" />
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml1.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML1SOAP" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
+
+    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
+
+    <bean id="CopyNameIdentifierFromRequest"
+            class="org.opensaml.saml.saml1.profile.impl.CopyNameIdentifierFromRequest" scope="prototype" />
+
+    <bean id="AddSubjectConfirmationToSubjects"
+        class="org.opensaml.saml.saml1.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
+        p:methods="#{ {'urn:oasis:names:tc:SAML:1.0:cm:sender-vouches'} }" />
+
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <list>
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
+                        p:signErrorResponses="%{idp.errors.signed:true}">
+                    <property name="activationCondition">
+                        <bean parent="shibboleth.Conditions.NOT">
+                            <constructor-arg>
+                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
+                            </constructor-arg>
+                        </bean>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml1/attribute-query-flow.xml shibboleth-idp/system/flows/saml/saml1/attribute-query-flow.xml
--- shibboleth-idp/system/flows/saml/saml1/attribute-query-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/attribute-query-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,68 +1,68 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="saml.abstract">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <!-- This picks up from the parent flow. -->
-    
-    <action-state id="DoProfileWork">
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="FilterAttributes" />
-        <evaluate expression="FilterByQueriedAttributeDesignators" />
-
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        
-        <evaluate expression="AddAttributeStatementToAssertion" />
-        <evaluate expression="CopyNameIdentifierFromRequest" />
-        <evaluate expression="AddSubjectConfirmationToSubjects" />
-        <evaluate expression="AddNotBeforeConditionToAssertions" />
-        <evaluate expression="AddNotOnOrAfterConditionToAssertions" />
-        <evaluate expression="AddAudienceRestrictionToAssertions" />
-        <evaluate expression="SignAssertions" />
-        
-        <evaluate expression="PostAssertionPopulateAuditContext" />
-        <evaluate expression="PostResponsePopulateAuditContext" />
-
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-    </action-state>
-
-    <!-- Outbound message handling completes in the parent flow. -->
-
-    <!-- Error Response Generation -->
-
-    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
-
-    <action-state id="HandleError">
-        <on-entry>
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <evaluate expression="InitializeOutboundMessageContextForError" />
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        <evaluate expression="AddStatusToResponse" />
-        
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-    
-    <bean-import resource="attribute-query-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="saml.abstract">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <!-- This picks up from the parent flow. -->
+    
+    <action-state id="DoProfileWork">
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="FilterAttributes" />
+        <evaluate expression="FilterByQueriedAttributeDesignators" />
+
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        
+        <evaluate expression="AddAttributeStatementToAssertion" />
+        <evaluate expression="CopyNameIdentifierFromRequest" />
+        <evaluate expression="AddSubjectConfirmationToSubjects" />
+        <evaluate expression="AddNotBeforeConditionToAssertions" />
+        <evaluate expression="AddNotOnOrAfterConditionToAssertions" />
+        <evaluate expression="AddAudienceRestrictionToAssertions" />
+        <evaluate expression="SignAssertions" />
+        
+        <evaluate expression="PostAssertionPopulateAuditContext" />
+        <evaluate expression="PostResponsePopulateAuditContext" />
+
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+    </action-state>
+
+    <!-- Outbound message handling completes in the parent flow. -->
+
+    <!-- Error Response Generation -->
+
+    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
+
+    <action-state id="HandleError">
+        <on-entry>
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <evaluate expression="InitializeOutboundMessageContextForError" />
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        <evaluate expression="AddStatusToResponse" />
+        
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+    
+    <bean-import resource="attribute-query-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml1/common-beans.xml shibboleth-idp/system/flows/saml/saml1/common-beans.xml
--- shibboleth-idp/system/flows/saml/saml1/common-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/common-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,87 +1,87 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <util:constant id="shibboleth.MetadataLookup.Protocol"
-        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML11P_NS" />
-
-    <util:constant id="shibboleth.MetadataLookup.Role"
-        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
-    
-    <bean id="AddResponseShell"
-            class="org.opensaml.saml.saml1.profile.impl.AddResponseShell" scope="prototype"
-            p:overwriteExisting="true">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="AddAuthenticationStatementToAssertion"
-            class="net.shibboleth.idp.saml.saml1.profile.impl.AddAuthenticationStatementToAssertion" scope="prototype"
-            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-        <property name="authenticationMethodLookupStrategy">
-            <bean class="net.shibboleth.idp.authn.principal.DefaultPrincipalDeterminationStrategy"
-                    c:type="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal"
-                    p:weightMap="#{getObject('shibboleth.AuthenticationPrincipalWeightMap')}">
-                <constructor-arg name="principal">
-                    <bean class="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal"
-                        c:method="#{T(org.opensaml.saml.saml1.core.AuthenticationStatement).UNSPECIFIED_AUTHN_METHOD}" />
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-
-    <bean id="AddAttributeStatementToAssertion"
-            class="net.shibboleth.idp.saml.saml1.profile.impl.AddAttributeStatementToAssertion" scope="prototype">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
-        </property>
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="InitializeOutboundMessageContextForError"
-            class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContextForError" scope="prototype">
-        <property name="outboundBinding">
-            <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML1_SOAP11_BINDING_URI"/>
-        </property>
-    </bean>
-
-    <bean id="AddStatusToResponse"
-            class="org.opensaml.saml.saml1.profile.impl.AddStatusToResponse" scope="prototype"
-            p:statusMessage="An error occurred.">
-        <property name="detailedErrorsCondition">
-            <bean class="net.shibboleth.idp.profile.config.logic.DetailedErrorsPredicate" />
-        </property>
-        <property name="statusCodes">
-            <list>
-                <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.RESPONDER" />
-            </list>
-        </property>
-        <property name="statusCodesLookupStrategy">
-            <bean class="org.opensaml.saml.saml1.profile.impl.AddStatusToResponse.StatusCodeMappingFunction"
-                     c:mappings-ref="shibboleth.SAML1StatusMappings" />
-        </property>
-        <property name="statusMessageLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.SpringStatusMessageLookupFunction" />
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <util:constant id="shibboleth.MetadataLookup.Protocol"
+        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML11P_NS" />
+
+    <util:constant id="shibboleth.MetadataLookup.Role"
+        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
+    
+    <bean id="AddResponseShell"
+            class="org.opensaml.saml.saml1.profile.impl.AddResponseShell" scope="prototype"
+            p:overwriteExisting="true">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="AddAuthenticationStatementToAssertion"
+            class="net.shibboleth.idp.saml.saml1.profile.impl.AddAuthenticationStatementToAssertion" scope="prototype"
+            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+        <property name="authenticationMethodLookupStrategy">
+            <bean class="net.shibboleth.idp.authn.principal.DefaultPrincipalDeterminationStrategy"
+                    c:type="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal"
+                    p:weightMap="#{getObject('shibboleth.AuthenticationPrincipalWeightMap')}">
+                <constructor-arg name="principal">
+                    <bean class="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal"
+                        c:method="#{T(org.opensaml.saml.saml1.core.AuthenticationStatement).UNSPECIFIED_AUTHN_METHOD}" />
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+
+    <bean id="AddAttributeStatementToAssertion"
+            class="net.shibboleth.idp.saml.saml1.profile.impl.AddAttributeStatementToAssertion" scope="prototype">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
+        </property>
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="InitializeOutboundMessageContextForError"
+            class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContextForError" scope="prototype">
+        <property name="outboundBinding">
+            <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML1_SOAP11_BINDING_URI"/>
+        </property>
+    </bean>
+
+    <bean id="AddStatusToResponse"
+            class="org.opensaml.saml.saml1.profile.impl.AddStatusToResponse" scope="prototype"
+            p:statusMessage="An error occurred.">
+        <property name="detailedErrorsCondition">
+            <bean class="net.shibboleth.idp.profile.config.logic.DetailedErrorsPredicate" />
+        </property>
+        <property name="statusCodes">
+            <list>
+                <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.RESPONDER" />
+            </list>
+        </property>
+        <property name="statusCodesLookupStrategy">
+            <bean class="org.opensaml.saml.saml1.profile.impl.AddStatusToResponse.StatusCodeMappingFunction"
+                     c:mappings-ref="shibboleth.SAML1StatusMappings" />
+        </property>
+        <property name="statusMessageLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.SpringStatusMessageLookupFunction" />
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml1/sso-abstract-beans.xml shibboleth-idp/system/flows/saml/saml1/sso-abstract-beans.xml
--- shibboleth-idp/system/flows/saml/saml1/sso-abstract-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/sso-abstract-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,83 +1,83 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-    
-    <import resource="common-beans.xml" />
-    
-    <util:constant id="shibboleth.EndpointType"
-        static-field="org.opensaml.saml.saml2.metadata.AssertionConsumerService.DEFAULT_ELEMENT_NAME" />
-    
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml1.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml1sso:SSO}"
-        p:browserProfile="true" />
-
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
-        p:confidentialityActive="false" p:integrityActive="false" />
-
-    <bean id="ResolveAttributesPredicate"
-        class="net.shibboleth.idp.saml.profile.config.logic.ResolveAttributesProfileConfigPredicate" />
-
-    <bean id="AddNameIdentifierToSubjects"
-            class="org.opensaml.saml.saml1.profile.impl.AddNameIdentifierToSubjects" scope="prototype">
-        <property name="formatLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.logic.DefaultNameIdentifierFormatStrategy"
-                p:defaultFormat="%{idp.nameid.saml1.default:urn:mace:shibboleth:1.0:nameIdentifier}" />
-        </property>
-        <property name="nameIdentifierGenerator">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.ProxySAML1NameIdentifierGenerator"
-                c:service-ref="shibboleth.NameIdentifierGenerationService" />
-        </property>
-    </bean>
-
-    <bean id="AddSubjectConfirmationToSubjects"
-        class="org.opensaml.saml.saml1.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
-        p:methods="#{ {'urn:oasis:names:tc:SAML:1.0:cm:bearer'} }" />
-
-    <bean id="UpdateSessionWithSPSession"
-            class="net.shibboleth.idp.session.impl.UpdateSessionWithSPSession" scope="prototype"
-            p:activationCondition="%{idp.session.trackSPSessions:false}"
-            p:sessionManager-ref="shibboleth.SessionManager">
-        <property name="SPSessionCreationStrategy">
-            <bean class="net.shibboleth.idp.saml.session.impl.SAML1SPSessionCreationStrategy"
-                c:lifetime="%{idp.session.defaultSPlifetime:PT2H}"/>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <list>
-                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
-                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
-                        p:signErrorResponses="%{idp.errors.signed:true}">
-                    <property name="activationCondition">
-                        <bean parent="shibboleth.Conditions.NOT">
-                            <constructor-arg>
-                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
-                            </constructor-arg>
-                        </bean>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+    
+    <import resource="common-beans.xml" />
+    
+    <util:constant id="shibboleth.EndpointType"
+        static-field="org.opensaml.saml.saml2.metadata.AssertionConsumerService.DEFAULT_ELEMENT_NAME" />
+    
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml1.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml1sso:SSO}"
+        p:browserProfile="true" />
+
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
+        p:confidentialityActive="false" p:integrityActive="false" />
+
+    <bean id="ResolveAttributesPredicate"
+        class="net.shibboleth.idp.saml.profile.config.logic.ResolveAttributesProfileConfigPredicate" />
+
+    <bean id="AddNameIdentifierToSubjects"
+            class="org.opensaml.saml.saml1.profile.impl.AddNameIdentifierToSubjects" scope="prototype">
+        <property name="formatLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.logic.DefaultNameIdentifierFormatStrategy"
+                p:defaultFormat="%{idp.nameid.saml1.default:urn:mace:shibboleth:1.0:nameIdentifier}" />
+        </property>
+        <property name="nameIdentifierGenerator">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.ProxySAML1NameIdentifierGenerator"
+                c:service-ref="shibboleth.NameIdentifierGenerationService" />
+        </property>
+    </bean>
+
+    <bean id="AddSubjectConfirmationToSubjects"
+        class="org.opensaml.saml.saml1.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
+        p:methods="#{ {'urn:oasis:names:tc:SAML:1.0:cm:bearer'} }" />
+
+    <bean id="UpdateSessionWithSPSession"
+            class="net.shibboleth.idp.session.impl.UpdateSessionWithSPSession" scope="prototype"
+            p:activationCondition="%{idp.session.trackSPSessions:false}"
+            p:sessionManager-ref="shibboleth.SessionManager">
+        <property name="SPSessionCreationStrategy">
+            <bean class="net.shibboleth.idp.saml.session.impl.SAML1SPSessionCreationStrategy"
+                c:lifetime="%{idp.session.defaultSPlifetime:PT2H}"/>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <list>
+                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
+                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
+                        p:signErrorResponses="%{idp.errors.signed:true}">
+                    <property name="activationCondition">
+                        <bean parent="shibboleth.Conditions.NOT">
+                            <constructor-arg>
+                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
+                            </constructor-arg>
+                        </bean>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml1/sso-abstract-flow.xml shibboleth-idp/system/flows/saml/saml1/sso-abstract-flow.xml
--- shibboleth-idp/system/flows/saml/saml1/sso-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/sso-abstract-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,166 +1,166 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    abstract="true" parent="saml.abstract">
-
-    <!-- https://wiki.shibboleth.net/confluence/display/IDP30/SAML+1.1+Browser+SSO -->
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <!-- This picks up from the parent flow with the transition or error step. -->
-
-    <action-state id="DoProfileWork">
-        <evaluate expression="PopulateClientStorageLoadContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageLoad" />
-        <transition on="NoLoadNeeded" to="CheckInitialAuthentication" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckInitialAuthentication"/>
-    </subflow-state>
-    
-    <decision-state id="CheckInitialAuthentication">
-        <if test="InitialAuthenticationFlag" then="PreInitialSetup" else="PostInitialSetup" />
-    </decision-state>
-
-    <action-state id="PreInitialSetup">
-        <evaluate expression="InitializeAuthenticationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DoInitialAuthenticationSubflow" />
-    </action-state>
-
-    <subflow-state id="DoInitialAuthenticationSubflow" subflow="authn-initial">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="PostInitialSetup" />
-    </subflow-state>
-    
-    <action-state id="PostInitialSetup">
-        <evaluate expression="InitializeAuthenticationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DoAuthenticationSubflow" />
-    </action-state>
-
-    <subflow-state id="DoAuthenticationSubflow" subflow="authn">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ResolveAttributes" />
-        <transition on="RestartAuthentication" to="PostInitialSetup" />
-    </subflow-state>
-    
-    <decision-state id="ResolveAttributes">
-        <if test="ResolveAttributesPredicate.apply(opensamlProfileRequestContext)"
-            then="AttributeResolution"
-            else="BuildResponse" />
-    </decision-state>
-    
-    <action-state id="AttributeResolution">
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="FilterAttributes" />
-        <evaluate expression="PopulatePostAuthnInterceptContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CheckPostAuthnInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckPostAuthnInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="BuildResponse" else="DoPostAuthnInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoPostAuthnInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="BuildResponse" />
-        <transition on="RestartAuthentication" to="PostInitialSetup" />
-    </subflow-state>
-
-    <action-state id="BuildResponse">
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-
-        <evaluate expression="AddAuthenticationStatementToAssertion" />
-        <evaluate expression="AddAttributeStatementToAssertion" />
-        <evaluate expression="AddNameIdentifierToSubjects" />
-        <evaluate expression="AddSubjectConfirmationToSubjects" />
-        <evaluate expression="AddNotBeforeConditionToAssertions" />
-        <evaluate expression="AddNotOnOrAfterConditionToAssertions" />
-        <evaluate expression="AddAudienceRestrictionToAssertions" />
-        <evaluate expression="SignAssertions" />
-
-        <evaluate expression="PostAssertionPopulateAuditContext" />
-        <evaluate expression="PostResponsePopulateAuditContext" />
-
-        <evaluate expression="UpdateSessionWithSPSession" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PopulateClientStorageSaveContext" />
-        <!-- Mask storage failure. -->
-        <transition on="InputOutputError" to="PopulateClientStorageSaveContext" />
-    </action-state>
-
-    <!-- We may need to save client storage. -->
-    
-    <action-state id="PopulateClientStorageSaveContext">
-        <evaluate expression="PopulateClientStorageSaveContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageSave" />
-        <transition on="NoSaveNeeded" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ReturnToParentFlow"/>
-        <transition to="HandleErrorWithView" />
-    </subflow-state>
-
-    <!-- Outbound message handling completes in the parent flow. -->
-
-    <!-- Error Response Generation -->
-
-    <decision-state id="HandleError">
-        <on-entry>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext), true).setRequestContext(flowRequestContext)" />
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <if test="LocalErrorPredicate.apply(opensamlProfileRequestContext)"
-            then="HandleErrorWithView" else="HandleErrorWithResponse" />
-    </decision-state>
-
-    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
-
-    <action-state id="HandleErrorWithResponse">
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        <evaluate expression="AddStatusToResponse" />
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-
-    <!-- Splice in an additional step to write out the F-TICKS log entry on a successful completion. -->
-
-    <end-state id="end">
-        <on-entry>
-            <evaluate expression="WriteFTICKSLog" />
-        </on-entry>
-    </end-state>
-
-    <bean-import resource="sso-abstract-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    abstract="true" parent="saml.abstract">
+
+    <!-- https://wiki.shibboleth.net/confluence/display/IDP30/SAML+1.1+Browser+SSO -->
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <!-- This picks up from the parent flow with the transition or error step. -->
+
+    <action-state id="DoProfileWork">
+        <evaluate expression="PopulateClientStorageLoadContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageLoad" />
+        <transition on="NoLoadNeeded" to="CheckInitialAuthentication" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckInitialAuthentication"/>
+    </subflow-state>
+    
+    <decision-state id="CheckInitialAuthentication">
+        <if test="InitialAuthenticationFlag" then="PreInitialSetup" else="PostInitialSetup" />
+    </decision-state>
+
+    <action-state id="PreInitialSetup">
+        <evaluate expression="InitializeAuthenticationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DoInitialAuthenticationSubflow" />
+    </action-state>
+
+    <subflow-state id="DoInitialAuthenticationSubflow" subflow="authn-initial">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="PostInitialSetup" />
+    </subflow-state>
+    
+    <action-state id="PostInitialSetup">
+        <evaluate expression="InitializeAuthenticationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DoAuthenticationSubflow" />
+    </action-state>
+
+    <subflow-state id="DoAuthenticationSubflow" subflow="authn">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ResolveAttributes" />
+        <transition on="RestartAuthentication" to="PostInitialSetup" />
+    </subflow-state>
+    
+    <decision-state id="ResolveAttributes">
+        <if test="ResolveAttributesPredicate.apply(opensamlProfileRequestContext)"
+            then="AttributeResolution"
+            else="BuildResponse" />
+    </decision-state>
+    
+    <action-state id="AttributeResolution">
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="FilterAttributes" />
+        <evaluate expression="PopulatePostAuthnInterceptContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CheckPostAuthnInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckPostAuthnInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="BuildResponse" else="DoPostAuthnInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoPostAuthnInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="BuildResponse" />
+        <transition on="RestartAuthentication" to="PostInitialSetup" />
+    </subflow-state>
+
+    <action-state id="BuildResponse">
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+
+        <evaluate expression="AddAuthenticationStatementToAssertion" />
+        <evaluate expression="AddAttributeStatementToAssertion" />
+        <evaluate expression="AddNameIdentifierToSubjects" />
+        <evaluate expression="AddSubjectConfirmationToSubjects" />
+        <evaluate expression="AddNotBeforeConditionToAssertions" />
+        <evaluate expression="AddNotOnOrAfterConditionToAssertions" />
+        <evaluate expression="AddAudienceRestrictionToAssertions" />
+        <evaluate expression="SignAssertions" />
+
+        <evaluate expression="PostAssertionPopulateAuditContext" />
+        <evaluate expression="PostResponsePopulateAuditContext" />
+
+        <evaluate expression="UpdateSessionWithSPSession" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PopulateClientStorageSaveContext" />
+        <!-- Mask storage failure. -->
+        <transition on="InputOutputError" to="PopulateClientStorageSaveContext" />
+    </action-state>
+
+    <!-- We may need to save client storage. -->
+    
+    <action-state id="PopulateClientStorageSaveContext">
+        <evaluate expression="PopulateClientStorageSaveContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageSave" />
+        <transition on="NoSaveNeeded" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ReturnToParentFlow"/>
+        <transition to="HandleErrorWithView" />
+    </subflow-state>
+
+    <!-- Outbound message handling completes in the parent flow. -->
+
+    <!-- Error Response Generation -->
+
+    <decision-state id="HandleError">
+        <on-entry>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext), true).setRequestContext(flowRequestContext)" />
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <if test="LocalErrorPredicate.apply(opensamlProfileRequestContext)"
+            then="HandleErrorWithView" else="HandleErrorWithResponse" />
+    </decision-state>
+
+    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
+
+    <action-state id="HandleErrorWithResponse">
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        <evaluate expression="AddStatusToResponse" />
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+
+    <!-- Splice in an additional step to write out the F-TICKS log entry on a successful completion. -->
+
+    <end-state id="end">
+        <on-entry>
+            <evaluate expression="WriteFTICKSLog" />
+        </on-entry>
+    </end-state>
+
+    <bean-import resource="sso-abstract-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml1/sso-security-flow.xml shibboleth-idp/system/flows/saml/saml1/sso-security-flow.xml
--- shibboleth-idp/system/flows/saml/saml1/sso-security-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/sso-security-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,19 +1,19 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="security-policy.abstract">
-
-    <!-- Default inbound security processing for Shibboleth SSO profile. -->
-
-    <action-state id="ShibbolethSSOSecurityPolicy">
-        <evaluate expression="OptionalMessageReplaySecurityHandler" />
-        <evaluate expression="OptionalMessageLifetimeSecurityHandler" />
-        <evaluate expression="CheckMandatoryIssuer" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <bean-import resource="../security-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="security-policy.abstract">
+
+    <!-- Default inbound security processing for Shibboleth SSO profile. -->
+
+    <action-state id="ShibbolethSSOSecurityPolicy">
+        <evaluate expression="OptionalMessageReplaySecurityHandler" />
+        <evaluate expression="OptionalMessageLifetimeSecurityHandler" />
+        <evaluate expression="CheckMandatoryIssuer" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <bean-import resource="../security-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml1/sso-unsolicited-beans.xml shibboleth-idp/system/flows/saml/saml1/sso-unsolicited-beans.xml
--- shibboleth-idp/system/flows/saml/saml1/sso-unsolicited-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/sso-unsolicited-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,24 +1,24 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="net.shibboleth.idp.saml.saml1.profile.impl.IdPInitiatedSSORequestMessageDecoder" scope="prototype"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.LegacyShibboleth" />
-        </constructor-arg>
-    </bean>
-
-    <alias name="shibboleth.OutgoingSAML1SSOBindings" alias="shibboleth.OutgoingBindings"/>
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="net.shibboleth.idp.saml.saml1.profile.impl.IdPInitiatedSSORequestMessageDecoder" scope="prototype"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.LegacyShibboleth" />
+        </constructor-arg>
+    </bean>
+
+    <alias name="shibboleth.OutgoingSAML1SSOBindings" alias="shibboleth.OutgoingBindings"/>
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml1/sso-unsolicited-flow.xml shibboleth-idp/system/flows/saml/saml1/sso-unsolicited-flow.xml
--- shibboleth-idp/system/flows/saml/saml1/sso-unsolicited-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml1/sso-unsolicited-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml1.sso.abstract">
-
-    <bean-import resource="sso-unsolicited-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml1.sso.abstract">
+
+    <bean-import resource="sso-unsolicited-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/artifact-resolution-beans.xml shibboleth-idp/system/flows/saml/saml2/artifact-resolution-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/artifact-resolution-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/artifact-resolution-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,73 +1,73 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <import resource="common-beans.xml" />
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.ArtifactResolutionProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2artifact:ArtifactResolution}" />
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2SOAP" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
-
-    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
-
-    <bean id="AddArtifactResponseShell" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
-            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
-            p:messageType="#{T(org.opensaml.saml.saml2.core.ArtifactResponse).DEFAULT_ELEMENT_NAME}">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="ResolveArtifact"
-        class="org.opensaml.saml.saml2.profile.impl.ResolveArtifact" scope="prototype"
-        p:artifactMap-ref="shibboleth.SAMLArtifactMap"
-        p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple" />
-
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <list>
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
-                        p:signErrorResponses="%{idp.errors.signed:true}">
-                    <property name="activationCondition">
-                        <bean parent="shibboleth.Conditions.NOT">
-                            <constructor-arg>
-                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
-                            </constructor-arg>
-                        </bean>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <import resource="common-beans.xml" />
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.ArtifactResolutionProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2artifact:ArtifactResolution}" />
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2SOAP" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
+
+    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
+
+    <bean id="AddArtifactResponseShell" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
+            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
+            p:messageType="#{T(org.opensaml.saml.saml2.core.ArtifactResponse).DEFAULT_ELEMENT_NAME}">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="ResolveArtifact"
+        class="org.opensaml.saml.saml2.profile.impl.ResolveArtifact" scope="prototype"
+        p:artifactMap-ref="shibboleth.SAMLArtifactMap"
+        p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple" />
+
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <list>
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
+                        p:signErrorResponses="%{idp.errors.signed:true}">
+                    <property name="activationCondition">
+                        <bean parent="shibboleth.Conditions.NOT">
+                            <constructor-arg>
+                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
+                            </constructor-arg>
+                        </bean>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml2/artifact-resolution-flow.xml shibboleth-idp/system/flows/saml/saml2/artifact-resolution-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/artifact-resolution-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/artifact-resolution-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,65 +1,65 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="saml.abstract">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <!-- This picks up from the parent flow. -->
-    
-    <action-state id="DoProfileWork">
-        <evaluate expression="AddArtifactResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        
-        <evaluate expression="ResolveArtifact" />
-        
-        <evaluate expression="EncryptNameIDs" />
-        <evaluate expression="EncryptAttributes" />
-        <evaluate expression="SignAssertions" />
-
-        <!-- Need access to unencrypted assertion(s). -->
-        <evaluate expression="PostAssertionPopulateAuditContext" />
-
-        <evaluate expression="EncryptAssertions" />
-        
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-    </action-state>
-
-    <!-- Outbound message handling completes in the parent flow. -->
-
-    <!-- Error Response Generation -->
-
-    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
-
-    <action-state id="HandleError">
-        <on-entry>
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <evaluate expression="InitializeOutboundMessageContextForError" />
-        <evaluate expression="AddArtifactResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-    
-    <bean-import resource="artifact-resolution-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="saml.abstract">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <!-- This picks up from the parent flow. -->
+    
+    <action-state id="DoProfileWork">
+        <evaluate expression="AddArtifactResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        
+        <evaluate expression="ResolveArtifact" />
+        
+        <evaluate expression="EncryptNameIDs" />
+        <evaluate expression="EncryptAttributes" />
+        <evaluate expression="SignAssertions" />
+
+        <!-- Need access to unencrypted assertion(s). -->
+        <evaluate expression="PostAssertionPopulateAuditContext" />
+
+        <evaluate expression="EncryptAssertions" />
+        
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+    </action-state>
+
+    <!-- Outbound message handling completes in the parent flow. -->
+
+    <!-- Error Response Generation -->
+
+    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
+
+    <action-state id="HandleError">
+        <on-entry>
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <evaluate expression="InitializeOutboundMessageContextForError" />
+        <evaluate expression="AddArtifactResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+    
+    <bean-import resource="artifact-resolution-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/attribute-query-beans.xml shibboleth-idp/system/flows/saml/saml2/attribute-query-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/attribute-query-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/attribute-query-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,71 +1,71 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-    
-    <import resource="common-beans.xml" />
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.AttributeQueryProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2attrquery:AttributeQuery}" />
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2SOAP" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
-
-    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
-
-    <bean id="CopyNameIDFromRequest"
-            class="org.opensaml.saml.saml2.profile.impl.CopyNameIDFromRequest" scope="prototype" />
-
-    <bean id="AddSubjectConfirmationToSubjects"
-            class="org.opensaml.saml.saml2.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
-            p:method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches">
-        <property name="addressLookupStrategy"><null/></property>
-        <property name="inResponseToLookupStrategy"><null/></property>
-        <property name="lifetimeLookupStrategy"><null/></property>
-        <property name="recipientLookupStrategy"><null/></property>
-    </bean>
-
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <list>
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
-                        p:signErrorResponses="%{idp.errors.signed:true}">
-                    <property name="activationCondition">
-                        <bean parent="shibboleth.Conditions.NOT">
-                            <constructor-arg>
-                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
-                            </constructor-arg>
-                        </bean>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+    
+    <import resource="common-beans.xml" />
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.AttributeQueryProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2attrquery:AttributeQuery}" />
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2SOAP" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
+
+    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
+
+    <bean id="CopyNameIDFromRequest"
+            class="org.opensaml.saml.saml2.profile.impl.CopyNameIDFromRequest" scope="prototype" />
+
+    <bean id="AddSubjectConfirmationToSubjects"
+            class="org.opensaml.saml.saml2.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
+            p:method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches">
+        <property name="addressLookupStrategy"><null/></property>
+        <property name="inResponseToLookupStrategy"><null/></property>
+        <property name="lifetimeLookupStrategy"><null/></property>
+        <property name="recipientLookupStrategy"><null/></property>
+    </bean>
+
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <list>
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
+                        p:signErrorResponses="%{idp.errors.signed:true}">
+                    <property name="activationCondition">
+                        <bean parent="shibboleth.Conditions.NOT">
+                            <constructor-arg>
+                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
+                            </constructor-arg>
+                        </bean>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml2/attribute-query-flow.xml shibboleth-idp/system/flows/saml/saml2/attribute-query-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/attribute-query-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/attribute-query-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,74 +1,74 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="saml.abstract">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <!-- This picks up from the parent flow. -->
-    
-    <action-state id="DoProfileWork">
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="FilterAttributes" />
-        <evaluate expression="FilterByQueriedAttributes" />
-
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        
-        <evaluate expression="AddAttributeStatementToAssertion" />
-        <evaluate expression="CopyNameIDFromRequest" />
-        <evaluate expression="AddSubjectConfirmationToSubjects" />
-        <evaluate expression="AddNotBeforeConditionToAssertions" />
-        <evaluate expression="AddNotOnOrAfterConditionToAssertions" />
-        <evaluate expression="AddAudienceRestrictionToAssertions" />
-
-        <!-- Need access to unencrypted assertion(s). -->        
-        <evaluate expression="PostAssertionPopulateAuditContext" />
-        
-        <evaluate expression="EncryptNameIDs" />
-        <evaluate expression="EncryptAttributes" />
-        <evaluate expression="SignAssertions" />
-        <evaluate expression="EncryptAssertions" />
-        
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-    </action-state>
-
-    <!-- Outbound message handling completes in the parent flow. -->
-
-    <!-- Error Response Generation -->
-
-    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
-
-    <action-state id="HandleError">
-        <on-entry>
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <evaluate expression="InitializeOutboundMessageContextForError" />
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        <evaluate expression="AddStatusToResponse" />
-        
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-
-    <bean-import resource="attribute-query-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="saml.abstract">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <!-- This picks up from the parent flow. -->
+    
+    <action-state id="DoProfileWork">
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="FilterAttributes" />
+        <evaluate expression="FilterByQueriedAttributes" />
+
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        
+        <evaluate expression="AddAttributeStatementToAssertion" />
+        <evaluate expression="CopyNameIDFromRequest" />
+        <evaluate expression="AddSubjectConfirmationToSubjects" />
+        <evaluate expression="AddNotBeforeConditionToAssertions" />
+        <evaluate expression="AddNotOnOrAfterConditionToAssertions" />
+        <evaluate expression="AddAudienceRestrictionToAssertions" />
+
+        <!-- Need access to unencrypted assertion(s). -->        
+        <evaluate expression="PostAssertionPopulateAuditContext" />
+        
+        <evaluate expression="EncryptNameIDs" />
+        <evaluate expression="EncryptAttributes" />
+        <evaluate expression="SignAssertions" />
+        <evaluate expression="EncryptAssertions" />
+        
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+    </action-state>
+
+    <!-- Outbound message handling completes in the parent flow. -->
+
+    <!-- Error Response Generation -->
+
+    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
+
+    <action-state id="HandleError">
+        <on-entry>
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <evaluate expression="InitializeOutboundMessageContextForError" />
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        <evaluate expression="AddStatusToResponse" />
+        
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+
+    <bean-import resource="attribute-query-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/common-beans.xml shibboleth-idp/system/flows/saml/saml2/common-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/common-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/common-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,155 +1,155 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-    
-    <util:constant id="shibboleth.MetadataLookup.Protocol"
-        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
-
-    <util:constant id="shibboleth.MetadataLookup.Role"
-        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
-    
-    <bean id="AddResponseShell" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
-            p:overwriteExisting="true"
-            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
-            p:messageType="#{T(org.opensaml.saml.saml2.core.Response).DEFAULT_ELEMENT_NAME}">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="AddAuthnStatementToAssertion"
-            class="net.shibboleth.idp.saml.saml2.profile.impl.AddAuthnStatementToAssertion" scope="prototype"
-            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-        <property name="classRefLookupStrategy">
-            <bean class="net.shibboleth.idp.authn.principal.DefaultPrincipalDeterminationStrategy"
-                    c:type="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal"
-                    p:weightMap="#{getObject('shibboleth.AuthenticationPrincipalWeightMap')}">
-                <constructor-arg name="principal">
-                    <bean class="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal"
-                        c:classRef="#{T(org.opensaml.saml.saml2.core.AuthnContext).UNSPECIFIED_AUTHN_CTX}" />
-                </constructor-arg>
-            </bean>
-        </property>
-        <property name="activationCondition">
-            <bean parent="shibboleth.Conditions.NOT">
-                <constructor-arg>
-                    <bean parent="shibboleth.Conditions.Expression">
-                        <constructor-arg>
-                            <value>
-                                #profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/liberty/ssos')
-                            </value>
-                        </constructor-arg>
-                    </bean>
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-
-    <bean id="AddAttributeStatementToAssertion"
-            class="net.shibboleth.idp.saml.saml2.profile.impl.AddAttributeStatementToAssertion" scope="prototype">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
-        </property>
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="InitializeOutboundMessageContextForError"
-            class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContextForError" scope="prototype">
-        <property name="outboundBinding">
-            <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML2_SOAP11_BINDING_URI"/>
-        </property>
-    </bean>
-
-    <bean id="AddStatusToResponse"
-            class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse" scope="prototype"
-            p:statusMessage="An error occurred.">
-        <property name="detailedErrorsCondition">
-            <bean class="net.shibboleth.idp.profile.config.logic.DetailedErrorsPredicate" />
-        </property>
-        <property name="statusCodes">
-            <list>
-                <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.RESPONDER" />
-            </list>
-        </property>
-        <property name="statusCodesLookupStrategy">
-            <bean class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse.StatusCodeMappingFunction"
-                    c:mappings-ref="shibboleth.SAML2StatusMappings" />
-        </property>
-        <property name="statusMessageLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.SpringStatusMessageLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="AddPartialLogoutStatusToResponse"
-            class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse" scope="prototype">
-        <property name="statusCodes">
-            <list>
-                <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.SUCCESS" />
-                <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.PARTIAL_LOGOUT" />
-            </list>
-        </property>
-    </bean>
-    
-    <bean id="EncryptToSelfParametersStrategy" class="org.opensaml.saml.security.impl.InlineSelfEncryptionParametersStrategy">
-        <constructor-arg>
-            <bean class="net.shibboleth.idp.relyingparty.impl.EncryptionCredentialsResolver" 
-                c:_0-ref="shibboleth.RelyingPartyResolverService" />
-        </constructor-arg>
-        <constructor-arg>
-            <bean class="org.opensaml.xmlsec.impl.BasicEncryptionParametersResolver" />
-        </constructor-arg>
-        <constructor-arg ref="shibboleth.SelfEncryptionConfigurationLookup" />
-    </bean>
-
-    <bean id="EncryptNameIDs"
-            class="org.opensaml.saml.saml2.profile.impl.EncryptNameIDs" scope="prototype"
-            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple"
-            p:encryptToSelf-ref="shibboleth.Conditions.IssuingDelegatedAssertion"
-            p:encryptToSelfParametersStrategy-ref="EncryptToSelfParametersStrategy"
-            p:selfRecipientLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple" >
-        <property name="encryptionContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
-                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
-        </property>
-    </bean>
-
-    <bean id="EncryptAttributes"
-            class="org.opensaml.saml.saml2.profile.impl.EncryptAttributes" scope="prototype"
-            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
-        <property name="encryptionContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
-                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
-        </property>
-    </bean>
-    
-    <bean id="EncryptAssertions"
-            class="org.opensaml.saml.saml2.profile.impl.EncryptAssertions" scope="prototype"
-            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
-        <property name="encryptionContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
-                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+    
+    <util:constant id="shibboleth.MetadataLookup.Protocol"
+        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
+
+    <util:constant id="shibboleth.MetadataLookup.Role"
+        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
+    
+    <bean id="AddResponseShell" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
+            p:overwriteExisting="true"
+            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
+            p:messageType="#{T(org.opensaml.saml.saml2.core.Response).DEFAULT_ELEMENT_NAME}">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="AddAuthnStatementToAssertion"
+            class="net.shibboleth.idp.saml.saml2.profile.impl.AddAuthnStatementToAssertion" scope="prototype"
+            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+        <property name="classRefLookupStrategy">
+            <bean class="net.shibboleth.idp.authn.principal.DefaultPrincipalDeterminationStrategy"
+                    c:type="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal"
+                    p:weightMap="#{getObject('shibboleth.AuthenticationPrincipalWeightMap')}">
+                <constructor-arg name="principal">
+                    <bean class="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal"
+                        c:classRef="#{T(org.opensaml.saml.saml2.core.AuthnContext).UNSPECIFIED_AUTHN_CTX}" />
+                </constructor-arg>
+            </bean>
+        </property>
+        <property name="activationCondition">
+            <bean parent="shibboleth.Conditions.NOT">
+                <constructor-arg>
+                    <bean parent="shibboleth.Conditions.Expression">
+                        <constructor-arg>
+                            <value>
+                                #profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/liberty/ssos')
+                            </value>
+                        </constructor-arg>
+                    </bean>
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+
+    <bean id="AddAttributeStatementToAssertion"
+            class="net.shibboleth.idp.saml.saml2.profile.impl.AddAttributeStatementToAssertion" scope="prototype">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.saml.profile.config.logic.IncludeAttributeStatementPredicate" />
+        </property>
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="InitializeOutboundMessageContextForError"
+            class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContextForError" scope="prototype">
+        <property name="outboundBinding">
+            <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML2_SOAP11_BINDING_URI"/>
+        </property>
+    </bean>
+
+    <bean id="AddStatusToResponse"
+            class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse" scope="prototype"
+            p:statusMessage="An error occurred.">
+        <property name="detailedErrorsCondition">
+            <bean class="net.shibboleth.idp.profile.config.logic.DetailedErrorsPredicate" />
+        </property>
+        <property name="statusCodes">
+            <list>
+                <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.RESPONDER" />
+            </list>
+        </property>
+        <property name="statusCodesLookupStrategy">
+            <bean class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse.StatusCodeMappingFunction"
+                    c:mappings-ref="shibboleth.SAML2StatusMappings" />
+        </property>
+        <property name="statusMessageLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.SpringStatusMessageLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="AddPartialLogoutStatusToResponse"
+            class="org.opensaml.saml.saml2.profile.impl.AddStatusToResponse" scope="prototype">
+        <property name="statusCodes">
+            <list>
+                <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.SUCCESS" />
+                <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.PARTIAL_LOGOUT" />
+            </list>
+        </property>
+    </bean>
+    
+    <bean id="EncryptToSelfParametersStrategy" class="org.opensaml.saml.security.impl.InlineSelfEncryptionParametersStrategy">
+        <constructor-arg>
+            <bean class="net.shibboleth.idp.relyingparty.impl.EncryptionCredentialsResolver" 
+                c:_0-ref="shibboleth.RelyingPartyResolverService" />
+        </constructor-arg>
+        <constructor-arg>
+            <bean class="org.opensaml.xmlsec.impl.BasicEncryptionParametersResolver" />
+        </constructor-arg>
+        <constructor-arg ref="shibboleth.SelfEncryptionConfigurationLookup" />
+    </bean>
+
+    <bean id="EncryptNameIDs"
+            class="org.opensaml.saml.saml2.profile.impl.EncryptNameIDs" scope="prototype"
+            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple"
+            p:encryptToSelf-ref="shibboleth.Conditions.IssuingDelegatedAssertion"
+            p:encryptToSelfParametersStrategy-ref="EncryptToSelfParametersStrategy"
+            p:selfRecipientLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple" >
+        <property name="encryptionContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
+                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
+        </property>
+    </bean>
+
+    <bean id="EncryptAttributes"
+            class="org.opensaml.saml.saml2.profile.impl.EncryptAttributes" scope="prototype"
+            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
+        <property name="encryptionContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
+                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
+        </property>
+    </bean>
+    
+    <bean id="EncryptAssertions"
+            class="org.opensaml.saml.saml2.profile.impl.EncryptAssertions" scope="prototype"
+            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
+        <property name="encryptionContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
+                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml2/ecp-security-flow.xml shibboleth-idp/system/flows/saml/saml2/ecp-security-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/ecp-security-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/ecp-security-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,26 +1,26 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="security-policy.abstract">
-
-    <!-- Default inbound security processing for SAML 2 ECP profile. -->
-
-    <action-state id="SAML2ECPSecurityPolicy">
-        <evaluate expression="ReceivedEndpointSecurityHandler" />
-        <evaluate expression="MessageReplaySecurityHandler" />
-        <evaluate expression="MessageLifetimeSecurityHandler" />
-        <evaluate expression="SAML2AuthnRequestsSignedSecurityHandler" />
-        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
-        <evaluate expression="SAML2HTTPRedirectDeflateSignatureSecurityHandler" />
-        <evaluate expression="SAML2HTTPPostSimpleSignSecurityHandler" />
-        <evaluate expression="CheckMandatoryIssuer" />
-        <evaluate expression="ExtractChannelBindingsHeadersHandler" />
-        <evaluate expression="ExtractChannelBindingsExtensionsHandler" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="proceed" />
-    </action-state>
-    
-    <bean-import resource="../security-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="security-policy.abstract">
+
+    <!-- Default inbound security processing for SAML 2 ECP profile. -->
+
+    <action-state id="SAML2ECPSecurityPolicy">
+        <evaluate expression="ReceivedEndpointSecurityHandler" />
+        <evaluate expression="MessageReplaySecurityHandler" />
+        <evaluate expression="MessageLifetimeSecurityHandler" />
+        <evaluate expression="SAML2AuthnRequestsSignedSecurityHandler" />
+        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
+        <evaluate expression="SAML2HTTPRedirectDeflateSignatureSecurityHandler" />
+        <evaluate expression="SAML2HTTPPostSimpleSignSecurityHandler" />
+        <evaluate expression="CheckMandatoryIssuer" />
+        <evaluate expression="ExtractChannelBindingsHeadersHandler" />
+        <evaluate expression="ExtractChannelBindingsExtensionsHandler" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="proceed" />
+    </action-state>
+    
+    <bean-import resource="../security-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-beans.xml shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,177 +1,177 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.idwsf.profile.config.SSOSProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
-        p:browserProfile="false" />
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.LibertyHTTPSOAP11Decoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.LibertySOAP" />
-        </constructor-arg>
-    </bean>
-    
-    <alias name="shibboleth.OutgoingIDWSFSSOSBindings" alias="shibboleth.OutgoingBindings"/>
-    
-    <bean id="shibboleth.BindingSpecificMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <util:list>
-                <!-- Liberty SOAP binding-specific handlers. -->
-                <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.AddFrameworkHandler" scope="prototype" />
-                <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.AddSenderHandler" scope="prototype" />
-                
-                <!-- Standard WS-Addressing and WS-Security handlers. -->
-                <bean class="org.opensaml.soap.wssecurity.messaging.impl.AddTimestampHandler" scope="prototype" />
-                <bean class="org.opensaml.soap.wsaddressing.messaging.impl.AddMessageIDHandler" scope="prototype" />
-                <bean class="org.opensaml.soap.wsaddressing.messaging.impl.AddRelatesToHandler" scope="prototype" />
-                <bean class="org.opensaml.soap.wsaddressing.messaging.impl.AddActionHandler" scope="prototype">
-                    <property name="actionURI">
-                        <util:constant static-field="net.shibboleth.idp.saml.saml2.profile.delegation.impl.LibertyConstants.SSOS_RESPONSE_WSA_ACTION_URI" />
-                    </property>
-                </bean>
-                
-                <!-- ECP-specific handlers. -->
-                <bean class="org.opensaml.saml.saml2.binding.impl.AddECPResponseHeaderHandler" scope="prototype" />
-                <!-- TODO Since this is really sub-profile of ECP, should we include the standard ECP stuff below?.
-                     Some of this is new since the original delegation work. -->
-                <!--
-                <bean class="org.opensaml.saml.saml2.binding.impl.AddRelayStateHeaderHandler" scope="prototype" />
-                <bean class="org.opensaml.saml.saml2.binding.impl.AddRequestAuthenticatedHeaderHandler" scope="prototype" />
-                <bean class="org.opensaml.saml.saml2.binding.impl.AddGeneratedKeyHeaderHandler" scope="prototype" />
-                <bean class="org.opensaml.saml.common.binding.impl.AddChannelBindingsHeaderHandler" scope="prototype" />
-                -->
-            </util:list>
-        </property>
-    </bean>
-    
-    <util:constant id="shibboleth.Delegation.MetadataLookup.Protocol"
-        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
-
-    <util:constant id="shibboleth.Delegation.MetadataLookup.Role"
-        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
-    
-    <bean id="PopulateInboundMessageContextWithSAMLSelf" 
-        class="net.shibboleth.idp.saml.profile.impl.PopulateInboundMessageContextWithSAMLSelf" scope="prototype" />
-    
-    <bean id="ProcessFrameworkHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.ProcessFrameworkHandler" />
-        </constructor-arg>
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="not"
-                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
-        </property>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE" />
-        </property>
-    </bean>
-    
-    <bean id="ProcessSenderHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.ProcessSenderHandler" />
-        </constructor-arg>
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="not"
-                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
-        </property>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE" />
-        </property>
-    </bean>
-    
-    <bean id="ExtractMessageIDHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.soap.wsaddressing.messaging.impl.ExtractMessageIDHandler" />
-        </constructor-arg>
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="not"
-                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
-        </property>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE" />
-        </property>
-    </bean>
-    
-    <bean id="ValidateActionHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.soap.wsaddressing.messaging.impl.ValidateActionHandler">
-                <property name="expectedActionURI">
-                    <util:constant static-field="net.shibboleth.idp.saml.saml2.profile.delegation.impl.LibertyConstants.SSOS_AUTHN_REQUEST_WSA_ACTION_URI" />
-                </property>
-            </bean>
-        </constructor-arg>
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="not"
-                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
-        </property>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE" />
-        </property>
-    </bean>
-    
-    <bean id="SAMLProtocolAndRoleForPresenter"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.impl.SAMLProtocolAndRoleHandler" scope="prototype"
-                p:entityContextClass="org.opensaml.saml.common.messaging.context.SAMLPresenterEntityContext"
-                p:protocol-ref="shibboleth.Delegation.MetadataLookup.Protocol"
-                p:role-ref="shibboleth.Delegation.MetadataLookup.Role" />
-        </constructor-arg>
-    </bean>
-    
-    <bean id="SAMLMetadataLookupForPresenter"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler" scope="prototype"
-                p:entityContextClass="org.opensaml.saml.common.messaging.context.SAMLPresenterEntityContext">
-                <property name="roleDescriptorResolver">
-                    <bean class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
-                        c:mdResolver-ref="shibboleth.MetadataResolver" />
-                </property>
-            </bean>
-        </constructor-arg>
-    </bean>
-    
-    <bean id="LibertyOutboundContexts" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.PopulateOutboundMessageContext" scope="prototype" />
-    
-    <bean id="PopulateLibertyContext" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.PopulateLibertyContext" scope="prototype" />
-    
-    <bean id="EvaluateDelegationPolicy" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.EvaluateDelegationPolicy" scope="prototype" />
-    
-    <bean id="DecryptDelegatedAssertionNameID" class="org.opensaml.saml.saml2.profile.impl.DecryptNameIDs" scope="prototype">
-        <property name="messageLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.DelegatedAssertionLookupStrategy" />
-        </property>
-    </bean>
-    
-    <bean id="ProcessDelegatedAssertion" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.ProcessDelegatedAssertion" scope="prototype" />
-    
-    <bean id="FinalizeSAMLTokenProcessing" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.FinalizeSAMLTokenProcessing" scope="prototype" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.idwsf.profile.config.SSOSProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
+        p:browserProfile="false" />
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.LibertyHTTPSOAP11Decoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.LibertySOAP" />
+        </constructor-arg>
+    </bean>
+    
+    <alias name="shibboleth.OutgoingIDWSFSSOSBindings" alias="shibboleth.OutgoingBindings"/>
+    
+    <bean id="shibboleth.BindingSpecificMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <util:list>
+                <!-- Liberty SOAP binding-specific handlers. -->
+                <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.AddFrameworkHandler" scope="prototype" />
+                <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.AddSenderHandler" scope="prototype" />
+                
+                <!-- Standard WS-Addressing and WS-Security handlers. -->
+                <bean class="org.opensaml.soap.wssecurity.messaging.impl.AddTimestampHandler" scope="prototype" />
+                <bean class="org.opensaml.soap.wsaddressing.messaging.impl.AddMessageIDHandler" scope="prototype" />
+                <bean class="org.opensaml.soap.wsaddressing.messaging.impl.AddRelatesToHandler" scope="prototype" />
+                <bean class="org.opensaml.soap.wsaddressing.messaging.impl.AddActionHandler" scope="prototype">
+                    <property name="actionURI">
+                        <util:constant static-field="net.shibboleth.idp.saml.saml2.profile.delegation.impl.LibertyConstants.SSOS_RESPONSE_WSA_ACTION_URI" />
+                    </property>
+                </bean>
+                
+                <!-- ECP-specific handlers. -->
+                <bean class="org.opensaml.saml.saml2.binding.impl.AddECPResponseHeaderHandler" scope="prototype" />
+                <!-- TODO Since this is really sub-profile of ECP, should we include the standard ECP stuff below?.
+                     Some of this is new since the original delegation work. -->
+                <!--
+                <bean class="org.opensaml.saml.saml2.binding.impl.AddRelayStateHeaderHandler" scope="prototype" />
+                <bean class="org.opensaml.saml.saml2.binding.impl.AddRequestAuthenticatedHeaderHandler" scope="prototype" />
+                <bean class="org.opensaml.saml.saml2.binding.impl.AddGeneratedKeyHeaderHandler" scope="prototype" />
+                <bean class="org.opensaml.saml.common.binding.impl.AddChannelBindingsHeaderHandler" scope="prototype" />
+                -->
+            </util:list>
+        </property>
+    </bean>
+    
+    <util:constant id="shibboleth.Delegation.MetadataLookup.Protocol"
+        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
+
+    <util:constant id="shibboleth.Delegation.MetadataLookup.Role"
+        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
+    
+    <bean id="PopulateInboundMessageContextWithSAMLSelf" 
+        class="net.shibboleth.idp.saml.profile.impl.PopulateInboundMessageContextWithSAMLSelf" scope="prototype" />
+    
+    <bean id="ProcessFrameworkHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.ProcessFrameworkHandler" />
+        </constructor-arg>
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="not"
+                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
+        </property>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE" />
+        </property>
+    </bean>
+    
+    <bean id="ProcessSenderHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.messaging.impl.ProcessSenderHandler" />
+        </constructor-arg>
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="not"
+                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
+        </property>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE" />
+        </property>
+    </bean>
+    
+    <bean id="ExtractMessageIDHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.soap.wsaddressing.messaging.impl.ExtractMessageIDHandler" />
+        </constructor-arg>
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="not"
+                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
+        </property>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE" />
+        </property>
+    </bean>
+    
+    <bean id="ValidateActionHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.soap.wsaddressing.messaging.impl.ValidateActionHandler">
+                <property name="expectedActionURI">
+                    <util:constant static-field="net.shibboleth.idp.saml.saml2.profile.delegation.impl.LibertyConstants.SSOS_AUTHN_REQUEST_WSA_ACTION_URI" />
+                </property>
+            </bean>
+        </constructor-arg>
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="not"
+                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
+        </property>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE" />
+        </property>
+    </bean>
+    
+    <bean id="SAMLProtocolAndRoleForPresenter"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.impl.SAMLProtocolAndRoleHandler" scope="prototype"
+                p:entityContextClass="org.opensaml.saml.common.messaging.context.SAMLPresenterEntityContext"
+                p:protocol-ref="shibboleth.Delegation.MetadataLookup.Protocol"
+                p:role-ref="shibboleth.Delegation.MetadataLookup.Role" />
+        </constructor-arg>
+    </bean>
+    
+    <bean id="SAMLMetadataLookupForPresenter"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler" scope="prototype"
+                p:entityContextClass="org.opensaml.saml.common.messaging.context.SAMLPresenterEntityContext">
+                <property name="roleDescriptorResolver">
+                    <bean class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
+                        c:mdResolver-ref="shibboleth.MetadataResolver" />
+                </property>
+            </bean>
+        </constructor-arg>
+    </bean>
+    
+    <bean id="LibertyOutboundContexts" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.PopulateOutboundMessageContext" scope="prototype" />
+    
+    <bean id="PopulateLibertyContext" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.PopulateLibertyContext" scope="prototype" />
+    
+    <bean id="EvaluateDelegationPolicy" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.EvaluateDelegationPolicy" scope="prototype" />
+    
+    <bean id="DecryptDelegatedAssertionNameID" class="org.opensaml.saml.saml2.profile.impl.DecryptNameIDs" scope="prototype">
+        <property name="messageLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.DelegatedAssertionLookupStrategy" />
+        </property>
+    </bean>
+    
+    <bean id="ProcessDelegatedAssertion" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.ProcessDelegatedAssertion" scope="prototype" />
+    
+    <bean id="FinalizeSAMLTokenProcessing" class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.FinalizeSAMLTokenProcessing" scope="prototype" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-flow.xml shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,91 +1,91 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.sso.abstract">
-      
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-      
-    <action-state id="DecodeMessage">
-        <!-- Here we override and "splice in" PostDecodeMessage to run after the this action defined in the parent flow -->
-        <transition on="proceed" to="PostDecodeMessage" />
-    </action-state>
-
-    <action-state id="PostDecodeMessage">
-        <evaluate expression="PopulateInboundMessageContextWithSAMLSelf" />
-        <evaluate expression="ExtractMessageIDHandler" />
-        <evaluate expression="ValidateActionHandler" />
-        <evaluate expression="ProcessFrameworkHandler" />
-        <evaluate expression="ProcessSenderHandler" />
-        
-        <!-- Note: SAMLPresenterContext entityID is populated by ProcessSenderHandler, so the ordering here is important. -->
-        <evaluate expression="SAMLProtocolAndRoleForPresenter" />
-        <evaluate expression="SAMLMetadataLookupForPresenter" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <!-- If parent DecodeMessage's transition changes on 'proceed', this needs to also change. -->
-        <transition on="proceed" to="CheckInboundInterceptContext" />
-    </action-state>
-    
-    <action-state id="OutboundContextsAndSecurityParameters">
-        <!-- Here we override and "splice in" LibertyOutboundContexts to run after the this action defined in the parent flow -->
-        <transition on="proceed" to="LibertyOutboundContexts" />
-    </action-state>
-    
-    <action-state id="LibertyOutboundContexts">
-        <evaluate expression="LibertyOutboundContexts" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <!-- If parent OutboundContextsAndSecurityParameters' transition changes on 'proceed', this needs to also change. -->
-        <transition on="proceed" to="ExtractSubject" />
-    </action-state>
-    
-    
-    
-    <action-state id="DoProfileWork">
-        <!-- Here we override, "splice in" actions to run after the this action defined in the parent flow.
-             We also "short-circuit" the entire authN and c14N process defined in the parent flow in favor of simpler inline approach here."  -->
-        <transition on="proceed" to="ProcessSAMLToken" />
-    </action-state>
-    
-    <action-state id="ProcessSAMLToken">
-        <evaluate expression="PopulateLibertyContext" />
-        <evaluate expression="EvaluateDelegationPolicy" />
-        <evaluate expression="DecryptDelegatedAssertionNameID" />
-        <evaluate expression="ProcessDelegatedAssertion" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CallSAMLSubjectCanonicalization" />
-    </action-state>
-    
-    <subflow-state id="CallSAMLSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="FinalizeSAMLTokenProcessing" />
-    </subflow-state>
-    
-    <action-state id="FinalizeSAMLTokenProcessing">
-        <evaluate expression="FinalizeSAMLTokenProcessing" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ResolveAttributes" />
-    </action-state>
-    
-    <action-state id="EncryptAndSign">
-        <!-- Here we override and "splice in" ReturnToParentFlow to run after the this action defined in the parent flow -->
-        <transition on="proceed" to="ReturnToParentFlow" />
-    </action-state>
-
-    <bean-import resource="idwsf-ssos-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.sso.abstract">
+      
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+      
+    <action-state id="DecodeMessage">
+        <!-- Here we override and "splice in" PostDecodeMessage to run after the this action defined in the parent flow -->
+        <transition on="proceed" to="PostDecodeMessage" />
+    </action-state>
+
+    <action-state id="PostDecodeMessage">
+        <evaluate expression="PopulateInboundMessageContextWithSAMLSelf" />
+        <evaluate expression="ExtractMessageIDHandler" />
+        <evaluate expression="ValidateActionHandler" />
+        <evaluate expression="ProcessFrameworkHandler" />
+        <evaluate expression="ProcessSenderHandler" />
+        
+        <!-- Note: SAMLPresenterContext entityID is populated by ProcessSenderHandler, so the ordering here is important. -->
+        <evaluate expression="SAMLProtocolAndRoleForPresenter" />
+        <evaluate expression="SAMLMetadataLookupForPresenter" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <!-- If parent DecodeMessage's transition changes on 'proceed', this needs to also change. -->
+        <transition on="proceed" to="CheckInboundInterceptContext" />
+    </action-state>
+    
+    <action-state id="OutboundContextsAndSecurityParameters">
+        <!-- Here we override and "splice in" LibertyOutboundContexts to run after the this action defined in the parent flow -->
+        <transition on="proceed" to="LibertyOutboundContexts" />
+    </action-state>
+    
+    <action-state id="LibertyOutboundContexts">
+        <evaluate expression="LibertyOutboundContexts" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <!-- If parent OutboundContextsAndSecurityParameters' transition changes on 'proceed', this needs to also change. -->
+        <transition on="proceed" to="ExtractSubject" />
+    </action-state>
+    
+    
+    
+    <action-state id="DoProfileWork">
+        <!-- Here we override, "splice in" actions to run after the this action defined in the parent flow.
+             We also "short-circuit" the entire authN and c14N process defined in the parent flow in favor of simpler inline approach here."  -->
+        <transition on="proceed" to="ProcessSAMLToken" />
+    </action-state>
+    
+    <action-state id="ProcessSAMLToken">
+        <evaluate expression="PopulateLibertyContext" />
+        <evaluate expression="EvaluateDelegationPolicy" />
+        <evaluate expression="DecryptDelegatedAssertionNameID" />
+        <evaluate expression="ProcessDelegatedAssertion" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CallSAMLSubjectCanonicalization" />
+    </action-state>
+    
+    <subflow-state id="CallSAMLSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="FinalizeSAMLTokenProcessing" />
+    </subflow-state>
+    
+    <action-state id="FinalizeSAMLTokenProcessing">
+        <evaluate expression="FinalizeSAMLTokenProcessing" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ResolveAttributes" />
+    </action-state>
+    
+    <action-state id="EncryptAndSign">
+        <!-- Here we override and "splice in" ReturnToParentFlow to run after the this action defined in the parent flow -->
+        <transition on="proceed" to="ReturnToParentFlow" />
+    </action-state>
+
+    <bean-import resource="idwsf-ssos-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-security-beans.xml shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-security-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-security-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-security-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,109 +1,109 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-       
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-    
-    <import resource="../security-beans.xml" />
-    
-    <bean id="SAMLMDClientCertAuthSecurityHandlerForPresenter"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.security.impl.SAMLMDClientCertAuthSecurityHandler" scope="prototype"
-                    p:httpServletRequest-ref="shibboleth.HttpServletRequest" 
-                    p:entityContextClass="org.opensaml.saml.common.messaging.context.SAMLPresenterEntityContext" />
-        </constructor-arg>
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="not"
-                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
-        </property>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-    
-    <bean id="CheckMandatoryAuthenticationForPresenter"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryAuthentication" scope="prototype">
-                <property name="authenticationLookupStrategy">
-                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextAuthenticationFunction" 
-                        p:entityContextClass="org.opensaml.saml.common.messaging.context.SAMLPresenterEntityContext" />
-                </property>
-            </bean>
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-    
-    <bean id="shibboleth.Delegation.AssertionSignatureTrustEngine" class="org.opensaml.xmlsec.signature.support.impl.ExplicitKeySignatureTrustEngine">
-        <constructor-arg>
-            <bean class="net.shibboleth.idp.relyingparty.impl.SigningCredentialsResolver" 
-                c:_0-ref="shibboleth.RelyingPartyResolverService" />
-        </constructor-arg>
-        <constructor-arg ref="shibboleth.KeyInfoCredentialResolver" />
-    </bean>
-    
-    <bean id="shibboleth.Delegation.SAML2AssertionTokenValidator" class="org.opensaml.saml.saml2.assertion.SAML20AssertionValidator">
-        <!-- Condition validators. -->
-        <constructor-arg index="0">
-            <util:list>
-                <bean class="org.opensaml.saml.saml2.assertion.impl.AudienceRestrictionConditionValidator" />
-                <bean class="org.opensaml.saml.saml2.assertion.impl.DelegationRestrictionConditionValidator" />
-                <bean class="org.opensaml.saml.saml2.assertion.impl.OneTimeUseConditionValidator">
-                    <constructor-arg ref="shibboleth.ReplayCache" />
-                    <constructor-arg value="#{null}" />
-                </bean>
-            </util:list>
-        </constructor-arg>
-        <!-- SubjectConfirmation validators. -->
-        <constructor-arg index="1">
-            <util:list>
-                <bean class="org.opensaml.saml.saml2.assertion.impl.HolderOfKeySubjectConfirmationValidator" />
-            </util:list>
-        </constructor-arg>
-        <!-- Statement validators. -->
-        <constructor-arg index="2">
-            <util:list>
-                <!--Expected to be empty.  -->
-            </util:list>
-        </constructor-arg>
-        <constructor-arg index="3" ref="shibboleth.Delegation.AssertionSignatureTrustEngine" />
-        <constructor-arg index="4">
-            <bean class="org.opensaml.saml.security.impl.SAMLSignatureProfileValidator" />
-        </constructor-arg>
-    </bean>
-    
-    <bean id="WSSecuritySAML20AssertionTokenSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.saml2.wssecurity.messaging.impl.WSSecuritySAML20AssertionTokenSecurityHandler" scope="prototype"
-                    p:invalidFatal="true" 
-                    p:httpServletRequest-ref="shibboleth.HttpServletRequest" 
-                    p:assertionValidator-ref="shibboleth.Delegation.SAML2AssertionTokenValidator" />
-        </constructor-arg>
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="not"
-                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
-        </property>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+       
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+    
+    <import resource="../security-beans.xml" />
+    
+    <bean id="SAMLMDClientCertAuthSecurityHandlerForPresenter"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.security.impl.SAMLMDClientCertAuthSecurityHandler" scope="prototype"
+                    p:httpServletRequest-ref="shibboleth.HttpServletRequest" 
+                    p:entityContextClass="org.opensaml.saml.common.messaging.context.SAMLPresenterEntityContext" />
+        </constructor-arg>
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="not"
+                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
+        </property>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+    
+    <bean id="CheckMandatoryAuthenticationForPresenter"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryAuthentication" scope="prototype">
+                <property name="authenticationLookupStrategy">
+                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextAuthenticationFunction" 
+                        p:entityContextClass="org.opensaml.saml.common.messaging.context.SAMLPresenterEntityContext" />
+                </property>
+            </bean>
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+    
+    <bean id="shibboleth.Delegation.AssertionSignatureTrustEngine" class="org.opensaml.xmlsec.signature.support.impl.ExplicitKeySignatureTrustEngine">
+        <constructor-arg>
+            <bean class="net.shibboleth.idp.relyingparty.impl.SigningCredentialsResolver" 
+                c:_0-ref="shibboleth.RelyingPartyResolverService" />
+        </constructor-arg>
+        <constructor-arg ref="shibboleth.KeyInfoCredentialResolver" />
+    </bean>
+    
+    <bean id="shibboleth.Delegation.SAML2AssertionTokenValidator" class="org.opensaml.saml.saml2.assertion.SAML20AssertionValidator">
+        <!-- Condition validators. -->
+        <constructor-arg index="0">
+            <util:list>
+                <bean class="org.opensaml.saml.saml2.assertion.impl.AudienceRestrictionConditionValidator" />
+                <bean class="org.opensaml.saml.saml2.assertion.impl.DelegationRestrictionConditionValidator" />
+                <bean class="org.opensaml.saml.saml2.assertion.impl.OneTimeUseConditionValidator">
+                    <constructor-arg ref="shibboleth.ReplayCache" />
+                    <constructor-arg value="#{null}" />
+                </bean>
+            </util:list>
+        </constructor-arg>
+        <!-- SubjectConfirmation validators. -->
+        <constructor-arg index="1">
+            <util:list>
+                <bean class="org.opensaml.saml.saml2.assertion.impl.HolderOfKeySubjectConfirmationValidator" />
+            </util:list>
+        </constructor-arg>
+        <!-- Statement validators. -->
+        <constructor-arg index="2">
+            <util:list>
+                <!--Expected to be empty.  -->
+            </util:list>
+        </constructor-arg>
+        <constructor-arg index="3" ref="shibboleth.Delegation.AssertionSignatureTrustEngine" />
+        <constructor-arg index="4">
+            <bean class="org.opensaml.saml.security.impl.SAMLSignatureProfileValidator" />
+        </constructor-arg>
+    </bean>
+    
+    <bean id="WSSecuritySAML20AssertionTokenSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.saml2.wssecurity.messaging.impl.WSSecuritySAML20AssertionTokenSecurityHandler" scope="prototype"
+                    p:invalidFatal="true" 
+                    p:httpServletRequest-ref="shibboleth.HttpServletRequest" 
+                    p:assertionValidator-ref="shibboleth.Delegation.SAML2AssertionTokenValidator" />
+        </constructor-arg>
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="not"
+                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
+        </property>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-security-flow.xml shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-security-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-security-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/idwsf-ssos-security-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,28 +1,28 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="security-policy.abstract">
-
-    <!-- Default inbound security processing for IDWSF SSOS SAML 2 delegation profile. -->
-
-    <action-state id="IDWSFSSOSSecurityPolicy">
-        <!-- First do everything related to client TLS, the SOAP binding and WS-Security processing. -->
-        <evaluate expression="SAMLMDClientCertAuthSecurityHandlerForPresenter" />
-        <evaluate expression="CheckMandatoryAuthenticationForPresenter" />
-        
-        <evaluate expression="WSSecuritySAML20AssertionTokenSecurityHandler" />
-        
-        <!-- Now continue with standard SAML protocol message processing. -->
-        <evaluate expression="ReceivedEndpointSecurityHandler" />
-        <evaluate expression="MessageReplaySecurityHandler" />
-        <evaluate expression="MessageLifetimeSecurityHandler" />
-        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
-        <evaluate expression="CheckMandatoryIssuer" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-    
-    <bean-import resource="idwsf-ssos-security-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="security-policy.abstract">
+
+    <!-- Default inbound security processing for IDWSF SSOS SAML 2 delegation profile. -->
+
+    <action-state id="IDWSFSSOSSecurityPolicy">
+        <!-- First do everything related to client TLS, the SOAP binding and WS-Security processing. -->
+        <evaluate expression="SAMLMDClientCertAuthSecurityHandlerForPresenter" />
+        <evaluate expression="CheckMandatoryAuthenticationForPresenter" />
+        
+        <evaluate expression="WSSecuritySAML20AssertionTokenSecurityHandler" />
+        
+        <!-- Now continue with standard SAML protocol message processing. -->
+        <evaluate expression="ReceivedEndpointSecurityHandler" />
+        <evaluate expression="MessageReplaySecurityHandler" />
+        <evaluate expression="MessageLifetimeSecurityHandler" />
+        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
+        <evaluate expression="CheckMandatoryIssuer" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+    
+    <bean-import resource="idwsf-ssos-security-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-back-beans.xml shibboleth-idp/system/flows/saml/saml2/slo-back-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-back-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-back-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,81 +1,81 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-        
-    <import resource="common-beans.xml" />
-
-    <util:constant id="shibboleth.EndpointType"
-        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2slo:Logout}" />
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2SOAP" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
-
-    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
-
-    <bean id="ProcessLogoutRequest"
-        class="net.shibboleth.idp.saml.saml2.profile.impl.ProcessLogoutRequest" scope="prototype"
-        p:sessionManager-ref="shibboleth.SessionManager"
-        p:sessionResolver-ref="shibboleth.SessionManager" />
-    
-    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.LogoutAuditExtractors') ?: getObject('shibboleth.DefaultLogoutAuditExtractors')}" />
-    
-    <!--
-    TODO: will be used when logout propagation is enabled
-    <bean id="PopulateMultiRPContextFromLogoutContext"
-        class="net.shibboleth.idp.session.impl.PopulateMultiRPContextFromLogoutContext" scope="prototype"
-        p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
-        p:sessionTypeProtocolMap-ref="shibboleth.SessionTypeProtocolMap" />
-    -->
-    
-    <bean id="AddLogoutResponse" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
-            p:overwriteExisting="true"
-            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
-            p:messageType="#{T(org.opensaml.saml.saml2.core.LogoutResponse).DEFAULT_ELEMENT_NAME}">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <util:list>
-                <!-- TODO outbound handlers -->
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler"
-                    scope="prototype" p:signErrorResponses="%{idp.errors.signed:true}" />
-            </util:list>
-        </property>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+        
+    <import resource="common-beans.xml" />
+
+    <util:constant id="shibboleth.EndpointType"
+        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2slo:Logout}" />
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2SOAP" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.HttpServletRequestMessageChannelSecurity" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:defaultPortInsecure="%{idp.security.defaultPortInsecure:true}" />
+
+    <alias name="shibboleth.OutgoingSOAPBindings" alias="shibboleth.OutgoingBindings"/>
+
+    <bean id="ProcessLogoutRequest"
+        class="net.shibboleth.idp.saml.saml2.profile.impl.ProcessLogoutRequest" scope="prototype"
+        p:sessionManager-ref="shibboleth.SessionManager"
+        p:sessionResolver-ref="shibboleth.SessionManager" />
+    
+    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.LogoutAuditExtractors') ?: getObject('shibboleth.DefaultLogoutAuditExtractors')}" />
+    
+    <!--
+    TODO: will be used when logout propagation is enabled
+    <bean id="PopulateMultiRPContextFromLogoutContext"
+        class="net.shibboleth.idp.session.impl.PopulateMultiRPContextFromLogoutContext" scope="prototype"
+        p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
+        p:sessionTypeProtocolMap-ref="shibboleth.SessionTypeProtocolMap" />
+    -->
+    
+    <bean id="AddLogoutResponse" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
+            p:overwriteExisting="true"
+            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
+            p:messageType="#{T(org.opensaml.saml.saml2.core.LogoutResponse).DEFAULT_ELEMENT_NAME}">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <util:list>
+                <!-- TODO outbound handlers -->
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler"
+                    scope="prototype" p:signErrorResponses="%{idp.errors.signed:true}" />
+            </util:list>
+        </property>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-back-flow.xml shibboleth-idp/system/flows/saml/saml2/slo-back-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-back-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-back-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,106 +1,106 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml.abstract">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <action-state id="DoProfileWork">
-        <evaluate expression="ProcessLogoutRequest" />
-        <evaluate expression="LogoutPopulateAuditContext" />
-        <!--
-        TODO: will be used when logout propagation is enabled
-        <evaluate expression="PopulateMultiRPContextFromLogoutContext" />
-        -->
-
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CheckAsync" />
-    </action-state>
-
-    <decision-state id="CheckAsync">
-        <if test="opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions() == null or opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions().getUnknownXMLObjects(T(org.opensaml.saml.ext.saml2aslo.Asynchronous).DEFAULT_ELEMENT_NAME).isEmpty()"
-            then="BuildResponse" else="DoAsync" />
-    </decision-state>
-    
-    <action-state id="DoAsync">
-        <evaluate expression="'AsyncLogout'" />
-        <transition to="HandleSuccessWithView" />
-    </action-state>
-    
-    <end-state id="HandleSuccessWithView" view="#{MapEventToView.apply(currentEvent)}">
-        <on-entry>
-            <evaluate expression="ErrorViewPopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-    </end-state>
-    
-    <action-state id="BuildResponse">
-        <evaluate expression="AddLogoutResponse" />
-        <evaluate expression="AddInResponseToToResponse" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CheckForPartialLogout" />
-    </action-state>
-    
-    <!-- TODO: this partial logout machinery will change once propagation exists -->
-    
-    <decision-state id="CheckForPartialLogout">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext), true).getSessionMap().isEmpty()"
-            then="CompleteResponse" else="PartialLogout" />
-    </decision-state>
-    
-    <action-state id="PartialLogout">
-        <evaluate expression="AddPartialLogoutStatusToResponse" />
-        
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="CompleteResponse" />
-    </action-state>
-
-    <action-state id="CompleteResponse">
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        <transition on="proceed" to="ReturnToParentFlow" />
-    </action-state>
-
-    <!-- Error Response Generation -->
-
-    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
-
-    <action-state id="HandleError">
-        <on-entry>
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <evaluate expression="InitializeOutboundMessageContextForError" />
-        <evaluate expression="AddLogoutResponse" />
-        <evaluate expression="AddInResponseToToResponse" />
-        <evaluate expression="AddStatusToResponse" />
-        
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-
-    <bean-import resource="slo-back-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml.abstract">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <action-state id="DoProfileWork">
+        <evaluate expression="ProcessLogoutRequest" />
+        <evaluate expression="LogoutPopulateAuditContext" />
+        <!--
+        TODO: will be used when logout propagation is enabled
+        <evaluate expression="PopulateMultiRPContextFromLogoutContext" />
+        -->
+
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CheckAsync" />
+    </action-state>
+
+    <decision-state id="CheckAsync">
+        <if test="opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions() == null or opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions().getUnknownXMLObjects(T(org.opensaml.saml.ext.saml2aslo.Asynchronous).DEFAULT_ELEMENT_NAME).isEmpty()"
+            then="BuildResponse" else="DoAsync" />
+    </decision-state>
+    
+    <action-state id="DoAsync">
+        <evaluate expression="'AsyncLogout'" />
+        <transition to="HandleSuccessWithView" />
+    </action-state>
+    
+    <end-state id="HandleSuccessWithView" view="#{MapEventToView.apply(currentEvent)}">
+        <on-entry>
+            <evaluate expression="ErrorViewPopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+    </end-state>
+    
+    <action-state id="BuildResponse">
+        <evaluate expression="AddLogoutResponse" />
+        <evaluate expression="AddInResponseToToResponse" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CheckForPartialLogout" />
+    </action-state>
+    
+    <!-- TODO: this partial logout machinery will change once propagation exists -->
+    
+    <decision-state id="CheckForPartialLogout">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext), true).getSessionMap().isEmpty()"
+            then="CompleteResponse" else="PartialLogout" />
+    </decision-state>
+    
+    <action-state id="PartialLogout">
+        <evaluate expression="AddPartialLogoutStatusToResponse" />
+        
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="CompleteResponse" />
+    </action-state>
+
+    <action-state id="CompleteResponse">
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        <transition on="proceed" to="ReturnToParentFlow" />
+    </action-state>
+
+    <!-- Error Response Generation -->
+
+    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
+
+    <action-state id="HandleError">
+        <on-entry>
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <evaluate expression="InitializeOutboundMessageContextForError" />
+        <evaluate expression="AddLogoutResponse" />
+        <evaluate expression="AddInResponseToToResponse" />
+        <evaluate expression="AddStatusToResponse" />
+        
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+
+    <bean-import resource="slo-back-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-front-abstract-beans.xml shibboleth-idp/system/flows/saml/saml2/slo-front-abstract-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-front-abstract-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-front-abstract-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,125 +1,125 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-        
-    <import resource="common-beans.xml" />
-
-    <util:constant id="shibboleth.EndpointType"
-        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2slo:Logout}"
-        p:browserProfile="true" />
-
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
-        p:confidentialityActive="false" p:integrityActive="false" />
-
-    <alias name="shibboleth.OutgoingSAML2SLOBindings" alias="shibboleth.OutgoingBindings"/>
-
-    <bean id="ProcessLogoutRequest"
-        class="net.shibboleth.idp.saml.saml2.profile.impl.ProcessLogoutRequest" scope="prototype"
-        p:sessionManager-ref="shibboleth.SessionManager"
-        p:sessionResolver-ref="shibboleth.SessionManager" />
-    
-    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.LogoutRequestAuditExtractors') ?: getObject('shibboleth.DefaultLogoutRequestAuditExtractors')}" />
-        
-    <bean id="PopulateMultiRPContextFromLogoutContext"
-        class="net.shibboleth.idp.session.impl.PopulateMultiRPContextFromLogoutContext" scope="prototype"
-        p:activationCondition="%{idp.logout.elaboration:false}"
-        p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
-        p:sessionTypeProtocolMap-ref="shibboleth.SessionTypeProtocolMap" />
-
-    <bean id="SetRPUIInformation"
-            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
-            p:activationCondition="%{idp.logout.elaboration:false}"
-            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
-        <property name="fallbackLanguages">
-            <bean parent="shibboleth.CommaDelimStringArray" c:_0="%{idp.ui.fallbackLanguages:}" />
-        </property>
-        <property name="metadataContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose">
-                <constructor-arg name="g">
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <ref bean="shibboleth.ChildLookup.SAMLMetadataContext" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
-                        </constructor-arg>
-                    </bean>
-                </constructor-arg>
-                <constructor-arg name="f">
-                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
-                </constructor-arg>
-            </bean>
-        </property>
-        <property name="RPUIContextCreateStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose">
-                <constructor-arg name="g">
-                    <bean class="com.google.common.base.Functions" factory-method="compose">
-                        <constructor-arg name="g">
-                            <ref bean="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext" />
-                        </constructor-arg>
-                        <constructor-arg name="f">
-                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
-                        </constructor-arg>
-                    </bean>
-                </constructor-arg>
-                <constructor-arg name="f">
-                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-    
-    <bean id="AddLogoutResponse" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
-            p:overwriteExisting="true"
-            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
-            p:messageType="#{T(org.opensaml.saml.saml2.core.LogoutResponse).DEFAULT_ELEMENT_NAME}">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-    </bean>
-
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <list>
-                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
-                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
-                        p:signErrorResponses="%{idp.errors.signed:true}">
-                    <property name="activationCondition">
-                        <bean parent="shibboleth.Conditions.NOT">
-                            <constructor-arg>
-                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
-                            </constructor-arg>
-                        </bean>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
-    <bean id="SaveLogoutContext"
-          class="net.shibboleth.idp.session.impl.SaveLogoutContext" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+        
+    <import resource="common-beans.xml" />
+
+    <util:constant id="shibboleth.EndpointType"
+        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.SingleLogoutProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2slo:Logout}"
+        p:browserProfile="true" />
+
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
+        p:confidentialityActive="false" p:integrityActive="false" />
+
+    <alias name="shibboleth.OutgoingSAML2SLOBindings" alias="shibboleth.OutgoingBindings"/>
+
+    <bean id="ProcessLogoutRequest"
+        class="net.shibboleth.idp.saml.saml2.profile.impl.ProcessLogoutRequest" scope="prototype"
+        p:sessionManager-ref="shibboleth.SessionManager"
+        p:sessionResolver-ref="shibboleth.SessionManager" />
+    
+    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.LogoutRequestAuditExtractors') ?: getObject('shibboleth.DefaultLogoutRequestAuditExtractors')}" />
+        
+    <bean id="PopulateMultiRPContextFromLogoutContext"
+        class="net.shibboleth.idp.session.impl.PopulateMultiRPContextFromLogoutContext" scope="prototype"
+        p:activationCondition="%{idp.logout.elaboration:false}"
+        p:roleDescriptorResolver-ref="shibboleth.RoleDescriptorResolver"
+        p:sessionTypeProtocolMap-ref="shibboleth.SessionTypeProtocolMap" />
+
+    <bean id="SetRPUIInformation"
+            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
+            p:activationCondition="%{idp.logout.elaboration:false}"
+            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
+        <property name="fallbackLanguages">
+            <bean parent="shibboleth.CommaDelimStringArray" c:_0="%{idp.ui.fallbackLanguages:}" />
+        </property>
+        <property name="metadataContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose">
+                <constructor-arg name="g">
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <ref bean="shibboleth.ChildLookup.SAMLMetadataContext" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
+                        </constructor-arg>
+                    </bean>
+                </constructor-arg>
+                <constructor-arg name="f">
+                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
+                </constructor-arg>
+            </bean>
+        </property>
+        <property name="RPUIContextCreateStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose">
+                <constructor-arg name="g">
+                    <bean class="com.google.common.base.Functions" factory-method="compose">
+                        <constructor-arg name="g">
+                            <ref bean="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext" />
+                        </constructor-arg>
+                        <constructor-arg name="f">
+                            <bean class="net.shibboleth.idp.profile.context.navigate.RelyingPartyContextLookupByCurrent" />
+                        </constructor-arg>
+                    </bean>
+                </constructor-arg>
+                <constructor-arg name="f">
+                    <ref bean="shibboleth.ChildLookup.MultiRelyingParty" />
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+    
+    <bean id="AddLogoutResponse" class="org.opensaml.saml.saml2.profile.impl.AddStatusResponseShell" scope="prototype"
+            p:overwriteExisting="true"
+            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
+            p:messageType="#{T(org.opensaml.saml.saml2.core.LogoutResponse).DEFAULT_ELEMENT_NAME}">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+    </bean>
+
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <list>
+                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
+                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
+                        p:signErrorResponses="%{idp.errors.signed:true}">
+                    <property name="activationCondition">
+                        <bean parent="shibboleth.Conditions.NOT">
+                            <constructor-arg>
+                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
+                            </constructor-arg>
+                        </bean>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
+    <bean id="SaveLogoutContext"
+          class="net.shibboleth.idp.session.impl.SaveLogoutContext" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-front-abstract-flow.xml shibboleth-idp/system/flows/saml/saml2/slo-front-abstract-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-front-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-front-abstract-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,237 +1,237 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      abstract="true" parent="saml.abstract">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <!--
-    This flow pulls double duty handling LogoutRequest and LogoutResponse.
-    Response handling is just translating the status of the LogoutResponse into a JSON
-    result compatible with the logout propagation flow contract.
-    -->
-    
-    <!--
-    We splice into the parent flow by checking for a LogoutResponse or an Async LogoutRequest
-    after the inbound message subflow runs, to bypass the rest of the parent flow. Anything else
-    passes control back to the next parent state. 
-    -->
-    <subflow-state id="DoInboundInterceptSubflow">
-        <transition on="proceed" to="CheckLogoutResponse" />
-    </subflow-state>
-    
-    <decision-state id="CheckLogoutResponse">
-        <if test="opensamlProfileRequestContext.getInboundMessageContext().getMessage() instanceof T(org.opensaml.saml.saml2.core.LogoutResponse)"
-            then="LogoutResponseView" else="CheckAsync1"/>
-    </decision-state>
-
-    <decision-state id="CheckAsync1">
-        <!-- If parent DoInboundInterceptSubflow transition changes on 'proceed', the else clause needs to also change. -->
-        <if test="opensamlProfileRequestContext.getInboundMessageContext().getMessage() instanceof T(org.opensaml.saml.saml2.core.LogoutRequest) and opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions() != null and !opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions().getUnknownXMLObjects(T(org.opensaml.saml.ext.saml2aslo.Asynchronous).DEFAULT_ELEMENT_NAME).isEmpty()"
-            then="AsyncDecryptionParameters" else="OutboundContextsAndSecurityParameters" />
-    </decision-state>
-    
-    <!-- This is the one action inside "OutboundContextsAndSecurityParameters" that we can't skip. -->
-    <action-state id="AsyncDecryptionParameters">
-        <evaluate expression="PopulateDecryptionParameters" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ExtractSubject" />
-    </action-state>
-    
-
-    <!-- LogoutRequest handling starts by loading client storage if needed. -->
-        
-    <action-state id="DoProfileWork">
-        <evaluate expression="PopulateClientStorageLoadContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageLoad" />
-        <transition on="NoLoadNeeded" to="DoLogoutRequest" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="DoLogoutRequest"/>
-    </subflow-state>
-
-    <action-state id="DoLogoutRequest">
-        <evaluate expression="ProcessLogoutRequest" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PopulateClientStorageSaveContext" />
-    </action-state>
-
-    <!-- We may need to save client storage. -->
-    
-    <action-state id="PopulateClientStorageSaveContext">
-        <evaluate expression="PopulateClientStorageSaveContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageSave" />
-        <transition on="NoSaveNeeded" to="CompleteLogout" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CompleteLogout"/>
-    </subflow-state>
-
-    <!-- Continue the logout process. -->
-
-    <action-state id="CompleteLogout">
-        <evaluate expression="LogoutPopulateAuditContext" />
-        <evaluate expression="PopulateMultiRPContextFromLogoutContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="NextRelyingPartyContext" />
-    </action-state>
-
-    <decision-state id="NextRelyingPartyContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext), true).getRelyingPartyContextIterator().hasNext()"
-            then="SetRPUIInformation" else="LogoutView" />
-    </decision-state>
-    
-    <action-state id="SetRPUIInformation">
-        <on-entry>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext)).getRelyingPartyContextIterator().next()" />
-        </on-entry>
-        <evaluate expression="SetRPUIInformation" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="NextRelyingPartyContext" />
-    </action-state>
-
-    <view-state id="LogoutView" view="logout">
-        <on-render>
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="viewScope.logoutContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="viewScope.multiRPContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-        </on-render>
-        
-        <transition on="proceed" to="CheckAsync2" />
-        <transition on="propagate" to="LogoutPropagateView" />
-        <transition on="end" to="LogoutCompleteView" />
-    </view-state>
-    
-    <view-state id="LogoutPropagateView" view="logout-propagate">
-        <on-render>
-            <evaluate expression="SaveLogoutContext" />
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="viewScope.logoutContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="viewScope.multiRPContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.htmlEncoder" />
-            <evaluate expression="T(java.net.URLEncoder)" result="viewScope.urlEncoder" />
-            <evaluate expression="T(org.cryptacular.util.CodecUtil)" result="viewScope.codecUtil" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LogoutPropagationFlowSelector')" result="viewScope.flowSelector" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-        </on-render>
-        
-        <transition on="proceed" to="CheckAsync2" />
-    </view-state>
-
-    <view-state id="LogoutCompleteView" view="logout-complete">
-        <on-render>
-            <evaluate expression="environment" result="viewScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="viewScope.logoutContext" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="viewScope.multiRPContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
-        </on-render>
-
-        <transition on="proceed" to="CheckAsync2" />
-    </view-state>
-    
-    <decision-state id="CheckAsync2">
-        <if test="opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions() == null or opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions().getUnknownXMLObjects(T(org.opensaml.saml.ext.saml2aslo.Asynchronous).DEFAULT_ELEMENT_NAME).isEmpty()"
-            then="BuildResponse" else="AsyncLogoutView" />
-    </decision-state>
-    
-    <action-state id="BuildResponse">
-        <evaluate expression="AddLogoutResponse" />
-        <evaluate expression="AddInResponseToToResponse" />
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-    </action-state>
-    
-    <!-- Error Response Generation -->
-
-    <decision-state id="HandleError">
-        <on-entry>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext), true).setRequestContext(flowRequestContext)" />
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <if test="LocalErrorPredicate.apply(opensamlProfileRequestContext)"
-            then="HandleErrorWithView" else="HandleErrorWithResponse" />
-    </decision-state>
-
-    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
-
-    <action-state id="HandleErrorWithResponse">
-        <evaluate expression="AddLogoutResponse" />
-        <evaluate expression="AddInResponseToToResponse" />
-        <evaluate expression="AddStatusToResponse" />
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-
-    <!-- Special view machinery, and writes audit log unconditionally. -->
-    
-    <end-state id="AsyncLogoutView" view="logout/saml-async">
-        <on-entry>
-            <evaluate expression="ErrorViewPopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-    </end-state>
-
-    <end-state id="LogoutResponseView" view="logout/saml-result">
-        <on-entry>
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.UserAgentContext))" result="requestScope.userAgentContext" />
-            <evaluate expression="userAgentContext.isInstance(T(eu.bitwalker.useragentutils.Browser).IE)
-                ? externalContext.nativeResponse.setContentType('text/plain')
-                : externalContext.nativeResponse.setContentType('application/json')" />
-        </on-entry>
-    </end-state>
-
-    <bean-import resource="slo-front-abstract-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      abstract="true" parent="saml.abstract">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <!--
+    This flow pulls double duty handling LogoutRequest and LogoutResponse.
+    Response handling is just translating the status of the LogoutResponse into a JSON
+    result compatible with the logout propagation flow contract.
+    -->
+    
+    <!--
+    We splice into the parent flow by checking for a LogoutResponse or an Async LogoutRequest
+    after the inbound message subflow runs, to bypass the rest of the parent flow. Anything else
+    passes control back to the next parent state. 
+    -->
+    <subflow-state id="DoInboundInterceptSubflow">
+        <transition on="proceed" to="CheckLogoutResponse" />
+    </subflow-state>
+    
+    <decision-state id="CheckLogoutResponse">
+        <if test="opensamlProfileRequestContext.getInboundMessageContext().getMessage() instanceof T(org.opensaml.saml.saml2.core.LogoutResponse)"
+            then="LogoutResponseView" else="CheckAsync1"/>
+    </decision-state>
+
+    <decision-state id="CheckAsync1">
+        <!-- If parent DoInboundInterceptSubflow transition changes on 'proceed', the else clause needs to also change. -->
+        <if test="opensamlProfileRequestContext.getInboundMessageContext().getMessage() instanceof T(org.opensaml.saml.saml2.core.LogoutRequest) and opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions() != null and !opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions().getUnknownXMLObjects(T(org.opensaml.saml.ext.saml2aslo.Asynchronous).DEFAULT_ELEMENT_NAME).isEmpty()"
+            then="AsyncDecryptionParameters" else="OutboundContextsAndSecurityParameters" />
+    </decision-state>
+    
+    <!-- This is the one action inside "OutboundContextsAndSecurityParameters" that we can't skip. -->
+    <action-state id="AsyncDecryptionParameters">
+        <evaluate expression="PopulateDecryptionParameters" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ExtractSubject" />
+    </action-state>
+    
+
+    <!-- LogoutRequest handling starts by loading client storage if needed. -->
+        
+    <action-state id="DoProfileWork">
+        <evaluate expression="PopulateClientStorageLoadContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageLoad" />
+        <transition on="NoLoadNeeded" to="DoLogoutRequest" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="DoLogoutRequest"/>
+    </subflow-state>
+
+    <action-state id="DoLogoutRequest">
+        <evaluate expression="ProcessLogoutRequest" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PopulateClientStorageSaveContext" />
+    </action-state>
+
+    <!-- We may need to save client storage. -->
+    
+    <action-state id="PopulateClientStorageSaveContext">
+        <evaluate expression="PopulateClientStorageSaveContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageSave" />
+        <transition on="NoSaveNeeded" to="CompleteLogout" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CompleteLogout"/>
+    </subflow-state>
+
+    <!-- Continue the logout process. -->
+
+    <action-state id="CompleteLogout">
+        <evaluate expression="LogoutPopulateAuditContext" />
+        <evaluate expression="PopulateMultiRPContextFromLogoutContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="NextRelyingPartyContext" />
+    </action-state>
+
+    <decision-state id="NextRelyingPartyContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext), true).getRelyingPartyContextIterator().hasNext()"
+            then="SetRPUIInformation" else="LogoutView" />
+    </decision-state>
+    
+    <action-state id="SetRPUIInformation">
+        <on-entry>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext)).getRelyingPartyContextIterator().next()" />
+        </on-entry>
+        <evaluate expression="SetRPUIInformation" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="NextRelyingPartyContext" />
+    </action-state>
+
+    <view-state id="LogoutView" view="logout">
+        <on-render>
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="viewScope.logoutContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="viewScope.multiRPContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+        </on-render>
+        
+        <transition on="proceed" to="CheckAsync2" />
+        <transition on="propagate" to="LogoutPropagateView" />
+        <transition on="end" to="LogoutCompleteView" />
+    </view-state>
+    
+    <view-state id="LogoutPropagateView" view="logout-propagate">
+        <on-render>
+            <evaluate expression="SaveLogoutContext" />
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="viewScope.logoutContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="viewScope.multiRPContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.htmlEncoder" />
+            <evaluate expression="T(java.net.URLEncoder)" result="viewScope.urlEncoder" />
+            <evaluate expression="T(org.cryptacular.util.CodecUtil)" result="viewScope.codecUtil" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LogoutPropagationFlowSelector')" result="viewScope.flowSelector" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+        </on-render>
+        
+        <transition on="proceed" to="CheckAsync2" />
+    </view-state>
+
+    <view-state id="LogoutCompleteView" view="logout-complete">
+        <on-render>
+            <evaluate expression="environment" result="viewScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.session.context.LogoutContext))" result="viewScope.logoutContext" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext))" result="viewScope.multiRPContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
+        </on-render>
+
+        <transition on="proceed" to="CheckAsync2" />
+    </view-state>
+    
+    <decision-state id="CheckAsync2">
+        <if test="opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions() == null or opensamlProfileRequestContext.getInboundMessageContext().getMessage().getExtensions().getUnknownXMLObjects(T(org.opensaml.saml.ext.saml2aslo.Asynchronous).DEFAULT_ELEMENT_NAME).isEmpty()"
+            then="BuildResponse" else="AsyncLogoutView" />
+    </decision-state>
+    
+    <action-state id="BuildResponse">
+        <evaluate expression="AddLogoutResponse" />
+        <evaluate expression="AddInResponseToToResponse" />
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+    </action-state>
+    
+    <!-- Error Response Generation -->
+
+    <decision-state id="HandleError">
+        <on-entry>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext), true).setRequestContext(flowRequestContext)" />
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <if test="LocalErrorPredicate.apply(opensamlProfileRequestContext)"
+            then="HandleErrorWithView" else="HandleErrorWithResponse" />
+    </decision-state>
+
+    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
+
+    <action-state id="HandleErrorWithResponse">
+        <evaluate expression="AddLogoutResponse" />
+        <evaluate expression="AddInResponseToToResponse" />
+        <evaluate expression="AddStatusToResponse" />
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+
+    <!-- Special view machinery, and writes audit log unconditionally. -->
+    
+    <end-state id="AsyncLogoutView" view="logout/saml-async">
+        <on-entry>
+            <evaluate expression="ErrorViewPopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+    </end-state>
+
+    <end-state id="LogoutResponseView" view="logout/saml-result">
+        <on-entry>
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.UserAgentContext))" result="requestScope.userAgentContext" />
+            <evaluate expression="userAgentContext.isInstance(T(eu.bitwalker.useragentutils.Browser).IE)
+                ? externalContext.nativeResponse.setContentType('text/plain')
+                : externalContext.nativeResponse.setContentType('application/json')" />
+        </on-entry>
+    </end-state>
+
+    <bean-import resource="slo-front-abstract-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-post-beans.xml shibboleth-idp/system/flows/saml/saml2/slo-post-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-post-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-post-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,23 +1,23 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPPostDecoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2POST" />
-        </constructor-arg>
-    </bean>
-        
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPPostDecoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2POST" />
+        </constructor-arg>
+    </bean>
+        
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-post-flow.xml shibboleth-idp/system/flows/saml/saml2/slo-post-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-post-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-post-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.slo.front.abstract">
-
-    <bean-import resource="slo-post-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.slo.front.abstract">
+
+    <bean-import resource="slo-post-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-post-simplesign-beans.xml shibboleth-idp/system/flows/saml/saml2/slo-post-simplesign-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-post-simplesign-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-post-simplesign-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,23 +1,23 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPPostSimpleSignDecoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2POSTSimpleSign" />
-        </constructor-arg>
-    </bean>
-    
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPPostSimpleSignDecoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2POSTSimpleSign" />
+        </constructor-arg>
+    </bean>
+    
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-post-simplesign-flow.xml shibboleth-idp/system/flows/saml/saml2/slo-post-simplesign-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-post-simplesign-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-post-simplesign-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.sso.front.abstract">
-
-    <bean-import resource="slo-post-simplesign-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.sso.front.abstract">
+
+    <bean-import resource="slo-post-simplesign-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-redirect-beans.xml shibboleth-idp/system/flows/saml/saml2/slo-redirect-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-redirect-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-redirect-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,23 +1,23 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-        
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPRedirectDeflateDecoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2Redirect" />
-        </constructor-arg>
-    </bean>
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+        
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPRedirectDeflateDecoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2Redirect" />
+        </constructor-arg>
+    </bean>
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-redirect-flow.xml shibboleth-idp/system/flows/saml/saml2/slo-redirect-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-redirect-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-redirect-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.slo.front.abstract">
-
-    <bean-import resource="slo-redirect-beans.xml" />
-    
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.slo.front.abstract">
+
+    <bean-import resource="slo-redirect-beans.xml" />
+    
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/slo-security-flow.xml shibboleth-idp/system/flows/saml/saml2/slo-security-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/slo-security-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/slo-security-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,26 +1,26 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="security-policy.abstract">
-
-    <!-- Default inbound security processing for SAML 2 SLO profile. -->
-
-    <action-state id="SAML2SLOSecurityPolicy">
-        <evaluate expression="ReceivedEndpointSecurityHandler" />
-        <evaluate expression="MessageReplaySecurityHandler" />
-        <evaluate expression="MessageLifetimeSecurityHandler" />
-        <evaluate expression="SAMLMDClientCertAuthSecurityHandler" />
-        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
-        <evaluate expression="SAML2HTTPRedirectDeflateSignatureSecurityHandler" />
-        <evaluate expression="SAML2HTTPPostSimpleSignSecurityHandler" />
-        <evaluate expression="CheckMandatoryIssuer" />
-        <evaluate expression="OptionalCheckMandatoryAuthentication" />
-        <evaluate expression="ExtractChannelBindingsExtensionsHandler" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="proceed" />
-    </action-state>
-    
-    <bean-import resource="../security-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="security-policy.abstract">
+
+    <!-- Default inbound security processing for SAML 2 SLO profile. -->
+
+    <action-state id="SAML2SLOSecurityPolicy">
+        <evaluate expression="ReceivedEndpointSecurityHandler" />
+        <evaluate expression="MessageReplaySecurityHandler" />
+        <evaluate expression="MessageLifetimeSecurityHandler" />
+        <evaluate expression="SAMLMDClientCertAuthSecurityHandler" />
+        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
+        <evaluate expression="SAML2HTTPRedirectDeflateSignatureSecurityHandler" />
+        <evaluate expression="SAML2HTTPPostSimpleSignSecurityHandler" />
+        <evaluate expression="CheckMandatoryIssuer" />
+        <evaluate expression="OptionalCheckMandatoryAuthentication" />
+        <evaluate expression="ExtractChannelBindingsExtensionsHandler" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="proceed" />
+    </action-state>
+    
+    <bean-import resource="../security-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-abstract-beans.xml shibboleth-idp/system/flows/saml/saml2/sso-abstract-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-abstract-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-abstract-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,214 +1,214 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-    
-    <!-- Note: Don't define DecodeMessage action here, that is defined in beans definition for concrete flow. -->
-    
-    <import resource="common-beans.xml" />
-    
-    <util:constant id="shibboleth.EndpointType"
-        static-field="org.opensaml.saml.saml2.metadata.AssertionConsumerService.DEFAULT_ELEMENT_NAME" />
-    
-    <bean id="InitializeMessageChannelSecurityContext"
-        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
-        p:confidentialityActive="false" p:integrityActive="false" />
-        
-    <bean id="VerifyChannelBindings"
-        class="org.opensaml.saml.common.profile.impl.VerifyChannelBindings" scope="prototype" />
-    
-    <bean id="PopulateECPContext"
-            class="org.opensaml.saml.saml2.profile.impl.PopulateECPContext" scope="prototype">
-        <property name="activationCondition">
-            <bean class="org.opensaml.profile.logic.ProfileIdPredicate">
-                <constructor-arg>
-                    <util:constant
-                        static-field="net.shibboleth.idp.saml.saml2.profile.config.ECPProfileConfiguration.PROFILE_ID"/>
-                </constructor-arg>
-            </bean>
-        </property>
-        <property name="encryptionContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
-                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
-        </property>
-    </bean>
-    
-    <!-- Default list of context classes or declarations to ignore if an SP requests them. -->
-    <util:list id="shibboleth.DefaultIgnoredContexts">
-        <value>urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified</value>
-    </util:list>
-    
-    <bean id="ProcessRequestedAuthnContext"
-        class="net.shibboleth.idp.saml.saml2.profile.impl.ProcessRequestedAuthnContext" scope="prototype"
-        p:ignoredContexts-ref="#{getObject('shibboleth.IgnoredContexts') != null ? 'shibboleth.IgnoredContexts' : 'shibboleth.DefaultIgnoredContexts'}" />
-        
-    <bean id="ResolveAttributesPredicate"
-        class="net.shibboleth.idp.saml.profile.config.logic.ResolveAttributesProfileConfigPredicate" />
-
-    <bean id="AddNameIDToSubjects"
-            class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects" scope="prototype">
-        <property name="formatLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.logic.DefaultNameIdentifierFormatStrategy"
-                p:defaultFormat="%{idp.nameid.saml2.default:urn:oasis:names:tc:SAML:2.0:nameid-format:transient}" />
-        </property>
-        <property name="nameIDGenerator">
-            <bean class="net.shibboleth.idp.saml.nameid.impl.ProxySAML2NameIDGenerator"
-                c:service-ref="shibboleth.NameIdentifierGenerationService" />
-        </property>
-        <property name="nameIDPolicyPredicate">
-            <bean class="org.opensaml.saml.common.profile.logic.AffiliationNameIDPolicyPredicate"
-                    p:metadataResolver-ref="shibboleth.MetadataResolver"
-                    p:responderIdLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
-                    p:requesterIdLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
-                <property name="objectLookupStrategy">
-                    <bean class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects.NameIDPolicyLookupFunction" />
-                </property>
-            </bean>
-        </property>
-    </bean>
-
-    <bean id="AddSubjectConfirmationToSubjects"
-        class="org.opensaml.saml.saml2.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-        p:method="urn:oasis:names:tc:SAML:2.0:cm:bearer" />
-
-    <bean id="AddProxyRestrictionToAssertions"
-            class="org.opensaml.saml.saml2.profile.impl.AddProxyRestrictionToAssertions" scope="prototype">
-        <property name="proxyAudiencesLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.config.navigate.ProxyAudienceRestrictionsLookupFunction" />
-        </property>
-        <property name="proxyCountLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.config.navigate.ProxyCountLookupFunction" />
-        </property>
-    </bean>
-    
-    <bean id="DecorateDelegatedAssertion"
-            class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.DecorateDelegatedAssertion" scope="prototype"
-            p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-            p:libertySSOSEndpointURL="%{idp.delegation.saml2.libertySSOSEndpointURL:#{null}}">
-        <property name="keyInfoGeneratorManager">
-            <bean factory-method="buildBasicKeyInfoGeneratorManager" class="org.opensaml.xmlsec.config.DefaultSecurityConfigurationBootstrap" />
-        </property>
-    </bean>
-
-    <bean id="AddChannelBindingsToAssertions"
-        class="org.opensaml.saml.saml2.profile.impl.AddChannelBindingsToAssertions" scope="prototype" />
-
-    <bean id="AddGeneratedKeyToAssertions"
-        class="org.opensaml.saml.saml2.profile.impl.AddGeneratedKeyToAssertions" scope="prototype" />
-
-    <bean id="UpdateSessionWithSPSession"
-            class="net.shibboleth.idp.session.impl.UpdateSessionWithSPSession" scope="prototype"
-            p:activationCondition="%{idp.session.trackSPSessions:false}"
-            p:sessionManager-ref="shibboleth.SessionManager">
-        <property name="SPSessionCreationStrategy">
-            <bean class="net.shibboleth.idp.saml.session.impl.SAML2SPSessionCreationStrategy"
-                c:lifetime="%{idp.session.defaultSPlifetime:PT2H}"/>
-        </property>
-    </bean>
-
-    <bean id="shibboleth.PreEncodeMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <list>
-                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
-                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
-                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
-                        p:signErrorResponses="%{idp.errors.signed:true}">
-                    <property name="activationCondition">
-                        <bean parent="shibboleth.Conditions.NOT">
-                            <constructor-arg>
-                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
-                            </constructor-arg>
-                        </bean>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-    
-    <!-- These are used for ECP error handling. -->
-
-    <bean id="SOAPErrorPredicate"
-            class="net.shibboleth.idp.saml.saml2.profile.config.logic.SOAPErrorPredicate">
-        <property name="eventContextLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
-        </property>
-    </bean>
-    
-    <bean id="AddSOAPFault"
-            class="org.opensaml.soap.soap11.profile.impl.AddSOAPFault" scope="prototype"
-            p:faultString="An error occurred.">
-        <property name="detailedErrorsCondition">
-            <bean class="net.shibboleth.idp.profile.config.logic.DetailedErrorsPredicate" />
-        </property>
-        <property name="faultCode">
-            <util:list>
-                <util:constant static-field="org.opensaml.soap.soap11.FaultCode.SERVER" />
-            </util:list>
-        </property>
-        <property name="faultCodeLookupStrategy">
-            <bean class="org.opensaml.soap.soap11.profile.impl.AddSOAPFault.FaultCodeMappingFunction"
-                    c:mappings-ref="shibboleth.SOAPFaultCodeMappings" />
-        </property>
-        <property name="faultStringLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.SpringStatusMessageLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="InitializeOutboundMessageContextForSOAPFault"
-        class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContextForError" scope="prototype"
-        p:outboundBinding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" />
-        
-    <bean id="AddAuthnStatementToAssertionFromInboundAssertionToken"
-        class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.AddAuthnStatementToAssertionFromInboundAssertionToken"
-        scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest">
-        <property name="identifierGeneratorLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
-                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
-        </property>
-        <property name="activationCondition">
-            <bean parent="shibboleth.Conditions.Expression">
-                <constructor-arg>
-                    <value>
-                        #profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/liberty/ssos')
-                    </value>
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-    
-    <bean id="AddDelegationRestrictionToAssertions"
-        class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.AddDelegationRestrictionToAssertions"
-        scope="prototype">
-        <property name="activationCondition">
-            <bean parent="shibboleth.Conditions.Expression">
-                <constructor-arg>
-                    <value>
-                        #profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/liberty/ssos')
-                    </value>
-                </constructor-arg>
-            </bean>
-        </property>
-    </bean>
-    
-    <bean id="AddDelegationPolicyToAssertion"
-        class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.AddDelegationPolicyToAssertion"
-        scope="prototype"
-        p:activationCondition-ref="shibboleth.Conditions.IssuingDelegatedAssertion">
-    </bean>
-        
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+    
+    <!-- Note: Don't define DecodeMessage action here, that is defined in beans definition for concrete flow. -->
+    
+    <import resource="common-beans.xml" />
+    
+    <util:constant id="shibboleth.EndpointType"
+        static-field="org.opensaml.saml.saml2.metadata.AssertionConsumerService.DEFAULT_ELEMENT_NAME" />
+    
+    <bean id="InitializeMessageChannelSecurityContext"
+        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
+        p:confidentialityActive="false" p:integrityActive="false" />
+        
+    <bean id="VerifyChannelBindings"
+        class="org.opensaml.saml.common.profile.impl.VerifyChannelBindings" scope="prototype" />
+    
+    <bean id="PopulateECPContext"
+            class="org.opensaml.saml.saml2.profile.impl.PopulateECPContext" scope="prototype">
+        <property name="activationCondition">
+            <bean class="org.opensaml.profile.logic.ProfileIdPredicate">
+                <constructor-arg>
+                    <util:constant
+                        static-field="net.shibboleth.idp.saml.saml2.profile.config.ECPProfileConfiguration.PROFILE_ID"/>
+                </constructor-arg>
+            </bean>
+        </property>
+        <property name="encryptionContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
+                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
+        </property>
+    </bean>
+    
+    <!-- Default list of context classes or declarations to ignore if an SP requests them. -->
+    <util:list id="shibboleth.DefaultIgnoredContexts">
+        <value>urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified</value>
+    </util:list>
+    
+    <bean id="ProcessRequestedAuthnContext"
+        class="net.shibboleth.idp.saml.saml2.profile.impl.ProcessRequestedAuthnContext" scope="prototype"
+        p:ignoredContexts-ref="#{getObject('shibboleth.IgnoredContexts') != null ? 'shibboleth.IgnoredContexts' : 'shibboleth.DefaultIgnoredContexts'}" />
+        
+    <bean id="ResolveAttributesPredicate"
+        class="net.shibboleth.idp.saml.profile.config.logic.ResolveAttributesProfileConfigPredicate" />
+
+    <bean id="AddNameIDToSubjects"
+            class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects" scope="prototype">
+        <property name="formatLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.logic.DefaultNameIdentifierFormatStrategy"
+                p:defaultFormat="%{idp.nameid.saml2.default:urn:oasis:names:tc:SAML:2.0:nameid-format:transient}" />
+        </property>
+        <property name="nameIDGenerator">
+            <bean class="net.shibboleth.idp.saml.nameid.impl.ProxySAML2NameIDGenerator"
+                c:service-ref="shibboleth.NameIdentifierGenerationService" />
+        </property>
+        <property name="nameIDPolicyPredicate">
+            <bean class="org.opensaml.saml.common.profile.logic.AffiliationNameIDPolicyPredicate"
+                    p:metadataResolver-ref="shibboleth.MetadataResolver"
+                    p:responderIdLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
+                    p:requesterIdLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
+                <property name="objectLookupStrategy">
+                    <bean class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects.NameIDPolicyLookupFunction" />
+                </property>
+            </bean>
+        </property>
+    </bean>
+
+    <bean id="AddSubjectConfirmationToSubjects"
+        class="org.opensaml.saml.saml2.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+        p:method="urn:oasis:names:tc:SAML:2.0:cm:bearer" />
+
+    <bean id="AddProxyRestrictionToAssertions"
+            class="org.opensaml.saml.saml2.profile.impl.AddProxyRestrictionToAssertions" scope="prototype">
+        <property name="proxyAudiencesLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.config.navigate.ProxyAudienceRestrictionsLookupFunction" />
+        </property>
+        <property name="proxyCountLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.config.navigate.ProxyCountLookupFunction" />
+        </property>
+    </bean>
+    
+    <bean id="DecorateDelegatedAssertion"
+            class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.DecorateDelegatedAssertion" scope="prototype"
+            p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+            p:libertySSOSEndpointURL="%{idp.delegation.saml2.libertySSOSEndpointURL:#{null}}">
+        <property name="keyInfoGeneratorManager">
+            <bean factory-method="buildBasicKeyInfoGeneratorManager" class="org.opensaml.xmlsec.config.DefaultSecurityConfigurationBootstrap" />
+        </property>
+    </bean>
+
+    <bean id="AddChannelBindingsToAssertions"
+        class="org.opensaml.saml.saml2.profile.impl.AddChannelBindingsToAssertions" scope="prototype" />
+
+    <bean id="AddGeneratedKeyToAssertions"
+        class="org.opensaml.saml.saml2.profile.impl.AddGeneratedKeyToAssertions" scope="prototype" />
+
+    <bean id="UpdateSessionWithSPSession"
+            class="net.shibboleth.idp.session.impl.UpdateSessionWithSPSession" scope="prototype"
+            p:activationCondition="%{idp.session.trackSPSessions:false}"
+            p:sessionManager-ref="shibboleth.SessionManager">
+        <property name="SPSessionCreationStrategy">
+            <bean class="net.shibboleth.idp.saml.session.impl.SAML2SPSessionCreationStrategy"
+                c:lifetime="%{idp.session.defaultSPlifetime:PT2H}"/>
+        </property>
+    </bean>
+
+    <bean id="shibboleth.PreEncodeMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <list>
+                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
+                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
+                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
+                        p:signErrorResponses="%{idp.errors.signed:true}">
+                    <property name="activationCondition">
+                        <bean parent="shibboleth.Conditions.NOT">
+                            <constructor-arg>
+                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
+                            </constructor-arg>
+                        </bean>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+    
+    <!-- These are used for ECP error handling. -->
+
+    <bean id="SOAPErrorPredicate"
+            class="net.shibboleth.idp.saml.saml2.profile.config.logic.SOAPErrorPredicate">
+        <property name="eventContextLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
+        </property>
+    </bean>
+    
+    <bean id="AddSOAPFault"
+            class="org.opensaml.soap.soap11.profile.impl.AddSOAPFault" scope="prototype"
+            p:faultString="An error occurred.">
+        <property name="detailedErrorsCondition">
+            <bean class="net.shibboleth.idp.profile.config.logic.DetailedErrorsPredicate" />
+        </property>
+        <property name="faultCode">
+            <util:list>
+                <util:constant static-field="org.opensaml.soap.soap11.FaultCode.SERVER" />
+            </util:list>
+        </property>
+        <property name="faultCodeLookupStrategy">
+            <bean class="org.opensaml.soap.soap11.profile.impl.AddSOAPFault.FaultCodeMappingFunction"
+                    c:mappings-ref="shibboleth.SOAPFaultCodeMappings" />
+        </property>
+        <property name="faultStringLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.SpringStatusMessageLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="InitializeOutboundMessageContextForSOAPFault"
+        class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContextForError" scope="prototype"
+        p:outboundBinding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" />
+        
+    <bean id="AddAuthnStatementToAssertionFromInboundAssertionToken"
+        class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.AddAuthnStatementToAssertionFromInboundAssertionToken"
+        scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest">
+        <property name="identifierGeneratorLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
+                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
+        </property>
+        <property name="activationCondition">
+            <bean parent="shibboleth.Conditions.Expression">
+                <constructor-arg>
+                    <value>
+                        #profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/liberty/ssos')
+                    </value>
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+    
+    <bean id="AddDelegationRestrictionToAssertions"
+        class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.AddDelegationRestrictionToAssertions"
+        scope="prototype">
+        <property name="activationCondition">
+            <bean parent="shibboleth.Conditions.Expression">
+                <constructor-arg>
+                    <value>
+                        #profileContext.getProfileId().equals('http://shibboleth.net/ns/profiles/liberty/ssos')
+                    </value>
+                </constructor-arg>
+            </bean>
+        </property>
+    </bean>
+    
+    <bean id="AddDelegationPolicyToAssertion"
+        class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.AddDelegationPolicyToAssertion"
+        scope="prototype"
+        p:activationCondition-ref="shibboleth.Conditions.IssuingDelegatedAssertion">
+    </bean>
+        
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-abstract-flow.xml shibboleth-idp/system/flows/saml/saml2/sso-abstract-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-abstract-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,211 +1,211 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      abstract="true" parent="saml.abstract">
-
-    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
-    
-    <action-state id="InitializeProfileRequestContext">
-        <evaluate expression="InitializeProfileRequestContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DecodeMessage" />
-    </action-state>
-
-    <action-state id="DoProfileWork">
-        <evaluate expression="VerifyChannelBindings" />
-        <evaluate expression="PopulateECPContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PopulateClientStorageLoadContext" />
-    </action-state>
-    
-    <action-state id="PopulateClientStorageLoadContext">
-        <evaluate expression="PopulateClientStorageLoadContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageLoad" />
-        <transition on="NoLoadNeeded" to="CheckInitialAuthentication" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="CheckInitialAuthentication"/>
-    </subflow-state>
-    
-    <decision-state id="CheckInitialAuthentication">
-        <if test="InitialAuthenticationFlag" then="PreInitialSetup" else="PostInitialSetup" />
-    </decision-state>
-
-    <action-state id="PreInitialSetup">
-        <evaluate expression="InitializeAuthenticationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DoInitialAuthenticationSubflow" />
-    </action-state>
-
-    <subflow-state id="DoInitialAuthenticationSubflow" subflow="authn-initial">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="PostInitialSetup" />
-    </subflow-state>
-    
-    <action-state id="PostInitialSetup">
-        <evaluate expression="InitializeAuthenticationContext" />
-        <evaluate expression="ProcessRequestedAuthnContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DoAuthenticationSubflow" />
-    </action-state>
-    
-    <subflow-state id="DoAuthenticationSubflow" subflow="authn">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ResolveAttributes" />
-        <transition on="RestartAuthentication" to="PostInitialSetup" />
-    </subflow-state>
-    
-    <decision-state id="ResolveAttributes">
-        <if test="ResolveAttributesPredicate.apply(opensamlProfileRequestContext)"
-            then="AttributeResolution"
-            else="BuildResponse" />
-    </decision-state>
-    
-    <action-state id="AttributeResolution">
-        <evaluate expression="ResolveAttributes" />
-        <evaluate expression="FilterAttributes" />
-        <evaluate expression="PopulatePostAuthnInterceptContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CheckPostAuthnInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckPostAuthnInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="BuildResponse" else="DoPostAuthnInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoPostAuthnInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="BuildResponse" />
-        <transition on="RestartAuthentication" to="PostInitialSetup" />
-    </subflow-state>
-
-    <action-state id="BuildResponse">
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-
-        <evaluate expression="AddAuthnStatementToAssertion" />
-        <evaluate expression="AddAuthnStatementToAssertionFromInboundAssertionToken" />
-        
-        <evaluate expression="AddAttributeStatementToAssertion" />
-        <evaluate expression="AddNameIDToSubjects" />
-        <evaluate expression="AddSubjectConfirmationToSubjects" />
-        <evaluate expression="AddNotBeforeConditionToAssertions" />
-        <evaluate expression="AddNotOnOrAfterConditionToAssertions" />
-        <evaluate expression="AddAudienceRestrictionToAssertions" />
-        <evaluate expression="AddDelegationRestrictionToAssertions" />
-        <evaluate expression="AddProxyRestrictionToAssertions" />
-        <evaluate expression="AddChannelBindingsToAssertions" />
-        <evaluate expression="AddGeneratedKeyToAssertions" />
-        <evaluate expression="DecorateDelegatedAssertion" />
-        <evaluate expression="AddDelegationPolicyToAssertion" />
-
-        <!-- Need access to unencrypted NameID and Assertion. -->
-        <evaluate expression="PostAssertionPopulateAuditContext" />
-        <evaluate expression="UpdateSessionWithSPSession" />
-
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="EncryptAndSign" />
-        <!-- Mask storage failure. -->
-        <transition on="InputOutputError" to="EncryptAndSign" />
-    </action-state>
-
-    <action-state id="EncryptAndSign">
-        <evaluate expression="EncryptNameIDs" />
-        <evaluate expression="EncryptAttributes" />
-        <evaluate expression="SignAssertions" />
-        <evaluate expression="EncryptAssertions" />
-
-        <evaluate expression="PostResponsePopulateAuditContext" />
-
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="PopulateClientStorageSaveContext" />
-    </action-state>
-    
-    <!-- We may need to save client storage. -->
-    
-    <action-state id="PopulateClientStorageSaveContext">
-        <evaluate expression="PopulateClientStorageSaveContext" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ClientStorageSave" />
-        <transition on="NoSaveNeeded" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-    </action-state>
-    
-    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="ReturnToParentFlow"/>
-        <transition to="HandleErrorWithView" />
-    </subflow-state>
-    
-    <!-- Outbound message handling completes in the parent flow. -->
-
-    <!-- Error Response Generation -->
-
-    <decision-state id="HandleError">
-        <on-entry>
-            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext), true).setRequestContext(flowRequestContext)" />
-            <evaluate expression="LogEvent" />
-        </on-entry>
-        <if test="LocalErrorPredicate.apply(opensamlProfileRequestContext)"
-            then="HandleErrorLocally" else="HandleErrorWithResponse" />
-    </decision-state>
-
-    <!-- For ECP, local errors mean SOAP faults. -->
-    
-    <decision-state id="HandleErrorLocally">
-        <if test="opensamlProfileRequestContext.isBrowserProfile() or !SOAPErrorPredicate.apply(opensamlProfileRequestContext)"
-            then="HandleErrorWithView" else="SOAPFault" />
-    </decision-state>
-
-    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
-
-    <action-state id="HandleErrorWithResponse">
-        <evaluate expression="AddResponseShell" />
-        <evaluate expression="AddInResponseToToResponse" />
-        <evaluate expression="AddStatusToResponse" />
-        <evaluate expression="PostResponsePopulateAuditContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="ReturnToParentFlow" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-
-    <action-state id="SOAPFault">
-        <evaluate expression="InitializeOutboundMessageContextForSOAPFault" />
-        <evaluate expression="AddSOAPFault" />
-        <evaluate expression="EncodeMessage" />
-        <evaluate expression="RecordResponseComplete" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="end" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-
-    <!-- Splice in an additional step to write out the F-TICKS log entry on a successful completion. -->
-
-    <end-state id="end">
-        <on-entry>
-            <evaluate expression="WriteFTICKSLog" />
-        </on-entry>
-    </end-state>
-
-    <bean-import resource="sso-abstract-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      abstract="true" parent="saml.abstract">
+
+    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
+    
+    <action-state id="InitializeProfileRequestContext">
+        <evaluate expression="InitializeProfileRequestContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DecodeMessage" />
+    </action-state>
+
+    <action-state id="DoProfileWork">
+        <evaluate expression="VerifyChannelBindings" />
+        <evaluate expression="PopulateECPContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PopulateClientStorageLoadContext" />
+    </action-state>
+    
+    <action-state id="PopulateClientStorageLoadContext">
+        <evaluate expression="PopulateClientStorageLoadContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageLoad" />
+        <transition on="NoLoadNeeded" to="CheckInitialAuthentication" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageLoad" subflow="client-storage/read">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="CheckInitialAuthentication"/>
+    </subflow-state>
+    
+    <decision-state id="CheckInitialAuthentication">
+        <if test="InitialAuthenticationFlag" then="PreInitialSetup" else="PostInitialSetup" />
+    </decision-state>
+
+    <action-state id="PreInitialSetup">
+        <evaluate expression="InitializeAuthenticationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DoInitialAuthenticationSubflow" />
+    </action-state>
+
+    <subflow-state id="DoInitialAuthenticationSubflow" subflow="authn-initial">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="PostInitialSetup" />
+    </subflow-state>
+    
+    <action-state id="PostInitialSetup">
+        <evaluate expression="InitializeAuthenticationContext" />
+        <evaluate expression="ProcessRequestedAuthnContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DoAuthenticationSubflow" />
+    </action-state>
+    
+    <subflow-state id="DoAuthenticationSubflow" subflow="authn">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ResolveAttributes" />
+        <transition on="RestartAuthentication" to="PostInitialSetup" />
+    </subflow-state>
+    
+    <decision-state id="ResolveAttributes">
+        <if test="ResolveAttributesPredicate.apply(opensamlProfileRequestContext)"
+            then="AttributeResolution"
+            else="BuildResponse" />
+    </decision-state>
+    
+    <action-state id="AttributeResolution">
+        <evaluate expression="ResolveAttributes" />
+        <evaluate expression="FilterAttributes" />
+        <evaluate expression="PopulatePostAuthnInterceptContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CheckPostAuthnInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckPostAuthnInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="BuildResponse" else="DoPostAuthnInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoPostAuthnInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="BuildResponse" />
+        <transition on="RestartAuthentication" to="PostInitialSetup" />
+    </subflow-state>
+
+    <action-state id="BuildResponse">
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+
+        <evaluate expression="AddAuthnStatementToAssertion" />
+        <evaluate expression="AddAuthnStatementToAssertionFromInboundAssertionToken" />
+        
+        <evaluate expression="AddAttributeStatementToAssertion" />
+        <evaluate expression="AddNameIDToSubjects" />
+        <evaluate expression="AddSubjectConfirmationToSubjects" />
+        <evaluate expression="AddNotBeforeConditionToAssertions" />
+        <evaluate expression="AddNotOnOrAfterConditionToAssertions" />
+        <evaluate expression="AddAudienceRestrictionToAssertions" />
+        <evaluate expression="AddDelegationRestrictionToAssertions" />
+        <evaluate expression="AddProxyRestrictionToAssertions" />
+        <evaluate expression="AddChannelBindingsToAssertions" />
+        <evaluate expression="AddGeneratedKeyToAssertions" />
+        <evaluate expression="DecorateDelegatedAssertion" />
+        <evaluate expression="AddDelegationPolicyToAssertion" />
+
+        <!-- Need access to unencrypted NameID and Assertion. -->
+        <evaluate expression="PostAssertionPopulateAuditContext" />
+        <evaluate expression="UpdateSessionWithSPSession" />
+
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="EncryptAndSign" />
+        <!-- Mask storage failure. -->
+        <transition on="InputOutputError" to="EncryptAndSign" />
+    </action-state>
+
+    <action-state id="EncryptAndSign">
+        <evaluate expression="EncryptNameIDs" />
+        <evaluate expression="EncryptAttributes" />
+        <evaluate expression="SignAssertions" />
+        <evaluate expression="EncryptAssertions" />
+
+        <evaluate expression="PostResponsePopulateAuditContext" />
+
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="PopulateClientStorageSaveContext" />
+    </action-state>
+    
+    <!-- We may need to save client storage. -->
+    
+    <action-state id="PopulateClientStorageSaveContext">
+        <evaluate expression="PopulateClientStorageSaveContext" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ClientStorageSave" />
+        <transition on="NoSaveNeeded" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+    </action-state>
+    
+    <subflow-state id="ClientStorageSave" subflow="client-storage/write">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="ReturnToParentFlow"/>
+        <transition to="HandleErrorWithView" />
+    </subflow-state>
+    
+    <!-- Outbound message handling completes in the parent flow. -->
+
+    <!-- Error Response Generation -->
+
+    <decision-state id="HandleError">
+        <on-entry>
+            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.SpringRequestContext), true).setRequestContext(flowRequestContext)" />
+            <evaluate expression="LogEvent" />
+        </on-entry>
+        <if test="LocalErrorPredicate.apply(opensamlProfileRequestContext)"
+            then="HandleErrorLocally" else="HandleErrorWithResponse" />
+    </decision-state>
+
+    <!-- For ECP, local errors mean SOAP faults. -->
+    
+    <decision-state id="HandleErrorLocally">
+        <if test="opensamlProfileRequestContext.isBrowserProfile() or !SOAPErrorPredicate.apply(opensamlProfileRequestContext)"
+            then="HandleErrorWithView" else="SOAPFault" />
+    </decision-state>
+
+    <!-- We need to trap non-proceed transitions in these actions to avoid an infinite loop. -->
+
+    <action-state id="HandleErrorWithResponse">
+        <evaluate expression="AddResponseShell" />
+        <evaluate expression="AddInResponseToToResponse" />
+        <evaluate expression="AddStatusToResponse" />
+        <evaluate expression="PostResponsePopulateAuditContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="ReturnToParentFlow" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+
+    <action-state id="SOAPFault">
+        <evaluate expression="InitializeOutboundMessageContextForSOAPFault" />
+        <evaluate expression="AddSOAPFault" />
+        <evaluate expression="EncodeMessage" />
+        <evaluate expression="RecordResponseComplete" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="end" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+
+    <!-- Splice in an additional step to write out the F-TICKS log entry on a successful completion. -->
+
+    <end-state id="end">
+        <on-entry>
+            <evaluate expression="WriteFTICKSLog" />
+        </on-entry>
+    </end-state>
+
+    <bean-import resource="sso-abstract-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-ecp-beans.xml shibboleth-idp/system/flows/saml/saml2/sso-ecp-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-ecp-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-ecp-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,44 +1,44 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.ECPProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
-        p:browserProfile="false" />
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2SOAP" />
-        </constructor-arg>
-    </bean>
-    
-    <alias name="shibboleth.OutgoingECPBindings" alias="shibboleth.OutgoingBindings"/>
-    
-    <bean id="shibboleth.BindingSpecificMessageHandler"
-            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
-        <property name="handlers">
-            <util:list>
-                <bean class="org.opensaml.saml.saml2.binding.impl.AddECPResponseHeaderHandler" scope="prototype" />
-                <bean class="org.opensaml.saml.saml2.binding.impl.AddRelayStateHeaderHandler" scope="prototype" />
-                <bean class="org.opensaml.saml.saml2.binding.impl.AddRequestAuthenticatedHeaderHandler" scope="prototype" />
-                <bean class="org.opensaml.saml.saml2.binding.impl.AddGeneratedKeyHeaderHandler" scope="prototype" />
-                <bean class="org.opensaml.saml.common.binding.impl.AddChannelBindingsHeaderHandler" scope="prototype" />
-            </util:list>
-        </property>
-    </bean>
-    
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.ECPProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
+        p:browserProfile="false" />
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPSOAP11Decoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2SOAP" />
+        </constructor-arg>
+    </bean>
+    
+    <alias name="shibboleth.OutgoingECPBindings" alias="shibboleth.OutgoingBindings"/>
+    
+    <bean id="shibboleth.BindingSpecificMessageHandler"
+            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
+        <property name="handlers">
+            <util:list>
+                <bean class="org.opensaml.saml.saml2.binding.impl.AddECPResponseHeaderHandler" scope="prototype" />
+                <bean class="org.opensaml.saml.saml2.binding.impl.AddRelayStateHeaderHandler" scope="prototype" />
+                <bean class="org.opensaml.saml.saml2.binding.impl.AddRequestAuthenticatedHeaderHandler" scope="prototype" />
+                <bean class="org.opensaml.saml.saml2.binding.impl.AddGeneratedKeyHeaderHandler" scope="prototype" />
+                <bean class="org.opensaml.saml.common.binding.impl.AddChannelBindingsHeaderHandler" scope="prototype" />
+            </util:list>
+        </property>
+    </bean>
+    
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-ecp-flow.xml shibboleth-idp/system/flows/saml/saml2/sso-ecp-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-ecp-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-ecp-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.sso.abstract">
-
-    <bean-import resource="sso-ecp-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.sso.abstract">
+
+    <bean-import resource="sso-ecp-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-post-beans.xml shibboleth-idp/system/flows/saml/saml2/sso-post-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-post-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-post-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,31 +1,31 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
-        p:browserProfile="true" />
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPPostDecoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2POST" />
-        </constructor-arg>
-    </bean>
-    
-    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
-    
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
+        p:browserProfile="true" />
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPPostDecoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2POST" />
+        </constructor-arg>
+    </bean>
+    
+    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
+    
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-post-flow.xml shibboleth-idp/system/flows/saml/saml2/sso-post-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-post-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-post-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.sso.abstract">
-
-    <bean-import resource="sso-post-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.sso.abstract">
+
+    <bean-import resource="sso-post-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-post-simplesign-beans.xml shibboleth-idp/system/flows/saml/saml2/sso-post-simplesign-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-post-simplesign-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-post-simplesign-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,32 +1,32 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
-        p:browserProfile="true" />
-    
-
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPPostSimpleSignDecoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2POSTSimpleSign" />
-        </constructor-arg>
-    </bean>
-    
-    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
-    
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
+        p:browserProfile="true" />
+    
+
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPPostSimpleSignDecoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2POSTSimpleSign" />
+        </constructor-arg>
+    </bean>
+    
+    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
+    
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-post-simplesign-flow.xml shibboleth-idp/system/flows/saml/saml2/sso-post-simplesign-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-post-simplesign-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-post-simplesign-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.sso.abstract">
-
-    <bean-import resource="sso-post-simplesign-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.sso.abstract">
+
+    <bean-import resource="sso-post-simplesign-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-redirect-beans.xml shibboleth-idp/system/flows/saml/saml2/sso-redirect-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-redirect-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-redirect-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,31 +1,31 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-    
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
-        p:browserProfile="true" />
-        
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPRedirectDeflateDecoder" scope="prototype"
-                p:parserPool-ref="shibboleth.ParserPool"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2Redirect" />
-        </constructor-arg>
-    </bean>
-
-    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+    
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
+        p:browserProfile="true" />
+        
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="org.opensaml.saml.saml2.binding.decoding.impl.HTTPRedirectDeflateDecoder" scope="prototype"
+                p:parserPool-ref="shibboleth.ParserPool"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2Redirect" />
+        </constructor-arg>
+    </bean>
+
+    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-redirect-flow.xml shibboleth-idp/system/flows/saml/saml2/sso-redirect-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-redirect-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-redirect-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.sso.abstract">
-
-    <bean-import resource="sso-redirect-beans.xml" />
-    
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.sso.abstract">
+
+    <bean-import resource="sso-redirect-beans.xml" />
+    
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-security-flow.xml shibboleth-idp/system/flows/saml/saml2/sso-security-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-security-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-security-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,24 +1,24 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="security-policy.abstract">
-
-    <!-- Default inbound security processing for SAML 2 SSO profile. -->
-
-    <action-state id="SAML2SSOSecurityPolicy">
-        <evaluate expression="ReceivedEndpointSecurityHandler" />
-        <evaluate expression="MessageReplaySecurityHandler" />
-        <evaluate expression="MessageLifetimeSecurityHandler" />
-        <evaluate expression="SAML2AuthnRequestsSignedSecurityHandler" />
-        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
-        <evaluate expression="SAML2HTTPRedirectDeflateSignatureSecurityHandler" />
-        <evaluate expression="SAML2HTTPPostSimpleSignSecurityHandler" />
-        <evaluate expression="CheckMandatoryIssuer" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="proceed" />
-    </action-state>
-    
-    <bean-import resource="../security-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="security-policy.abstract">
+
+    <!-- Default inbound security processing for SAML 2 SSO profile. -->
+
+    <action-state id="SAML2SSOSecurityPolicy">
+        <evaluate expression="ReceivedEndpointSecurityHandler" />
+        <evaluate expression="MessageReplaySecurityHandler" />
+        <evaluate expression="MessageLifetimeSecurityHandler" />
+        <evaluate expression="SAML2AuthnRequestsSignedSecurityHandler" />
+        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
+        <evaluate expression="SAML2HTTPRedirectDeflateSignatureSecurityHandler" />
+        <evaluate expression="SAML2HTTPPostSimpleSignSecurityHandler" />
+        <evaluate expression="CheckMandatoryIssuer" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="proceed" />
+    </action-state>
+    
+    <bean-import resource="../security-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-unsolicited-beans.xml shibboleth-idp/system/flows/saml/saml2/sso-unsolicited-beans.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-unsolicited-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-unsolicited-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,30 +1,30 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean id="InitializeProfileRequestContext"
-        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
-        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
-        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
-        p:browserProfile="true" />
-        
-    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
-        <constructor-arg>
-            <bean class="net.shibboleth.idp.saml.saml2.profile.impl.IdPInitiatedSSORequestMessageDecoder" scope="prototype"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:bindingDescriptor-ref="shibboleth.Binding.SAML2Unsolicited" />
-        </constructor-arg>
-    </bean>
-
-    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
-
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean id="InitializeProfileRequestContext"
+        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
+        p:profileId="#{T(net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration).PROFILE_ID}"
+        p:loggingId="%{idp.service.logging.saml2sso:SSO}"
+        p:browserProfile="true" />
+        
+    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
+        <constructor-arg>
+            <bean class="net.shibboleth.idp.saml.saml2.profile.impl.IdPInitiatedSSORequestMessageDecoder" scope="prototype"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:bindingDescriptor-ref="shibboleth.Binding.SAML2Unsolicited" />
+        </constructor-arg>
+    </bean>
+
+    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
+
 </beans>
\ No newline at end of file
diff -rupN shibboleth-idp/system/flows/saml/saml2/sso-unsolicited-flow.xml shibboleth-idp/system/flows/saml/saml2/sso-unsolicited-flow.xml
--- shibboleth-idp/system/flows/saml/saml2/sso-unsolicited-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml2/sso-unsolicited-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,8 +1,8 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      parent="saml2.sso.abstract">
-
-    <bean-import resource="sso-unsolicited-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      parent="saml2.sso.abstract">
+
+    <bean-import resource="sso-unsolicited-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/saml-abstract-beans.xml shibboleth-idp/system/flows/saml/saml-abstract-beans.xml
--- shibboleth-idp/system/flows/saml/saml-abstract-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml-abstract-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,363 +1,363 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans
-    xmlns="http://www.springframework.org/schema/beans"
-    xmlns:c="http://www.springframework.org/schema/c"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:p="http://www.springframework.org/schema/p"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-    default-init-method="initialize"
-    default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-
-    <!-- These are beans that are common to most or all SAML profile flows, regardless of version. -->
-
-    <bean id="PopulateMetricContext"
-        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
-        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
-
-    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
-    <import resource="../../conf/audit-system.xml" />
-
-    <bean id="PostDecodePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostDecodeAuditExtractors') ?: getObject('shibboleth.DefaultPostDecodeAuditExtractors')}" />
-
-    <bean id="CheckMessageVersion"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.impl.CheckMessageVersionHandler" scope="prototype"
-                p:ignoreMissingOrUnrecognized="true" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE_VERSION" />
-        </property>
-    </bean>
-
-    <bean id="SAML1ArtifactRequestIssuer"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.saml1.binding.impl.SAML1ArtifactRequestIssuerHandler" scope="prototype"
-                p:artifactMap-ref="shibboleth.SAMLArtifactMap" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="SAMLProtocolAndRole"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.impl.SAMLProtocolAndRoleHandler" scope="prototype"
-                p:protocol-ref="shibboleth.MetadataLookup.Protocol"
-                p:role-ref="shibboleth.MetadataLookup.Role" />
-        </constructor-arg>
-    </bean>
-    
-    <bean id="SAMLMetadataLookup"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler" scope="prototype">
-                <property name="roleDescriptorResolver">
-                    <bean class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
-                        c:mdResolver-ref="shibboleth.MetadataResolver" />
-                </property>
-            </bean>
-        </constructor-arg>
-    </bean>
-    
-    <bean id="SAMLPopulateAttributeConsumingService"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.impl.SAMLAddAttributeConsumingServiceHandler" scope="prototype" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="InitializeRelyingPartyContexFromSAMLPeer"
-        class="net.shibboleth.idp.saml.profile.impl.InitializeRelyingPartyContextFromSAMLPeer" scope="prototype" />
-
-    <bean id="SelectRelyingPartyConfiguration"
-        class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration" scope="prototype"
-        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
-    
-    <bean id="PostLookupPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostLookupAuditExtractors') ?: getObject('shibboleth.DefaultPostLookupAuditExtractors')}" />
-
-    <bean id="SelectProfileConfiguration"
-        class="net.shibboleth.idp.profile.impl.SelectProfileConfiguration" scope="prototype" />
-        
-    <bean id="PopulateSignatureValidationParameters"
-        class="org.opensaml.profile.action.impl.PopulateSignatureValidationParameters" scope="prototype"
-        p:configurationLookupStrategy-ref="shibboleth.SignatureValidationConfigurationLookup"
-        p:signatureValidationParametersResolver-ref="shibboleth.SignatureValidationParametersResolver" />
-
-    <bean id="PopulateClientTLSValidationParameters"
-        class="org.opensaml.profile.action.impl.PopulateClientTLSValidationParameters" scope="prototype"
-        p:configurationLookupStrategy-ref="shibboleth.ClientTLSValidationConfigurationLookup"
-        p:clientTLSValidationParametersResolver-ref="shibboleth.ClientTLSValidationParametersResolver" />
-
-    <bean id="PopulateInboundInterceptContext"
-            class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext" scope="prototype"
-            p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
-        <property name="activeFlowsLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.InboundFlowsLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="InitializeOutboundMessageContext"
-        class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContext" scope="prototype" />
-
-    <bean id="PopulateBindingAndEndpointContexts"
-        class="net.shibboleth.idp.saml.profile.impl.PopulateBindingAndEndpointContexts" scope="prototype"
-        p:endpointResolver-ref="shibboleth.EndpointResolver"
-        p:endpointType="#{getObject('shibboleth.EndpointType')}"
-        p:bindings-ref="shibboleth.OutgoingBindings"
-        p:artifactImpliesSecureChannel="%{idp.artifact.secureChannel:true}" />
-        
-    <bean id="PopulateDelegationContext"
-            class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.PopulateDelegationContext" scope="prototype">
-        <property name="credentialResolver" ref="shibboleth.MetadataCredentialResolver" />
-    </bean>
-
-    <bean id="PopulateResponseSignatureSigningParameters"
-            class="org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters" scope="prototype"
-            p:configurationLookupStrategy-ref="shibboleth.SignatureSigningConfigurationLookup"
-            p:signatureSigningParametersResolver-ref="shibboleth.SignatureSigningParametersResolver">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.saml.profile.config.logic.SignResponsesPredicate" />
-        </property>
-    </bean>
-
-    <bean id="PopulateRequestSignatureSigningParameters"
-            class="org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters" scope="prototype"
-            p:configurationLookupStrategy-ref="shibboleth.SignatureSigningConfigurationLookup"
-            p:signatureSigningParametersResolver-ref="shibboleth.SignatureSigningParametersResolver">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.saml.profile.config.logic.SignRequestsPredicate" />
-        </property>
-    </bean>
-
-    <bean id="PopulateAssertionSignatureSigningParameters"
-            class="org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters" scope="prototype"
-            p:configurationLookupStrategy-ref="shibboleth.SignatureSigningConfigurationLookup"
-            p:signatureSigningParametersResolver-ref="shibboleth.SignatureSigningParametersResolver">
-        <property name="activationCondition">
-            <bean parent="shibboleth.Conditions.OR">
-                <constructor-arg>
-                    <bean class="net.shibboleth.idp.saml.profile.config.logic.SignAssertionsPredicate"
-                        p:honorMetadata="%{idp.signing.honorWantAssertionsSigned:true}" />
-                </constructor-arg>
-                <constructor-arg ref="shibboleth.Conditions.IssuingDelegatedAssertion" />
-            </bean>
-        </property>
-        <property name="securityParametersContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookupOrCreate.SecurityParameters"
-                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
-        </property>
-        <property name="existingParametersContextLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookup.SecurityParameters"
-                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
-        </property>
-    </bean>
-    
-    <bean id="PopulateEncryptionParameters"
-            class="net.shibboleth.idp.saml.saml2.profile.impl.PopulateEncryptionParameters" scope="prototype"
-            p:configurationLookupStrategy-ref="shibboleth.EncryptionConfigurationLookup"
-            p:encryptionParametersResolver-ref="shibboleth.EncryptionParametersResolver"
-            p:protocol-ref="shibboleth.MetadataLookup.Protocol"
-            p:role-ref="shibboleth.MetadataLookup.Role" />
-
-    <bean id="PopulateDecryptionParameters"
-        class="org.opensaml.profile.action.impl.PopulateDecryptionParameters" scope="prototype"
-        p:configurationLookupStrategy-ref="shibboleth.DecryptionConfigurationLookup"
-        p:decryptionParametersResolver-ref="shibboleth.DecryptionParametersResolver" />
-        
-    <bean id="DecryptNameIDs" class="org.opensaml.saml.saml2.profile.impl.DecryptNameIDs" scope="prototype" />
-
-    <bean id="ExtractSubjectFromRequest"
-            class="net.shibboleth.idp.saml.profile.impl.ExtractSubjectFromRequest" scope="prototype">
-        <property name="nameIDPolicyPredicate">
-            <bean class="org.opensaml.saml.common.profile.logic.AffiliationNameIDPolicyPredicate"
-                    p:metadataResolver-ref="shibboleth.MetadataResolver"
-                    p:responderIdLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
-                    p:requesterIdLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
-                <property name="objectLookupStrategy">
-                    <bean class="net.shibboleth.idp.saml.profile.impl.ExtractSubjectFromRequest.SubjectNameLookupFunction" />
-                </property>
-                <property name="formats">
-                    <util:list>
-                        <value>urn:mace:shibboleth:1.0:nameIdentifier</value>
-                        <value>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</value>
-                        <value>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</value>
-                    </util:list>
-                </property>
-            </bean>
-        </property>
-    </bean>
-
-    <bean id="PopulateSubjectCanonicalizationContext"
-        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
-        p:availableFlows-ref="shibboleth.SAMLSubjectCanonicalizationFlows" />
-
-    <bean id="FinalizeSAMLSubjectCanonicalization"
-        class="net.shibboleth.idp.saml.profile.impl.FinalizeSAMLSubjectCanonicalization" scope="prototype" />
-
-    <bean id="PopulateClientStorageLoadContext"
-        class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext" scope="prototype"
-        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-    <bean id="InitializeAuthenticationContext"
-        class="net.shibboleth.idp.saml.profile.impl.InitializeAuthenticationContext" scope="prototype" />
-
-    <bean id="InitialAuthenticationFlag" class="java.lang.Boolean">
-        <constructor-arg value="#{ '%{idp.authn.flows.initial:}'.trim().length() gt 0 }" type="boolean" />
-    </bean>
-
-    <bean id="ResolveAttributes" class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
-        c:resolverService-ref="shibboleth.AttributeResolverService"
-        p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}" />
-
-    <bean id="FilterAttributes" class="net.shibboleth.idp.profile.impl.FilterAttributes" scope="prototype"
-        c:filterService-ref="shibboleth.AttributeFilterService"
-        p:maskFailures="%{idp.service.attribute.filter.maskFailures:true}" />
-
-    <bean id="FilterByQueriedAttributeDesignators"
-        class="net.shibboleth.idp.saml.saml1.profile.impl.FilterByQueriedAttributeDesignators" scope="prototype"
-        c:mapper-ref="shibboleth.SAML1AttributeDesignatorsMapperService" />
-
-    <bean id="FilterByQueriedAttributes"
-        class="net.shibboleth.idp.saml.saml2.profile.impl.FilterByQueriedAttributes" scope="prototype"
-        c:mapper-ref="shibboleth.SAML2AttributesMapperService" />
-
-    <bean id="PopulatePostAuthnInterceptContext"
-            class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext" scope="prototype"
-            p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
-        <property name="activeFlowsLookupStrategy">
-            <bean class="net.shibboleth.idp.authn.config.navigate.PostAuthenticationFlowsLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="AddInResponseToToResponse"
-            class="org.opensaml.saml.common.profile.impl.AddInResponseToToResponse" scope="prototype">
-        <property name="requestIdLookupStrategy">
-            <bean class="org.opensaml.saml.common.profile.impl.AddInResponseToToResponse.DefaultRequestIdLookupStrategy"
-                p:suppressForBindings="#{ {'urn:mace:shibboleth:1.0:profiles:AuthnRequest', 'urn:mace:shibboleth:2.0:profiles:AuthnRequest'} }"/>
-        </property>
-    </bean>
-
-    <bean id="AddNotBeforeConditionToAssertions"
-            class="org.opensaml.saml.common.profile.impl.AddNotBeforeConditionToAssertions" scope="prototype">
-        <property name="activationCondition">
-            <bean class="net.shibboleth.idp.saml.profile.config.logic.NotBeforeProfileConfigPredicate" />
-        </property>
-    </bean>
-
-    <bean id="AddNotOnOrAfterConditionToAssertions"
-            class="org.opensaml.saml.common.profile.impl.AddNotOnOrAfterConditionToAssertions" scope="prototype"
-            p:defaultAssertionLifetime="PT5M">
-        <property name="assertionLifetimeStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.config.navigate.AssertionLifetimeLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="AddAudienceRestrictionToAssertions"
-            class="org.opensaml.saml.common.profile.impl.AddAudienceRestrictionToAssertions" scope="prototype">
-        <property name="audienceRestrictionsLookupStrategy">
-            <bean class="net.shibboleth.idp.saml.profile.config.navigate.AudienceRestrictionsLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="SignAssertions" class="org.opensaml.saml.common.profile.impl.SignAssertions" scope="prototype">
-        <property name="securityParametersLookupStrategy">
-            <bean class="com.google.common.base.Functions" factory-method="compose"
-                c:g-ref="shibboleth.ChildLookup.SecurityParameters"
-                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
-        </property>
-    </bean>
-
-    <bean id="PostAssertionPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostAssertionAuditExtractors') ?: getObject('shibboleth.DefaultPostAssertionAuditExtractors')}" />
-
-    <bean id="PostResponsePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.PostResponseAuditExtractors') ?: getObject('shibboleth.DefaultPostResponseAuditExtractors')}" />
-
-    <bean id="PopulateClientStorageSaveContext"
-        class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext" scope="prototype"
-        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
-
-    <bean id="PopulateOutboundInterceptContext"
-            class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext" scope="prototype"
-            p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
-        <property name="activeFlowsLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.config.navigate.OutboundFlowsLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="HandleOutboundMessage"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:messageHandler-ref="shibboleth.PreEncodeMessageHandler"
-            c:executionDirection="OUTBOUND">
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_PROC_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="messageEncoderFactory" class="net.shibboleth.idp.saml.profile.impl.SpringAwareMessageEncoderFactory"
-        p:bindings-ref="shibboleth.OutgoingBindings" />
-
-    <bean id="EncodeMessage" class="org.opensaml.profile.action.impl.EncodeMessage" scope="prototype"
-        p:messageEncoderFactory-ref="messageEncoderFactory"
-        p:messageHandler="#{getObject('shibboleth.BindingSpecificMessageHandler')}" />
-
-    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
-
-    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
-        p:formattingMap-ref="shibboleth.AuditFormattingMap"
-        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
-        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-        
-    <bean id="WriteFTICKSLog" class="net.shibboleth.idp.saml.audit.impl.WriteFTICKSLog" scope="prototype"
-        p:activationCondition="#{'%{idp.fticks.federation:null}' != 'null'}"
-        p:federationId="#{'%{idp.fticks.federation:Undefined}'.trim()}"
-        p:digestAlgorithm="#{'%{idp.fticks.algorithm:SHA-256}'.trim()}" p:salt="%{idp.fticks.salt:}" />
-
-    <bean id="LocalErrorPredicate"
-            class="org.opensaml.saml.common.profile.logic.DefaultLocalErrorPredicate"
-            p:localEvents="#{getObject('shibboleth.LocalEventMap').keySet()}">
-        <property name="eventContextLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
-        </property>
-    </bean>
-
-    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
-            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
-        <property name="eventContextLookupStrategy">
-            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
-        </property>
-    </bean>
-    
-    <bean id="MapEventToView"
-        class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
-        p:defaultView-ref="shibboleth.DefaultErrorView"
-        p:eventMap="#{getObject('shibboleth.EventViewMap')}" />
-    
-    <bean id="ErrorViewPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
-        p:fieldExtractors="#{getObject('shibboleth.ErrorViewAuditExtractors') ?: getObject('shibboleth.DefaultErrorViewAuditExtractors')}" />
-
-    <bean id="PopulateUserAgentContext"
-        class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
-        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans
+    xmlns="http://www.springframework.org/schema/beans"
+    xmlns:c="http://www.springframework.org/schema/c"
+    xmlns:context="http://www.springframework.org/schema/context"
+    xmlns:p="http://www.springframework.org/schema/p"
+    xmlns:util="http://www.springframework.org/schema/util"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+    default-init-method="initialize"
+    default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+
+    <!-- These are beans that are common to most or all SAML profile flows, regardless of version. -->
+
+    <bean id="PopulateMetricContext"
+        class="org.opensaml.profile.action.impl.PopulateMetricContext" scope="prototype"
+        p:metricStrategy="#{getObject('shibboleth.metrics.MetricStrategy')}" />
+
+    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
+    <import resource="../../conf/audit-system.xml" />
+
+    <bean id="PostDecodePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostDecodeAuditExtractors') ?: getObject('shibboleth.DefaultPostDecodeAuditExtractors')}" />
+
+    <bean id="CheckMessageVersion"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.impl.CheckMessageVersionHandler" scope="prototype"
+                p:ignoreMissingOrUnrecognized="true" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.INVALID_MESSAGE_VERSION" />
+        </property>
+    </bean>
+
+    <bean id="SAML1ArtifactRequestIssuer"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.saml1.binding.impl.SAML1ArtifactRequestIssuerHandler" scope="prototype"
+                p:artifactMap-ref="shibboleth.SAMLArtifactMap" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="SAMLProtocolAndRole"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.impl.SAMLProtocolAndRoleHandler" scope="prototype"
+                p:protocol-ref="shibboleth.MetadataLookup.Protocol"
+                p:role-ref="shibboleth.MetadataLookup.Role" />
+        </constructor-arg>
+    </bean>
+    
+    <bean id="SAMLMetadataLookup"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler" scope="prototype">
+                <property name="roleDescriptorResolver">
+                    <bean class="org.opensaml.saml.metadata.resolver.impl.PredicateRoleDescriptorResolver"
+                        c:mdResolver-ref="shibboleth.MetadataResolver" />
+                </property>
+            </bean>
+        </constructor-arg>
+    </bean>
+    
+    <bean id="SAMLPopulateAttributeConsumingService"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.impl.SAMLAddAttributeConsumingServiceHandler" scope="prototype" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="InitializeRelyingPartyContexFromSAMLPeer"
+        class="net.shibboleth.idp.saml.profile.impl.InitializeRelyingPartyContextFromSAMLPeer" scope="prototype" />
+
+    <bean id="SelectRelyingPartyConfiguration"
+        class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration" scope="prototype"
+        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
+    
+    <bean id="PostLookupPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostLookupAuditExtractors') ?: getObject('shibboleth.DefaultPostLookupAuditExtractors')}" />
+
+    <bean id="SelectProfileConfiguration"
+        class="net.shibboleth.idp.profile.impl.SelectProfileConfiguration" scope="prototype" />
+        
+    <bean id="PopulateSignatureValidationParameters"
+        class="org.opensaml.profile.action.impl.PopulateSignatureValidationParameters" scope="prototype"
+        p:configurationLookupStrategy-ref="shibboleth.SignatureValidationConfigurationLookup"
+        p:signatureValidationParametersResolver-ref="shibboleth.SignatureValidationParametersResolver" />
+
+    <bean id="PopulateClientTLSValidationParameters"
+        class="org.opensaml.profile.action.impl.PopulateClientTLSValidationParameters" scope="prototype"
+        p:configurationLookupStrategy-ref="shibboleth.ClientTLSValidationConfigurationLookup"
+        p:clientTLSValidationParametersResolver-ref="shibboleth.ClientTLSValidationParametersResolver" />
+
+    <bean id="PopulateInboundInterceptContext"
+            class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext" scope="prototype"
+            p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
+        <property name="activeFlowsLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.InboundFlowsLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="InitializeOutboundMessageContext"
+        class="net.shibboleth.idp.saml.profile.impl.InitializeOutboundMessageContext" scope="prototype" />
+
+    <bean id="PopulateBindingAndEndpointContexts"
+        class="net.shibboleth.idp.saml.profile.impl.PopulateBindingAndEndpointContexts" scope="prototype"
+        p:endpointResolver-ref="shibboleth.EndpointResolver"
+        p:endpointType="#{getObject('shibboleth.EndpointType')}"
+        p:bindings-ref="shibboleth.OutgoingBindings"
+        p:artifactImpliesSecureChannel="%{idp.artifact.secureChannel:true}" />
+        
+    <bean id="PopulateDelegationContext"
+            class="net.shibboleth.idp.saml.saml2.profile.delegation.impl.PopulateDelegationContext" scope="prototype">
+        <property name="credentialResolver" ref="shibboleth.MetadataCredentialResolver" />
+    </bean>
+
+    <bean id="PopulateResponseSignatureSigningParameters"
+            class="org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters" scope="prototype"
+            p:configurationLookupStrategy-ref="shibboleth.SignatureSigningConfigurationLookup"
+            p:signatureSigningParametersResolver-ref="shibboleth.SignatureSigningParametersResolver">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.saml.profile.config.logic.SignResponsesPredicate" />
+        </property>
+    </bean>
+
+    <bean id="PopulateRequestSignatureSigningParameters"
+            class="org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters" scope="prototype"
+            p:configurationLookupStrategy-ref="shibboleth.SignatureSigningConfigurationLookup"
+            p:signatureSigningParametersResolver-ref="shibboleth.SignatureSigningParametersResolver">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.saml.profile.config.logic.SignRequestsPredicate" />
+        </property>
+    </bean>
+
+    <bean id="PopulateAssertionSignatureSigningParameters"
+            class="org.opensaml.saml.common.profile.impl.PopulateSignatureSigningParameters" scope="prototype"
+            p:configurationLookupStrategy-ref="shibboleth.SignatureSigningConfigurationLookup"
+            p:signatureSigningParametersResolver-ref="shibboleth.SignatureSigningParametersResolver">
+        <property name="activationCondition">
+            <bean parent="shibboleth.Conditions.OR">
+                <constructor-arg>
+                    <bean class="net.shibboleth.idp.saml.profile.config.logic.SignAssertionsPredicate"
+                        p:honorMetadata="%{idp.signing.honorWantAssertionsSigned:true}" />
+                </constructor-arg>
+                <constructor-arg ref="shibboleth.Conditions.IssuingDelegatedAssertion" />
+            </bean>
+        </property>
+        <property name="securityParametersContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookupOrCreate.SecurityParameters"
+                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
+        </property>
+        <property name="existingParametersContextLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookup.SecurityParameters"
+                c:f-ref="shibboleth.MessageContextLookup.Outbound" />
+        </property>
+    </bean>
+    
+    <bean id="PopulateEncryptionParameters"
+            class="net.shibboleth.idp.saml.saml2.profile.impl.PopulateEncryptionParameters" scope="prototype"
+            p:configurationLookupStrategy-ref="shibboleth.EncryptionConfigurationLookup"
+            p:encryptionParametersResolver-ref="shibboleth.EncryptionParametersResolver"
+            p:protocol-ref="shibboleth.MetadataLookup.Protocol"
+            p:role-ref="shibboleth.MetadataLookup.Role" />
+
+    <bean id="PopulateDecryptionParameters"
+        class="org.opensaml.profile.action.impl.PopulateDecryptionParameters" scope="prototype"
+        p:configurationLookupStrategy-ref="shibboleth.DecryptionConfigurationLookup"
+        p:decryptionParametersResolver-ref="shibboleth.DecryptionParametersResolver" />
+        
+    <bean id="DecryptNameIDs" class="org.opensaml.saml.saml2.profile.impl.DecryptNameIDs" scope="prototype" />
+
+    <bean id="ExtractSubjectFromRequest"
+            class="net.shibboleth.idp.saml.profile.impl.ExtractSubjectFromRequest" scope="prototype">
+        <property name="nameIDPolicyPredicate">
+            <bean class="org.opensaml.saml.common.profile.logic.AffiliationNameIDPolicyPredicate"
+                    p:metadataResolver-ref="shibboleth.MetadataResolver"
+                    p:responderIdLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
+                    p:requesterIdLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
+                <property name="objectLookupStrategy">
+                    <bean class="net.shibboleth.idp.saml.profile.impl.ExtractSubjectFromRequest.SubjectNameLookupFunction" />
+                </property>
+                <property name="formats">
+                    <util:list>
+                        <value>urn:mace:shibboleth:1.0:nameIdentifier</value>
+                        <value>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</value>
+                        <value>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</value>
+                    </util:list>
+                </property>
+            </bean>
+        </property>
+    </bean>
+
+    <bean id="PopulateSubjectCanonicalizationContext"
+        class="net.shibboleth.idp.authn.impl.PopulateSubjectCanonicalizationContext" scope="prototype"
+        p:availableFlows-ref="shibboleth.SAMLSubjectCanonicalizationFlows" />
+
+    <bean id="FinalizeSAMLSubjectCanonicalization"
+        class="net.shibboleth.idp.saml.profile.impl.FinalizeSAMLSubjectCanonicalization" scope="prototype" />
+
+    <bean id="PopulateClientStorageLoadContext"
+        class="org.opensaml.storage.impl.client.PopulateClientStorageLoadContext" scope="prototype"
+        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+    <bean id="InitializeAuthenticationContext"
+        class="net.shibboleth.idp.saml.profile.impl.InitializeAuthenticationContext" scope="prototype" />
+
+    <bean id="InitialAuthenticationFlag" class="java.lang.Boolean">
+        <constructor-arg value="#{ '%{idp.authn.flows.initial:}'.trim().length() gt 0 }" type="boolean" />
+    </bean>
+
+    <bean id="ResolveAttributes" class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
+        c:resolverService-ref="shibboleth.AttributeResolverService"
+        p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}" />
+
+    <bean id="FilterAttributes" class="net.shibboleth.idp.profile.impl.FilterAttributes" scope="prototype"
+        c:filterService-ref="shibboleth.AttributeFilterService"
+        p:maskFailures="%{idp.service.attribute.filter.maskFailures:true}" />
+
+    <bean id="FilterByQueriedAttributeDesignators"
+        class="net.shibboleth.idp.saml.saml1.profile.impl.FilterByQueriedAttributeDesignators" scope="prototype"
+        c:mapper-ref="shibboleth.SAML1AttributeDesignatorsMapperService" />
+
+    <bean id="FilterByQueriedAttributes"
+        class="net.shibboleth.idp.saml.saml2.profile.impl.FilterByQueriedAttributes" scope="prototype"
+        c:mapper-ref="shibboleth.SAML2AttributesMapperService" />
+
+    <bean id="PopulatePostAuthnInterceptContext"
+            class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext" scope="prototype"
+            p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
+        <property name="activeFlowsLookupStrategy">
+            <bean class="net.shibboleth.idp.authn.config.navigate.PostAuthenticationFlowsLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="AddInResponseToToResponse"
+            class="org.opensaml.saml.common.profile.impl.AddInResponseToToResponse" scope="prototype">
+        <property name="requestIdLookupStrategy">
+            <bean class="org.opensaml.saml.common.profile.impl.AddInResponseToToResponse.DefaultRequestIdLookupStrategy"
+                p:suppressForBindings="#{ {'urn:mace:shibboleth:1.0:profiles:AuthnRequest', 'urn:mace:shibboleth:2.0:profiles:AuthnRequest'} }"/>
+        </property>
+    </bean>
+
+    <bean id="AddNotBeforeConditionToAssertions"
+            class="org.opensaml.saml.common.profile.impl.AddNotBeforeConditionToAssertions" scope="prototype">
+        <property name="activationCondition">
+            <bean class="net.shibboleth.idp.saml.profile.config.logic.NotBeforeProfileConfigPredicate" />
+        </property>
+    </bean>
+
+    <bean id="AddNotOnOrAfterConditionToAssertions"
+            class="org.opensaml.saml.common.profile.impl.AddNotOnOrAfterConditionToAssertions" scope="prototype"
+            p:defaultAssertionLifetime="PT5M">
+        <property name="assertionLifetimeStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.config.navigate.AssertionLifetimeLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="AddAudienceRestrictionToAssertions"
+            class="org.opensaml.saml.common.profile.impl.AddAudienceRestrictionToAssertions" scope="prototype">
+        <property name="audienceRestrictionsLookupStrategy">
+            <bean class="net.shibboleth.idp.saml.profile.config.navigate.AudienceRestrictionsLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="SignAssertions" class="org.opensaml.saml.common.profile.impl.SignAssertions" scope="prototype">
+        <property name="securityParametersLookupStrategy">
+            <bean class="com.google.common.base.Functions" factory-method="compose"
+                c:g-ref="shibboleth.ChildLookup.SecurityParameters"
+                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
+        </property>
+    </bean>
+
+    <bean id="PostAssertionPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostAssertionAuditExtractors') ?: getObject('shibboleth.DefaultPostAssertionAuditExtractors')}" />
+
+    <bean id="PostResponsePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.PostResponseAuditExtractors') ?: getObject('shibboleth.DefaultPostResponseAuditExtractors')}" />
+
+    <bean id="PopulateClientStorageSaveContext"
+        class="org.opensaml.storage.impl.client.PopulateClientStorageSaveContext" scope="prototype"
+        p:storageServices="#{ getObject('shibboleth.ClientStorageServices') ?: getObject('shibboleth.DefaultClientStorageServices') }" />
+
+    <bean id="PopulateOutboundInterceptContext"
+            class="net.shibboleth.idp.profile.interceptor.impl.PopulateProfileInterceptorContext" scope="prototype"
+            p:availableFlows-ref="shibboleth.AvailableInterceptFlows">
+        <property name="activeFlowsLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.config.navigate.OutboundFlowsLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="HandleOutboundMessage"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:messageHandler-ref="shibboleth.PreEncodeMessageHandler"
+            c:executionDirection="OUTBOUND">
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_PROC_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="messageEncoderFactory" class="net.shibboleth.idp.saml.profile.impl.SpringAwareMessageEncoderFactory"
+        p:bindings-ref="shibboleth.OutgoingBindings" />
+
+    <bean id="EncodeMessage" class="org.opensaml.profile.action.impl.EncodeMessage" scope="prototype"
+        p:messageEncoderFactory-ref="messageEncoderFactory"
+        p:messageHandler="#{getObject('shibboleth.BindingSpecificMessageHandler')}" />
+
+    <bean id="RecordResponseComplete" class="net.shibboleth.idp.profile.impl.RecordResponseComplete" scope="prototype" />
+
+    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
+        p:formattingMap-ref="shibboleth.AuditFormattingMap"
+        p:dateTimeFormat="#{getObject('shibboleth.AuditDateTimeFormat')}"
+        p:useDefaultTimeZone="#{getObject('shibboleth.AuditDefaultTimeZone') ?: false}"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+        
+    <bean id="WriteFTICKSLog" class="net.shibboleth.idp.saml.audit.impl.WriteFTICKSLog" scope="prototype"
+        p:activationCondition="#{'%{idp.fticks.federation:null}' != 'null'}"
+        p:federationId="#{'%{idp.fticks.federation:Undefined}'.trim()}"
+        p:digestAlgorithm="#{'%{idp.fticks.algorithm:SHA-256}'.trim()}" p:salt="%{idp.fticks.salt:}" />
+
+    <bean id="LocalErrorPredicate"
+            class="org.opensaml.saml.common.profile.logic.DefaultLocalErrorPredicate"
+            p:localEvents="#{getObject('shibboleth.LocalEventMap').keySet()}">
+        <property name="eventContextLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
+        </property>
+    </bean>
+
+    <bean id="LogEvent" class="org.opensaml.profile.action.impl.LogEvent" scope="prototype"
+            p:suppressedEvents="#{getObject('shibboleth.SuppressedEvents') ?: getObject('shibboleth.DefaultSuppressedEvents')}">
+        <property name="eventContextLookupStrategy">
+            <bean class="net.shibboleth.idp.profile.context.navigate.WebFlowCurrentEventLookupFunction" />
+        </property>
+    </bean>
+    
+    <bean id="MapEventToView"
+        class="net.shibboleth.idp.profile.context.navigate.SpringEventToViewLookupFunction"
+        p:defaultView-ref="shibboleth.DefaultErrorView"
+        p:eventMap="#{getObject('shibboleth.EventViewMap')}" />
+    
+    <bean id="ErrorViewPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
+        p:fieldExtractors="#{getObject('shibboleth.ErrorViewAuditExtractors') ?: getObject('shibboleth.DefaultErrorViewAuditExtractors')}" />
+
+    <bean id="PopulateUserAgentContext"
+        class="net.shibboleth.idp.profile.impl.PopulateUserAgentContext" scope="prototype"
+        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/saml-abstract-flow.xml shibboleth-idp/system/flows/saml/saml-abstract-flow.xml
--- shibboleth-idp/system/flows/saml/saml-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/saml-abstract-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,197 +1,197 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    abstract="true">
-
-    <!--  Actions common to most SAML profile flows. -->
-
-    <!-- Decode / Configuration Lookup / Request Checking -->
-
-    <action-state id="DecodeMessage">
-        <evaluate expression="PopulateMetricContext" />
-        <evaluate expression="DecodeMessage" />
-        <evaluate expression="PostDecodePopulateAuditContext" />
-
-        <evaluate expression="CheckMessageVersion" />
-        <evaluate expression="SAML1ArtifactRequestIssuer" />
-        <evaluate expression="SAMLProtocolAndRole" />
-        <evaluate expression="SAMLMetadataLookup" />
-        <evaluate expression="SAMLPopulateAttributeConsumingService" />
-
-        <evaluate expression="InitializeRelyingPartyContexFromSAMLPeer" />
-        <evaluate expression="SelectRelyingPartyConfiguration" />
-
-        <evaluate expression="PostLookupPopulateAuditContext" />
-        
-        <evaluate expression="SelectProfileConfiguration" />
-
-        <evaluate expression="PopulateSignatureValidationParameters" />
-        <evaluate expression="PopulateClientTLSValidationParameters" />
-        
-        <evaluate expression="PopulateInboundInterceptContext" />
-        <evaluate expression="PopulateUserAgentContext" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="CheckInboundInterceptContext" />
-    </action-state>
-
-    <decision-state id="CheckInboundInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="OutboundContextsAndSecurityParameters" else="DoInboundInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="OutboundContextsAndSecurityParameters" />
-    </subflow-state>
-    
-    <action-state id="OutboundContextsAndSecurityParameters">
-        <evaluate expression="InitializeOutboundMessageContext" />
-        <evaluate expression="InitializeMessageChannelSecurityContext" />
-        <evaluate expression="PopulateBindingAndEndpointContexts" />
-        <evaluate expression="PopulateDelegationContext" />
-        <evaluate expression="PopulateResponseSignatureSigningParameters" />
-        <evaluate expression="PopulateAssertionSignatureSigningParameters" />
-        <evaluate expression="PopulateEncryptionParameters" />
-        <evaluate expression="PopulateDecryptionParameters" />
-        <evaluate expression="'proceed'" />
-
-        <transition on="proceed" to="ExtractSubject" />
-    </action-state>
-
-    <!-- Pull SAML Subject if present and turn it into a principal name. -->
-
-    <action-state id="ExtractSubject">
-        <evaluate expression="DecryptNameIDs" />
-        <evaluate expression="ExtractSubjectFromRequest" />
-        <evaluate expression="PopulateSubjectCanonicalizationContext" />
-        <evaluate expression="'proceed'" />
-        
-        <!-- No subject to operate on, so just skip to the profile. -->
-        <transition on="NoSubject" to="DoProfileWork" />
-        
-        <transition on="proceed" to="CallSubjectCanonicalization" />
-    </action-state>
-
-    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="FinalizeSAMLSubjectCanonicalization" />
-    </subflow-state>
-    
-    <action-state id="FinalizeSAMLSubjectCanonicalization">
-        <evaluate expression="FinalizeSAMLSubjectCanonicalization" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="DoProfileWork" />
-    </action-state>
-        
-    <!--
-    The meat will be inserted here by defining DoProfileWork and transitioning
-    from there to profile activity and eventually to the final stages below.
-    -->
-
-    <!-- Post Processing / Encode -->
-
-    <!--
-    These actions handle errors by routing to the catch-all end-state, because
-    it's assumed that any error here is unrecoverable and would prevent returning
-    a SAML protocol message regardless.
-    -->
-
-    <!-- Pick back up with profile. -->
-
-    <action-state id="ReturnToParentFlow">
-        <evaluate expression="PopulateOutboundInterceptContext" />
-        <evaluate expression="'proceed'" />
-    
-        <transition on="proceed" to="CheckOutboundInterceptContext" />
-        <transition to="HandleErrorWithView" />
-    </action-state>
-
-    <decision-state id="CheckOutboundInterceptContext">
-        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
-            then="HandleOutboundMessage" else="DoOutboundInterceptSubflow" />
-    </decision-state>
-
-    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
-        <input name="calledAsSubflow" value="true" />
-        <transition on="proceed" to="HandleOutboundMessage" />
-        <transition to="HandleErrorWithView" />
-    </subflow-state>
-
-    <action-state id="HandleOutboundMessage">
-        <evaluate expression="HandleOutboundMessage" />
-        <evaluate expression="EncodeMessage" />
-        <evaluate expression="RecordResponseComplete" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="end" />
-        <transition to="HandleErrorWithView" />
-        
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </action-state>
-
-    <!-- Passthrough state if an exception is thrown. -->
-
-    <action-state id="LogRuntimeException">
-        <on-entry>
-            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.saml.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
-        </on-entry>
-        <evaluate expression="'RuntimeException'" />
-        <transition to="HandleError" />
-    </action-state>
-
-    <!-- Unsuccessful terminal states. -->
-    
-    <decision-state id="HandleErrorWithView">
-        <if test="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').containsKey(currentEvent.id) and flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').get(currentEvent.id)"
-            then="AuditedErrorView" else="ErrorView" />
-    </decision-state>
-    
-    <end-state id="AuditedErrorView" view="#{MapEventToView.apply(currentEvent)}">
-        <on-entry>
-            <evaluate expression="ErrorViewPopulateAuditContext" />
-            <evaluate expression="WriteAuditLog" />
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <end-state id="ErrorView" view="#{MapEventToView.apply(currentEvent)}">
-        <on-entry>
-            <evaluate expression="environment" result="requestScope.environment" />
-            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
-            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
-            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
-            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
-        </on-entry>
-        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
-    </end-state>
-
-    <!-- Successful terminal state (success meaning outbound SAML message encoded). -->
-
-    <end-state id="end">
-        <on-entry>
-            <evaluate expression="WriteAuditLog" />
-        </on-entry>
-    </end-state>
-
-    <!--
-    Default is to turn non-proceed events into an error, and initiate error handling sequence
-    defined by action in child flows.
-    -->
-    <global-transitions>
-        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
-        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleError" />
-    </global-transitions>
-
-    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
-    <bean-import resource="../saml-abstract-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    abstract="true">
+
+    <!--  Actions common to most SAML profile flows. -->
+
+    <!-- Decode / Configuration Lookup / Request Checking -->
+
+    <action-state id="DecodeMessage">
+        <evaluate expression="PopulateMetricContext" />
+        <evaluate expression="DecodeMessage" />
+        <evaluate expression="PostDecodePopulateAuditContext" />
+
+        <evaluate expression="CheckMessageVersion" />
+        <evaluate expression="SAML1ArtifactRequestIssuer" />
+        <evaluate expression="SAMLProtocolAndRole" />
+        <evaluate expression="SAMLMetadataLookup" />
+        <evaluate expression="SAMLPopulateAttributeConsumingService" />
+
+        <evaluate expression="InitializeRelyingPartyContexFromSAMLPeer" />
+        <evaluate expression="SelectRelyingPartyConfiguration" />
+
+        <evaluate expression="PostLookupPopulateAuditContext" />
+        
+        <evaluate expression="SelectProfileConfiguration" />
+
+        <evaluate expression="PopulateSignatureValidationParameters" />
+        <evaluate expression="PopulateClientTLSValidationParameters" />
+        
+        <evaluate expression="PopulateInboundInterceptContext" />
+        <evaluate expression="PopulateUserAgentContext" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="CheckInboundInterceptContext" />
+    </action-state>
+
+    <decision-state id="CheckInboundInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="OutboundContextsAndSecurityParameters" else="DoInboundInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="OutboundContextsAndSecurityParameters" />
+    </subflow-state>
+    
+    <action-state id="OutboundContextsAndSecurityParameters">
+        <evaluate expression="InitializeOutboundMessageContext" />
+        <evaluate expression="InitializeMessageChannelSecurityContext" />
+        <evaluate expression="PopulateBindingAndEndpointContexts" />
+        <evaluate expression="PopulateDelegationContext" />
+        <evaluate expression="PopulateResponseSignatureSigningParameters" />
+        <evaluate expression="PopulateAssertionSignatureSigningParameters" />
+        <evaluate expression="PopulateEncryptionParameters" />
+        <evaluate expression="PopulateDecryptionParameters" />
+        <evaluate expression="'proceed'" />
+
+        <transition on="proceed" to="ExtractSubject" />
+    </action-state>
+
+    <!-- Pull SAML Subject if present and turn it into a principal name. -->
+
+    <action-state id="ExtractSubject">
+        <evaluate expression="DecryptNameIDs" />
+        <evaluate expression="ExtractSubjectFromRequest" />
+        <evaluate expression="PopulateSubjectCanonicalizationContext" />
+        <evaluate expression="'proceed'" />
+        
+        <!-- No subject to operate on, so just skip to the profile. -->
+        <transition on="NoSubject" to="DoProfileWork" />
+        
+        <transition on="proceed" to="CallSubjectCanonicalization" />
+    </action-state>
+
+    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="FinalizeSAMLSubjectCanonicalization" />
+    </subflow-state>
+    
+    <action-state id="FinalizeSAMLSubjectCanonicalization">
+        <evaluate expression="FinalizeSAMLSubjectCanonicalization" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="DoProfileWork" />
+    </action-state>
+        
+    <!--
+    The meat will be inserted here by defining DoProfileWork and transitioning
+    from there to profile activity and eventually to the final stages below.
+    -->
+
+    <!-- Post Processing / Encode -->
+
+    <!--
+    These actions handle errors by routing to the catch-all end-state, because
+    it's assumed that any error here is unrecoverable and would prevent returning
+    a SAML protocol message regardless.
+    -->
+
+    <!-- Pick back up with profile. -->
+
+    <action-state id="ReturnToParentFlow">
+        <evaluate expression="PopulateOutboundInterceptContext" />
+        <evaluate expression="'proceed'" />
+    
+        <transition on="proceed" to="CheckOutboundInterceptContext" />
+        <transition to="HandleErrorWithView" />
+    </action-state>
+
+    <decision-state id="CheckOutboundInterceptContext">
+        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
+            then="HandleOutboundMessage" else="DoOutboundInterceptSubflow" />
+    </decision-state>
+
+    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
+        <input name="calledAsSubflow" value="true" />
+        <transition on="proceed" to="HandleOutboundMessage" />
+        <transition to="HandleErrorWithView" />
+    </subflow-state>
+
+    <action-state id="HandleOutboundMessage">
+        <evaluate expression="HandleOutboundMessage" />
+        <evaluate expression="EncodeMessage" />
+        <evaluate expression="RecordResponseComplete" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="end" />
+        <transition to="HandleErrorWithView" />
+        
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </action-state>
+
+    <!-- Passthrough state if an exception is thrown. -->
+
+    <action-state id="LogRuntimeException">
+        <on-entry>
+            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.saml.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
+        </on-entry>
+        <evaluate expression="'RuntimeException'" />
+        <transition to="HandleError" />
+    </action-state>
+
+    <!-- Unsuccessful terminal states. -->
+    
+    <decision-state id="HandleErrorWithView">
+        <if test="flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').containsKey(currentEvent.id) and flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.LocalEventMap').get(currentEvent.id)"
+            then="AuditedErrorView" else="ErrorView" />
+    </decision-state>
+    
+    <end-state id="AuditedErrorView" view="#{MapEventToView.apply(currentEvent)}">
+        <on-entry>
+            <evaluate expression="ErrorViewPopulateAuditContext" />
+            <evaluate expression="WriteAuditLog" />
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <end-state id="ErrorView" view="#{MapEventToView.apply(currentEvent)}">
+        <on-entry>
+            <evaluate expression="environment" result="requestScope.environment" />
+            <evaluate expression="opensamlProfileRequestContext" result="requestScope.profileRequestContext" />
+            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="requestScope.encoder" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="requestScope.request" />
+            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="requestScope.response" />
+            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="requestScope.custom" />
+        </on-entry>
+        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
+    </end-state>
+
+    <!-- Successful terminal state (success meaning outbound SAML message encoded). -->
+
+    <end-state id="end">
+        <on-entry>
+            <evaluate expression="WriteAuditLog" />
+        </on-entry>
+    </end-state>
+
+    <!--
+    Default is to turn non-proceed events into an error, and initiate error handling sequence
+    defined by action in child flows.
+    -->
+    <global-transitions>
+        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
+        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="HandleError" />
+    </global-transitions>
+
+    <!-- The import references the parent folder because the abstract flow is used only from one level down. -->
+    <bean-import resource="../saml-abstract-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/security-abstract-flow.xml shibboleth-idp/system/flows/saml/security-abstract-flow.xml
--- shibboleth-idp/system/flows/saml/security-abstract-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/security-abstract-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,26 +1,26 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-      abstract="true">
-
-    <!-- Rudimentary impediment to direct execution of subflow. -->
-    <input name="calledAsSubflow" type="boolean" required="true" />
-
-    <!-- Defines the possible end-state events, and a global transition rule. -->
-
-    <!-- Successful completion of subflow. -->
-    <end-state id="proceed" />
-
-    <!-- Error events to reflect back from this subflow. -->
-    <end-state id="MessageExpired" />
-    <end-state id="MessageReplay" />
-    <end-state id="MessageAuthenticationError" />
-
-    <!-- Default is to turn any error event into its own end-state. -->
-    <global-transitions>
-        <transition on="MessageExpired" to="MessageExpired" />
-        <transition on="MessageReplay" to="MessageReplay" />
-        <transition on="MessageAuthenticationError" to="MessageAuthenticationError" />
-    </global-transitions>
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+      abstract="true">
+
+    <!-- Rudimentary impediment to direct execution of subflow. -->
+    <input name="calledAsSubflow" type="boolean" required="true" />
+
+    <!-- Defines the possible end-state events, and a global transition rule. -->
+
+    <!-- Successful completion of subflow. -->
+    <end-state id="proceed" />
+
+    <!-- Error events to reflect back from this subflow. -->
+    <end-state id="MessageExpired" />
+    <end-state id="MessageReplay" />
+    <end-state id="MessageAuthenticationError" />
+
+    <!-- Default is to turn any error event into its own end-state. -->
+    <global-transitions>
+        <transition on="MessageExpired" to="MessageExpired" />
+        <transition on="MessageReplay" to="MessageReplay" />
+        <transition on="MessageAuthenticationError" to="MessageAuthenticationError" />
+    </global-transitions>
+
+</flow>
diff -rupN shibboleth-idp/system/flows/saml/security-beans.xml shibboleth-idp/system/flows/saml/security-beans.xml
--- shibboleth-idp/system/flows/saml/security-beans.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/security-beans.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,213 +1,213 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:c="http://www.springframework.org/schema/c"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
-                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
-                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
-                           
-       default-init-method="initialize"
-       default-destroy-method="destroy">
-
-    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
-        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
-
-    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
-    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
-    
-    <bean id="MessageReplaySecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler" scope="prototype"
-                p:replayCache-ref="shibboleth.ReplayCache"
-                p:expires="%{idp.policy.messageLifetime:PT3M}" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_REPLAY" />
-        </property>
-    </bean>
-
-    <bean id="OptionalMessageReplaySecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler" scope="prototype"
-                p:requiredRule="false"
-                p:replayCache-ref="shibboleth.ReplayCache"
-                p:expires="%{idp.policy.messageLifetime:PT3M}" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_REPLAY" />
-        </property>
-    </bean>
-
-    <bean id="MessageLifetimeSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.security.impl.MessageLifetimeSecurityHandler" scope="prototype"
-                p:messageLifetime="%{idp.policy.messageLifetime:PT3M}"
-                p:clockSkew="%{idp.policy.clockSkew:PT3M}" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_EXPIRED" />
-        </property>
-    </bean>
-
-    <bean id="OptionalMessageLifetimeSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.security.impl.MessageLifetimeSecurityHandler" scope="prototype"
-                p:requiredRule="false"
-                p:messageLifetime="%{idp.policy.messageLifetime:PT3M}"
-                p:clockSkew="%{idp.policy.clockSkew:PT3M}" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_EXPIRED" />
-        </property>
-    </bean>
-
-    <bean id="CheckMandatoryIssuer"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryIssuer" scope="prototype">
-                <property name="issuerLookupStrategy">
-                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextIssuerFunction" />
-                </property>
-            </bean>
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="ReceivedEndpointSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler" scope="prototype"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="SAMLMDClientCertAuthSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.security.impl.SAMLMDClientCertAuthSecurityHandler" scope="prototype"
-                    p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-        </constructor-arg>
-        <property name="activationCondition">
-            <bean class="com.google.common.base.Predicates" factory-method="not"
-                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
-        </property>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="SAMLProtocolMessageXMLSignatureSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.common.binding.security.impl.SAMLProtocolMessageXMLSignatureSecurityHandler" scope="prototype" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="SAML2HTTPRedirectDeflateSignatureSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPRedirectDeflateSignatureSecurityHandler" scope="prototype"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="SAML2HTTPPostSimpleSignSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPPostSimpleSignSecurityHandler" scope="prototype"
-                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
-                p:parser-ref="shibboleth.ParserPool"
-                p:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-    
-    <bean id="CheckMandatoryAuthentication"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryAuthentication" scope="prototype">
-                <property name="authenticationLookupStrategy">
-                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextAuthenticationFunction" />
-                </property>
-            </bean>
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="OptionalCheckMandatoryAuthentication"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND"
-            p:activationCondition="%{idp.logout.authenticated:true}">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryAuthentication" scope="prototype">
-                <property name="authenticationLookupStrategy">
-                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextAuthenticationFunction" />
-                </property>
-            </bean>
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="SAML2AuthnRequestsSignedSecurityHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2AuthnRequestsSignedSecurityHandler" scope="prototype" />
-        </constructor-arg>
-        <property name="errorEvent">
-            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
-        </property>
-    </bean>
-
-    <bean id="ExtractChannelBindingsHeadersHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.saml2.binding.security.impl.ExtractChannelBindingsHeadersHandler" scope="prototype" />
-        </constructor-arg>
-    </bean>
-
-    <bean id="ExtractChannelBindingsExtensionsHandler"
-            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
-            c:executionDirection="INBOUND">
-        <constructor-arg name="messageHandler">
-            <bean class="org.opensaml.saml.saml2.binding.security.impl.ExtractChannelBindingsExtensionsHandler" scope="prototype" />
-        </constructor-arg>
-    </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:c="http://www.springframework.org/schema/c"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
+                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
+                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
+                           
+       default-init-method="initialize"
+       default-destroy-method="destroy">
+
+    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
+        p:placeholderPrefix="%{" p:placeholderSuffix="}" />
+
+    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
+    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
+    
+    <bean id="MessageReplaySecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler" scope="prototype"
+                p:replayCache-ref="shibboleth.ReplayCache"
+                p:expires="%{idp.policy.messageLifetime:PT3M}" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_REPLAY" />
+        </property>
+    </bean>
+
+    <bean id="OptionalMessageReplaySecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler" scope="prototype"
+                p:requiredRule="false"
+                p:replayCache-ref="shibboleth.ReplayCache"
+                p:expires="%{idp.policy.messageLifetime:PT3M}" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_REPLAY" />
+        </property>
+    </bean>
+
+    <bean id="MessageLifetimeSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.security.impl.MessageLifetimeSecurityHandler" scope="prototype"
+                p:messageLifetime="%{idp.policy.messageLifetime:PT3M}"
+                p:clockSkew="%{idp.policy.clockSkew:PT3M}" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_EXPIRED" />
+        </property>
+    </bean>
+
+    <bean id="OptionalMessageLifetimeSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.security.impl.MessageLifetimeSecurityHandler" scope="prototype"
+                p:requiredRule="false"
+                p:messageLifetime="%{idp.policy.messageLifetime:PT3M}"
+                p:clockSkew="%{idp.policy.clockSkew:PT3M}" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_EXPIRED" />
+        </property>
+    </bean>
+
+    <bean id="CheckMandatoryIssuer"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryIssuer" scope="prototype">
+                <property name="issuerLookupStrategy">
+                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextIssuerFunction" />
+                </property>
+            </bean>
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="ReceivedEndpointSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler" scope="prototype"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="SAMLMDClientCertAuthSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.security.impl.SAMLMDClientCertAuthSecurityHandler" scope="prototype"
+                    p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+        </constructor-arg>
+        <property name="activationCondition">
+            <bean class="com.google.common.base.Predicates" factory-method="not"
+                c:predicate-ref="shibboleth.Conditions.BrowserProfile" />
+        </property>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="SAMLProtocolMessageXMLSignatureSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.common.binding.security.impl.SAMLProtocolMessageXMLSignatureSecurityHandler" scope="prototype" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="SAML2HTTPRedirectDeflateSignatureSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPRedirectDeflateSignatureSecurityHandler" scope="prototype"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="SAML2HTTPPostSimpleSignSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPPostSimpleSignSecurityHandler" scope="prototype"
+                p:httpServletRequest-ref="shibboleth.HttpServletRequest"
+                p:parser-ref="shibboleth.ParserPool"
+                p:keyInfoResolver-ref="shibboleth.KeyInfoCredentialResolver" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+    
+    <bean id="CheckMandatoryAuthentication"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryAuthentication" scope="prototype">
+                <property name="authenticationLookupStrategy">
+                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextAuthenticationFunction" />
+                </property>
+            </bean>
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="OptionalCheckMandatoryAuthentication"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND"
+            p:activationCondition="%{idp.logout.authenticated:true}">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryAuthentication" scope="prototype">
+                <property name="authenticationLookupStrategy">
+                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextAuthenticationFunction" />
+                </property>
+            </bean>
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="SAML2AuthnRequestsSignedSecurityHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2AuthnRequestsSignedSecurityHandler" scope="prototype" />
+        </constructor-arg>
+        <property name="errorEvent">
+            <util:constant static-field="org.opensaml.profile.action.EventIds.MESSAGE_AUTHN_ERROR" />
+        </property>
+    </bean>
+
+    <bean id="ExtractChannelBindingsHeadersHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.saml2.binding.security.impl.ExtractChannelBindingsHeadersHandler" scope="prototype" />
+        </constructor-arg>
+    </bean>
+
+    <bean id="ExtractChannelBindingsExtensionsHandler"
+            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
+            c:executionDirection="INBOUND">
+        <constructor-arg name="messageHandler">
+            <bean class="org.opensaml.saml.saml2.binding.security.impl.ExtractChannelBindingsExtensionsHandler" scope="prototype" />
+        </constructor-arg>
+    </bean>
+
+</beans>
diff -rupN shibboleth-idp/system/flows/saml/soap-security-flow.xml shibboleth-idp/system/flows/saml/soap-security-flow.xml
--- shibboleth-idp/system/flows/saml/soap-security-flow.xml	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/flows/saml/soap-security-flow.xml	2019-07-01 13:03:37.449961098 -0400
@@ -1,24 +1,24 @@
-<flow xmlns="http://www.springframework.org/schema/webflow"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
-    parent="security-policy.abstract">
-
-    <!-- Default inbound security processing for SOAP-bound profiles. -->
-
-    <action-state id="SOAPSecurityPolicy">
-        <evaluate expression="ReceivedEndpointSecurityHandler" />
-        <evaluate expression="MessageReplaySecurityHandler" />
-        <evaluate expression="MessageLifetimeSecurityHandler" />
-        <evaluate expression="SAMLMDClientCertAuthSecurityHandler" />
-        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
-        <evaluate expression="CheckMandatoryIssuer" />
-        <evaluate expression="CheckMandatoryAuthentication" />
-        <evaluate expression="ExtractChannelBindingsExtensionsHandler" />
-        <evaluate expression="'proceed'" />
-        
-        <transition on="proceed" to="proceed" />
-    </action-state>
-
-    <bean-import resource="security-beans.xml" />
-
-</flow>
+<flow xmlns="http://www.springframework.org/schema/webflow"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
+    parent="security-policy.abstract">
+
+    <!-- Default inbound security processing for SOAP-bound profiles. -->
+
+    <action-state id="SOAPSecurityPolicy">
+        <evaluate expression="ReceivedEndpointSecurityHandler" />
+        <evaluate expression="MessageReplaySecurityHandler" />
+        <evaluate expression="MessageLifetimeSecurityHandler" />
+        <evaluate expression="SAMLMDClientCertAuthSecurityHandler" />
+        <evaluate expression="SAMLProtocolMessageXMLSignatureSecurityHandler" />
+        <evaluate expression="CheckMandatoryIssuer" />
+        <evaluate expression="CheckMandatoryAuthentication" />
+        <evaluate expression="ExtractChannelBindingsExtensionsHandler" />
+        <evaluate expression="'proceed'" />
+        
+        <transition on="proceed" to="proceed" />
+    </action-state>
+
+    <bean-import resource="security-beans.xml" />
+
+</flow>
diff -rupN shibboleth-idp/system/messages/messages.properties shibboleth-idp/system/messages/messages.properties
--- shibboleth-idp/system/messages/messages.properties	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/messages/messages.properties	2019-07-01 13:03:37.453960938 -0400
@@ -1,272 +1,272 @@
-# In addition to the Apache 2.0 license, this content is also licensed
-# under the Creative Commons Attribution-ShareAlike 3.0 Unported license
-# (see http://creativecommons.org/licenses/by-sa/3.0/). 
-
-# This is the as-delivered set of messages used in various views
-# so that internationalized translations can be made available and
-# so administrators can locally override or supplement the values
-# in their own message files.
-
-
-# Event/Exception to error key mappings, not messages per se, but used
-# in the example error view to support groupings of error behavior.
-
-AccessDenied = access
-ContextCheckDenied = context-check-denied
-EndpointResolutionFailed = endpoint
-InvalidProfileConfiguration = relying-party
-InvalidSecurityConfiguration = security-cfg
-MessageAuthenticationError = security-msg
-MessageReplay = stale
-MessageExpired = stale
-UnableToDecode = stale
-AccountError = authn
-AuthenticationException = authn
-InvalidCredentials = authn
-NoCredentials = authn
-NoPotentialFlow = authn
-RequestUnsupported = authn
-SubjectCanonicalizationError = authn
-InvalidAttributeContext = unexpected
-InvalidAuthenticationContext = unexpected
-InvalidSubjectContext = unexpected
-InvalidSubjectCanonicalizationContext = unexpected
-InvalidMessageContext = unexpected
-InvalidMessageVersion = unexpected
-InvalidProfileContext = unexpected
-InvalidRelyingPartyContext = unexpected
-InvalidRelyingPartyConfiguration = unexpected
-MessageProcessingError = unexpected
-UnableToEncode = unexpected
-UnableToSign = unexpected
-UnableToEncrypt = unexpected
-AttributeReleaseRejected = no-release
-TermsRejected = no-terms
-RuntimeException = runtime-error
-UnknownUsername = bad-username
-InvalidPassword = bad-password
-ExpiredPassword = expired-password
-AccountLocked = account-locked
-SPNEGONotAvailable = spnego-unavailable
-NTLMUnsupported = ntlm
-NoSuchFlowExecutionException = stale
-FlowExecutionRestorationFailureException = stale
-ExternalAuthenticationException = stale
-
-# General strings
-
-idp.title = Web Login Service
-idp.title.suffix = Error
-idp.logo = /images/dummylogo.png
-idp.logo.alt-text = Replace or remove this logo
-idp.message = An unidentified error occurred.
-idp.footer = Insert your footer text here.
-
-root.title = Shibboleth IdP
-root.message = No services are available at this location.
-root.footer = Insert your footer text here.
-
-idp.client-storage-read.title = Loading Session Information
-idp.client-storage-read.text = Loading login session information from the browser...
-idp.client-storage-write.title = Saving Session Information
-idp.client-storage-write.text = Saving login session information to the browser...
-idp.client-storage.no-js = Since your browser does not support JavaScript, \
-                            you must press the Continue button once to proceed.
-
-# Login / Logout messages
-
-idp.login.loginTo = Login to
-
-idp.login.username = Username
-idp.login.password = Password
-
-idp.login.donotcache = Don't Remember Login
-
-idp.login.login = Login
-idp.login.pleasewait = Logging in, please wait...
-
-idp.login.forgotPassword = Forgot your password?
-idp.login.needHelp = Need Help?
-
-idp.login.duoRequired = Authentication with Duo is required for the requested service.
-idp.login.duoNoScript = The Duo service requires JavaScript.
-idp.login.duoCancel = Cancel this Request
-
-# Expiring password example messages
-
-idp.login.expiringSoon = Your password will be expiring soon!
-idp.login.changePassword = To create a new password now, go to
-idp.login.proceedBegin = Your login will proceed in 20 seconds or you may click
-idp.login.proceedHere = here
-idp.login.proceedEnd = to continue
-
-# Useful links
-
-idp.url.password.reset = #
-idp.url.helpdesk = #
-
-# User Preferences example messages
-
-idp.userprefs.title = Web Login Service
-idp.userprefs.title.suffice = Login Preferences
-idp.userprefs.info = This page allows you to configure your device to tell the Web Login Service that it \
-                        can use more advanced login approaches that are more convenient, but not always usable.
-idp.userprefs.options = The following options are available:
-idp.userprefs.spnego = Automatically try desktop login when available.
-idp.userprefs.no-js = This feature requires Javascript.
-
-
-# Logout-related messages
-
-idp.logout.ask = Would you like to attempt to log out of all services accessed during your session? \
-                    Please select <strong>Yes</strong> or <strong>No</strong> to ensure the logout \
-                    operation completes, or wait a few seconds for Yes.
-idp.logout.contactServices = If you proceed, the system will attempt to contact the following services:
-idp.logout.complete = The logout operation is complete, and no other services appear to have been accessed during this session.
-idp.logout.local = You elected not to log out of all the services accessed during your session.
-idp.logout.attempt = Attempting to log out of the following services:
-
-# Messages related to attribute release consent.
-
-idp.attribute-release.revoke                       = Clear prior granting of permission for release of your information to this service.
-
-idp.attribute-release.title                        = Information Release
-
-idp.attribute-release.attributesHeader             = Information to be Provided to Service
-
-idp.attribute-release.serviceNameLabel             = You are about to access the service:
-idp.attribute-release.of                           = of
-idp.attribute-release.serviceDescriptionLabel      = Description as provided by this service:
-
-idp.attribute-release.informationURLLabel          = Additional information about the service
-idp.attribute-release.privacyStatementURLLabel     = Data privacy information of the service
-
-idp.attribute-release.showDetails                  = show details
-
-idp.attribute-release.accept                       = Accept
-idp.attribute-release.reject                       = Reject
-
-idp.attribute-release.confirmationQuestion         = The information above would be shared with the service if you proceed. \
-                                                     Do you agree to release this information to the service every time you access it?
-
-idp.attribute-release.consentMethod                = Select an information release consent duration:
-idp.attribute-release.consentMethodRevoke          = This setting can be revoked at any time with the checkbox on the login page.
-
-idp.attribute-release.doNotRememberConsent         = Ask me again at next login
-idp.attribute-release.doNotRememberConsentItem     = I agree to send my information this time.
-
-idp.attribute-release.rememberConsent              = Ask me again if information to be provided to this service changes
-idp.attribute-release.rememberConsentItem          = I agree that the same information will be sent automatically to this service in the future.
-
-idp.attribute-release.globalConsent                = Do not ask me again
-idp.attribute-release.globalConsentItem            = I agree that <strong>all</strong> of my information will be released to <strong>any</strong> service.
-
-# General messages related to terms of use consent.
-
-idp.terms-of-use.accept     = I accept the terms of use
-idp.terms-of-use.submit     = Submit
-idp.terms-of-use.reject     = Refuse
-idp.terms-of-use.required   = Please check this box if you want to proceed.
-
-# Triples consisting of a TOU key, and a title and text for each set of terms.
-# The default implementation uses the SP name as the key, but this can be overriden.
-
-https\://sp.example.org = example-tou-1
-example-tou-1.title = Example Terms of Use
-example-tou-1.text  = <em>*** This is an example ToU - tailor due to your needs ***</em> \
-                        <p>Example organization AAI services: Terms of Use (ToU)</p> \
-                        <strong>A. Data Protection Sample Clause</strong> \
-                        <p> \
-                        "The End User notes that personal data about the End User is compiled from generally \
-                        available sources and from communications received from the End User and other \
-                        Universities as well as from off-site sources. The policy relating to the use and procession \
-                        of such data is posted on the University website at [...]. Such data will be used, inter alia, \
-                        to authenticate and authorize the access to and use of various resources within \
-                        the University and on other sites ("Approved Uses"). The End User hereby consents to \
-                        the collection, processing, use and release of such data to the extent reasonably necessary \
-                        for the Approved Uses. Such consent includes, but is not limited to, the release \
-                        of personal data to other institutions by employing cookies and electronically exchanging, \
-                        caching and storing personal authorization attributes." \
-                        </p> \
-                        <strong>B. Limitation of Liability</strong> \
-                        <p> \
-                        "To the extent permitted by the applicable law, the End User hereby waives all and any \
-                        claims for cost and damages, whether direct or indirect, incidental, or consequential(including, \
-                        inter alia, loss of use and lost profits), both in contract and in tort, arising from \
-                        the use or in any way related to the inter-organizational authentication and authorization \
-                        services which allow the End User to access certain resources of other organizations. \
-                        This waiver of claims shall be valid and effective in relation to all participants of \
-                        the inter-organizational authentication and authorization services including the AAI \
-                        Service Provider and its affiliates, officers, employees and agents." \
-                        </p>
-                        
-# Error key to title and message mappings
-
-access.title = Access Denied
-access.message = You do not have access to the requested resource.
-
-context-check-denied.title = Access Denied
-context-check-denied.message = You are not eligible for the service requested.
-
-no-release.title = Release of Information Prevented
-no-release.message = At your request, the release of your information has been blocked. If you wish to \
-                      change your decision, you may access the service again and approve the release in the \
-                      future.
-
-no-terms.title = Terms of Use Refused
-no-terms.message = Having refused the mandatory Terms of Use, access to the service is not permitted. \
-                    If you wish to change your decision, you may access the service again and approve  \
-                    the terms in the future. 
-
-authn.title = Login Failed
-authn.message = User login was not successful or could not meet the requirements of the requesting application.
-
-bad-username.message = The username you entered cannot be identified.
-
-bad-password.message = The password you entered was incorrect.
-
-expired-password.message = Your password has expired.
-
-account-locked.message = Your account is locked.
-
-spnego-unavailable.message = Your web browser doesn't support authentication with your desktop login credentials.
-spnego-unavailable.return = Cancel the attempt.
-
-ntlm.message = Your web browser attempted to negotiate a weaker form of desktop authentication.
-
-endpoint.title = Unable to Respond
-endpoint.message = The login service was unable to identify a compatible way to respond to the requested \
-                    application. This is generally due to a misconfiguration on the part of the application \
-                    and should be reported to the application's support team or owner.
-
-relying-party.title = Unsupported Request
-relying-party.message = The application you have accessed is not registered for use with this service.
-
-security-cfg.title = Security Configuration Error
-security-cfg.message = The login service and the requested application do not share a compatible \
-                        security configuration, and the request cannot be fulfilled.
-
-security-msg.title = Message Security Error
-security-msg.message = The request cannot be fulfilled because the message received does not meet the \
-                        security requirements of the login service.
-
-stale.title = Stale Request
-stale.message = <p>You may be seeing this page because you used the Back button while browsing a \
-                 secure web site or application. Alternatively, you may have mistakenly bookmarked \
-                 the web login form instead of the actual web site you wanted to bookmark or used a \
-                 link created by somebody else who made the same mistake.</p> \
-                 <br/> \
-                 <p>Left unchecked, this can cause errors on some browsers or result in you returning to \
-                 the web site you tried to leave, so this page is presented instead.</p>
-
-unexpected.title = Unexpected Error
-unexpected.message = An unexpected error was encountered, usually reflecting a configuration or software error.
-
-runtime-error.title = Uncaught Exception
-runtime-error.message = <p>A software error was encountered that prevents normal operation:</p><br/> \
-                         <p><strong>#if($exception)$encoder.encodeForHTML($exception.toString())#elseif($flowExecutionException && $flowExecutionException.getCause())$encoder.encodeForHTML($flowExecutionException.getCause().toString())#else$encoder.encodeForHTML($flowExecutionException.getMessage())#end</strong></p><br/> \
-                         <p>Please report this problem to your Help Desk or administrative staff. It has \
-                         also been logged for an administrator to review.</p>
-
-error.title = Error
-error.message = An error occurred: $eventId
+# In addition to the Apache 2.0 license, this content is also licensed
+# under the Creative Commons Attribution-ShareAlike 3.0 Unported license
+# (see http://creativecommons.org/licenses/by-sa/3.0/). 
+
+# This is the as-delivered set of messages used in various views
+# so that internationalized translations can be made available and
+# so administrators can locally override or supplement the values
+# in their own message files.
+
+
+# Event/Exception to error key mappings, not messages per se, but used
+# in the example error view to support groupings of error behavior.
+
+AccessDenied = access
+ContextCheckDenied = context-check-denied
+EndpointResolutionFailed = endpoint
+InvalidProfileConfiguration = relying-party
+InvalidSecurityConfiguration = security-cfg
+MessageAuthenticationError = security-msg
+MessageReplay = stale
+MessageExpired = stale
+UnableToDecode = stale
+AccountError = authn
+AuthenticationException = authn
+InvalidCredentials = authn
+NoCredentials = authn
+NoPotentialFlow = authn
+RequestUnsupported = authn
+SubjectCanonicalizationError = authn
+InvalidAttributeContext = unexpected
+InvalidAuthenticationContext = unexpected
+InvalidSubjectContext = unexpected
+InvalidSubjectCanonicalizationContext = unexpected
+InvalidMessageContext = unexpected
+InvalidMessageVersion = unexpected
+InvalidProfileContext = unexpected
+InvalidRelyingPartyContext = unexpected
+InvalidRelyingPartyConfiguration = unexpected
+MessageProcessingError = unexpected
+UnableToEncode = unexpected
+UnableToSign = unexpected
+UnableToEncrypt = unexpected
+AttributeReleaseRejected = no-release
+TermsRejected = no-terms
+RuntimeException = runtime-error
+UnknownUsername = bad-username
+InvalidPassword = bad-password
+ExpiredPassword = expired-password
+AccountLocked = account-locked
+SPNEGONotAvailable = spnego-unavailable
+NTLMUnsupported = ntlm
+NoSuchFlowExecutionException = stale
+FlowExecutionRestorationFailureException = stale
+ExternalAuthenticationException = stale
+
+# General strings
+
+idp.title = Web Login Service
+idp.title.suffix = Error
+idp.logo = /images/dummylogo.png
+idp.logo.alt-text = Replace or remove this logo
+idp.message = An unidentified error occurred.
+idp.footer = Insert your footer text here.
+
+root.title = Shibboleth IdP
+root.message = No services are available at this location.
+root.footer = Insert your footer text here.
+
+idp.client-storage-read.title = Loading Session Information
+idp.client-storage-read.text = Loading login session information from the browser...
+idp.client-storage-write.title = Saving Session Information
+idp.client-storage-write.text = Saving login session information to the browser...
+idp.client-storage.no-js = Since your browser does not support JavaScript, \
+                            you must press the Continue button once to proceed.
+
+# Login / Logout messages
+
+idp.login.loginTo = Login to
+
+idp.login.username = Username
+idp.login.password = Password
+
+idp.login.donotcache = Don't Remember Login
+
+idp.login.login = Login
+idp.login.pleasewait = Logging in, please wait...
+
+idp.login.forgotPassword = Forgot your password?
+idp.login.needHelp = Need Help?
+
+idp.login.duoRequired = Authentication with Duo is required for the requested service.
+idp.login.duoNoScript = The Duo service requires JavaScript.
+idp.login.duoCancel = Cancel this Request
+
+# Expiring password example messages
+
+idp.login.expiringSoon = Your password will be expiring soon!
+idp.login.changePassword = To create a new password now, go to
+idp.login.proceedBegin = Your login will proceed in 20 seconds or you may click
+idp.login.proceedHere = here
+idp.login.proceedEnd = to continue
+
+# Useful links
+
+idp.url.password.reset = #
+idp.url.helpdesk = #
+
+# User Preferences example messages
+
+idp.userprefs.title = Web Login Service
+idp.userprefs.title.suffice = Login Preferences
+idp.userprefs.info = This page allows you to configure your device to tell the Web Login Service that it \
+                        can use more advanced login approaches that are more convenient, but not always usable.
+idp.userprefs.options = The following options are available:
+idp.userprefs.spnego = Automatically try desktop login when available.
+idp.userprefs.no-js = This feature requires Javascript.
+
+
+# Logout-related messages
+
+idp.logout.ask = Would you like to attempt to log out of all services accessed during your session? \
+                    Please select <strong>Yes</strong> or <strong>No</strong> to ensure the logout \
+                    operation completes, or wait a few seconds for Yes.
+idp.logout.contactServices = If you proceed, the system will attempt to contact the following services:
+idp.logout.complete = The logout operation is complete, and no other services appear to have been accessed during this session.
+idp.logout.local = You elected not to log out of all the services accessed during your session.
+idp.logout.attempt = Attempting to log out of the following services:
+
+# Messages related to attribute release consent.
+
+idp.attribute-release.revoke                       = Clear prior granting of permission for release of your information to this service.
+
+idp.attribute-release.title                        = Information Release
+
+idp.attribute-release.attributesHeader             = Information to be Provided to Service
+
+idp.attribute-release.serviceNameLabel             = You are about to access the service:
+idp.attribute-release.of                           = of
+idp.attribute-release.serviceDescriptionLabel      = Description as provided by this service:
+
+idp.attribute-release.informationURLLabel          = Additional information about the service
+idp.attribute-release.privacyStatementURLLabel     = Data privacy information of the service
+
+idp.attribute-release.showDetails                  = show details
+
+idp.attribute-release.accept                       = Accept
+idp.attribute-release.reject                       = Reject
+
+idp.attribute-release.confirmationQuestion         = The information above would be shared with the service if you proceed. \
+                                                     Do you agree to release this information to the service every time you access it?
+
+idp.attribute-release.consentMethod                = Select an information release consent duration:
+idp.attribute-release.consentMethodRevoke          = This setting can be revoked at any time with the checkbox on the login page.
+
+idp.attribute-release.doNotRememberConsent         = Ask me again at next login
+idp.attribute-release.doNotRememberConsentItem     = I agree to send my information this time.
+
+idp.attribute-release.rememberConsent              = Ask me again if information to be provided to this service changes
+idp.attribute-release.rememberConsentItem          = I agree that the same information will be sent automatically to this service in the future.
+
+idp.attribute-release.globalConsent                = Do not ask me again
+idp.attribute-release.globalConsentItem            = I agree that <strong>all</strong> of my information will be released to <strong>any</strong> service.
+
+# General messages related to terms of use consent.
+
+idp.terms-of-use.accept     = I accept the terms of use
+idp.terms-of-use.submit     = Submit
+idp.terms-of-use.reject     = Refuse
+idp.terms-of-use.required   = Please check this box if you want to proceed.
+
+# Triples consisting of a TOU key, and a title and text for each set of terms.
+# The default implementation uses the SP name as the key, but this can be overriden.
+
+https\://sp.example.org = example-tou-1
+example-tou-1.title = Example Terms of Use
+example-tou-1.text  = <em>*** This is an example ToU - tailor due to your needs ***</em> \
+                        <p>Example organization AAI services: Terms of Use (ToU)</p> \
+                        <strong>A. Data Protection Sample Clause</strong> \
+                        <p> \
+                        "The End User notes that personal data about the End User is compiled from generally \
+                        available sources and from communications received from the End User and other \
+                        Universities as well as from off-site sources. The policy relating to the use and procession \
+                        of such data is posted on the University website at [...]. Such data will be used, inter alia, \
+                        to authenticate and authorize the access to and use of various resources within \
+                        the University and on other sites ("Approved Uses"). The End User hereby consents to \
+                        the collection, processing, use and release of such data to the extent reasonably necessary \
+                        for the Approved Uses. Such consent includes, but is not limited to, the release \
+                        of personal data to other institutions by employing cookies and electronically exchanging, \
+                        caching and storing personal authorization attributes." \
+                        </p> \
+                        <strong>B. Limitation of Liability</strong> \
+                        <p> \
+                        "To the extent permitted by the applicable law, the End User hereby waives all and any \
+                        claims for cost and damages, whether direct or indirect, incidental, or consequential(including, \
+                        inter alia, loss of use and lost profits), both in contract and in tort, arising from \
+                        the use or in any way related to the inter-organizational authentication and authorization \
+                        services which allow the End User to access certain resources of other organizations. \
+                        This waiver of claims shall be valid and effective in relation to all participants of \
+                        the inter-organizational authentication and authorization services including the AAI \
+                        Service Provider and its affiliates, officers, employees and agents." \
+                        </p>
+                        
+# Error key to title and message mappings
+
+access.title = Access Denied
+access.message = You do not have access to the requested resource.
+
+context-check-denied.title = Access Denied
+context-check-denied.message = You are not eligible for the service requested.
+
+no-release.title = Release of Information Prevented
+no-release.message = At your request, the release of your information has been blocked. If you wish to \
+                      change your decision, you may access the service again and approve the release in the \
+                      future.
+
+no-terms.title = Terms of Use Refused
+no-terms.message = Having refused the mandatory Terms of Use, access to the service is not permitted. \
+                    If you wish to change your decision, you may access the service again and approve  \
+                    the terms in the future. 
+
+authn.title = Login Failed
+authn.message = User login was not successful or could not meet the requirements of the requesting application.
+
+bad-username.message = The username you entered cannot be identified.
+
+bad-password.message = The password you entered was incorrect.
+
+expired-password.message = Your password has expired.
+
+account-locked.message = Your account is locked.
+
+spnego-unavailable.message = Your web browser doesn't support authentication with your desktop login credentials.
+spnego-unavailable.return = Cancel the attempt.
+
+ntlm.message = Your web browser attempted to negotiate a weaker form of desktop authentication.
+
+endpoint.title = Unable to Respond
+endpoint.message = The login service was unable to identify a compatible way to respond to the requested \
+                    application. This is generally due to a misconfiguration on the part of the application \
+                    and should be reported to the application's support team or owner.
+
+relying-party.title = Unsupported Request
+relying-party.message = The application you have accessed is not registered for use with this service.
+
+security-cfg.title = Security Configuration Error
+security-cfg.message = The login service and the requested application do not share a compatible \
+                        security configuration, and the request cannot be fulfilled.
+
+security-msg.title = Message Security Error
+security-msg.message = The request cannot be fulfilled because the message received does not meet the \
+                        security requirements of the login service.
+
+stale.title = Stale Request
+stale.message = <p>You may be seeing this page because you used the Back button while browsing a \
+                 secure web site or application. Alternatively, you may have mistakenly bookmarked \
+                 the web login form instead of the actual web site you wanted to bookmark or used a \
+                 link created by somebody else who made the same mistake.</p> \
+                 <br/> \
+                 <p>Left unchecked, this can cause errors on some browsers or result in you returning to \
+                 the web site you tried to leave, so this page is presented instead.</p>
+
+unexpected.title = Unexpected Error
+unexpected.message = An unexpected error was encountered, usually reflecting a configuration or software error.
+
+runtime-error.title = Uncaught Exception
+runtime-error.message = <p>A software error was encountered that prevents normal operation:</p><br/> \
+                         <p><strong>#if($exception)$encoder.encodeForHTML($exception.toString())#elseif($flowExecutionException && $flowExecutionException.getCause())$encoder.encodeForHTML($flowExecutionException.getCause().toString())#else$encoder.encodeForHTML($flowExecutionException.getMessage())#end</strong></p><br/> \
+                         <p>Please report this problem to your Help Desk or administrative staff. It has \
+                         also been logged for an administrator to review.</p>
+
+error.title = Error
+error.message = An error occurred: $eventId
diff -rupN shibboleth-idp/system/views/cas/footer.vm shibboleth-idp/system/views/cas/footer.vm
--- shibboleth-idp/system/views/cas/footer.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/cas/footer.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1 +1 @@
-</cas:serviceResponse>
+</cas:serviceResponse>
diff -rupN shibboleth-idp/system/views/cas/header.vm shibboleth-idp/system/views/cas/header.vm
--- shibboleth-idp/system/views/cas/header.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/cas/header.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,2 +1,2 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<cas:serviceResponse xmlns:cas="http://www.yale.edu/tp/cas">
+<?xml version="1.0" encoding="UTF-8"?>
+<cas:serviceResponse xmlns:cas="http://www.yale.edu/tp/cas">
diff -rupN shibboleth-idp/system/views/cas/logoutService.vm shibboleth-idp/system/views/cas/logoutService.vm
--- shibboleth-idp/system/views/cas/logoutService.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/cas/logoutService.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,22 +1,22 @@
-<!DOCTYPE html>
-<html>
-<head>
-    <meta charset="utf-8">
-    <title>Logout of $logoutPropCtx.session.id</title>
-</head>
-<body onload="document.getElementById('logout_prop').submit()">
-<form id="logout_prop" method="POST" action="$logoutPropCtx.session.id">
-    <input type="hidden" name="logoutRequest" value="
-        <samlp:LogoutRequest xmlns:samlp='urn:oasis:names:tc:SAML:2.0:protocol' ID='$messageID' Version='2.0' IssueInstant='$issueInstant'>
-        <saml:NameID xmlns:saml='urn:oasis:names:tc:SAML:2.0:assertion'>somebody</saml:NameID>
-        <samlp:SessionIndex>$logoutPropCtx.session.ticketId</samlp:SessionIndex>
-        </samlp:LogoutRequest>" >
-    <button id="logout" name="logout" type="submit">Logout</button>
-</form>
-<script>
-    if (typeof(Storage) !== "undefined") {
-        sessionStorage.setItem("$logoutPropCtx.sessionKey", "$flowExecutionUrl&_eventId=proceed");
-    }
-</script>
-</body>
+<!DOCTYPE html>
+<html>
+<head>
+    <meta charset="utf-8">
+    <title>Logout of $logoutPropCtx.session.id</title>
+</head>
+<body onload="document.getElementById('logout_prop').submit()">
+<form id="logout_prop" method="POST" action="$logoutPropCtx.session.id">
+    <input type="hidden" name="logoutRequest" value="
+        <samlp:LogoutRequest xmlns:samlp='urn:oasis:names:tc:SAML:2.0:protocol' ID='$messageID' Version='2.0' IssueInstant='$issueInstant'>
+        <saml:NameID xmlns:saml='urn:oasis:names:tc:SAML:2.0:assertion'>somebody</saml:NameID>
+        <samlp:SessionIndex>$logoutPropCtx.session.ticketId</samlp:SessionIndex>
+        </samlp:LogoutRequest>" >
+    <button id="logout" name="logout" type="submit">Logout</button>
+</form>
+<script>
+    if (typeof(Storage) !== "undefined") {
+        sessionStorage.setItem("$logoutPropCtx.sessionKey", "$flowExecutionUrl&_eventId=proceed");
+    }
+</script>
+</body>
 </html>
\ No newline at end of file
diff -rupN shibboleth-idp/system/views/cas/postBack.vm shibboleth-idp/system/views/cas/postBack.vm
--- shibboleth-idp/system/views/cas/postBack.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/cas/postBack.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,48 +1,48 @@
-<!DOCTYPE html>
-<html>
-<head>
-    <meta http-equiv="content-type" content="text/html" charset="UTF-8">
-    <title>Return to Service</title>
-    <style>
-        html, body {
-            height: 100%;
-            font-family: Helvetica, Arial, sans-serif;
-        }
-        .wrapper {
-            height: 100%;
-            margin-bottom: -50%;
-            display: block;
-        }
-        .center {
-            width: 300px;
-            height: 300px;
-            margin: 0 auto;
-            display: block;
-        }
-    </style>
-</head>
-<body onload="document.forms[0].submit()">
-<div class="wrapper">
-    <div class="center">
-        <noscript>
-            <p>
-                <strong>Note:</strong> Since your browser does not support JavaScript,
-                you must press the Continue button once to proceed.
-            </p>
-        </noscript>
-
-        <form action="$service" method="post">
-            <div>
-                <input type="hidden" name="$ticketParamName" value="$ticket"/>
-            </div>
-            <noscript>
-                <div>
-                    <input type="submit" value="Continue"/>
-                </div>
-            </noscript>
-        </form>
-    </div>
-</div>
-
-</body>
+<!DOCTYPE html>
+<html>
+<head>
+    <meta http-equiv="content-type" content="text/html" charset="UTF-8">
+    <title>Return to Service</title>
+    <style>
+        html, body {
+            height: 100%;
+            font-family: Helvetica, Arial, sans-serif;
+        }
+        .wrapper {
+            height: 100%;
+            margin-bottom: -50%;
+            display: block;
+        }
+        .center {
+            width: 300px;
+            height: 300px;
+            margin: 0 auto;
+            display: block;
+        }
+    </style>
+</head>
+<body onload="document.forms[0].submit()">
+<div class="wrapper">
+    <div class="center">
+        <noscript>
+            <p>
+                <strong>Note:</strong> Since your browser does not support JavaScript,
+                you must press the Continue button once to proceed.
+            </p>
+        </noscript>
+
+        <form action="$service" method="post">
+            <div>
+                <input type="hidden" name="$ticketParamName" value="$ticket"/>
+            </div>
+            <noscript>
+                <div>
+                    <input type="submit" value="Continue"/>
+                </div>
+            </noscript>
+        </form>
+    </div>
+</div>
+
+</body>
 </html>
\ No newline at end of file
diff -rupN shibboleth-idp/system/views/cas/proxyFailure.vm shibboleth-idp/system/views/cas/proxyFailure.vm
--- shibboleth-idp/system/views/cas/proxyFailure.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/cas/proxyFailure.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,5 +1,5 @@
-#include("cas/header.vm")
-  <cas:proxyFailure code="$proxyTicketResponse.errorCode">
-    $proxyTicketResponse.errorDetail
-  </cas:proxyFailure>
-#include("cas/footer.vm")
+#include("cas/header.vm")
+  <cas:proxyFailure code="$proxyTicketResponse.errorCode">
+    $proxyTicketResponse.errorDetail
+  </cas:proxyFailure>
+#include("cas/footer.vm")
diff -rupN shibboleth-idp/system/views/cas/proxySuccess.vm shibboleth-idp/system/views/cas/proxySuccess.vm
--- shibboleth-idp/system/views/cas/proxySuccess.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/cas/proxySuccess.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,5 +1,5 @@
-#include("cas/header.vm")
-  <cas:proxySuccess>
-    <cas:proxyTicket>$escapeUtils.escapeXml($proxyTicketResponse.pt)</cas:proxyTicket>
-  </cas:proxySuccess>
-#include("cas/footer.vm")
+#include("cas/header.vm")
+  <cas:proxySuccess>
+    <cas:proxyTicket>$escapeUtils.escapeXml($proxyTicketResponse.pt)</cas:proxyTicket>
+  </cas:proxySuccess>
+#include("cas/footer.vm")
diff -rupN shibboleth-idp/system/views/cas/validateFailure.vm shibboleth-idp/system/views/cas/validateFailure.vm
--- shibboleth-idp/system/views/cas/validateFailure.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/cas/validateFailure.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,5 +1,5 @@
-#include("cas/header.vm")
-  <cas:authenticationFailure code="$ticketValidationResponse.errorCode">
-    $ticketValidationResponse.errorDetail
-  </cas:authenticationFailure>
-#include("cas/footer.vm")
+#include("cas/header.vm")
+  <cas:authenticationFailure code="$ticketValidationResponse.errorCode">
+    $ticketValidationResponse.errorDetail
+  </cas:authenticationFailure>
+#include("cas/footer.vm")
diff -rupN shibboleth-idp/system/views/cas/validateSuccess.vm shibboleth-idp/system/views/cas/validateSuccess.vm
--- shibboleth-idp/system/views/cas/validateSuccess.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/cas/validateSuccess.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,24 +1,24 @@
-#include("cas/header.vm")
-  <cas:authenticationSuccess>
-    <cas:user>$escapeUtils.escapeXml($ticketValidationResponse.userName)</cas:user>
-    #if($ticketValidationResponse.pgtIou)
-      <cas:proxyGrantingTicket>$escapeUtils.escapeXml($ticketValidationResponse.pgtIou)</cas:proxyGrantingTicket>
-    #end
-    #if($ticketValidationResponse.attributes.size() > 0)
-      <cas:attributes>
-        #foreach($attr in $ticketValidationResponse.attributes.keySet())
-          #foreach($value in $ticketValidationResponse.attributes.get($attr))
-            <cas:$escapeUtils.escapeXml($attr)>$escapeUtils.escapeXml($value)</cas:$escapeUtils.escapeXml($attr)>
-          #end
-        #end
-      </cas:attributes>
-    #end
-    #if($ticketValidationResponse.proxies.size() > 0)
-      <cas:proxies>
-        #foreach($proxy in $ticketValidationResponse.proxies)
-          <cas:proxy>$escapeUtils.escapeXml($proxy)</cas:proxy>
-        #end
-      </cas:proxies>
-    #end
-  </cas:authenticationSuccess>
-#include("cas/footer.vm")
+#include("cas/header.vm")
+  <cas:authenticationSuccess>
+    <cas:user>$escapeUtils.escapeXml($ticketValidationResponse.userName)</cas:user>
+    #if($ticketValidationResponse.pgtIou)
+      <cas:proxyGrantingTicket>$escapeUtils.escapeXml($ticketValidationResponse.pgtIou)</cas:proxyGrantingTicket>
+    #end
+    #if($ticketValidationResponse.attributes.size() > 0)
+      <cas:attributes>
+        #foreach($attr in $ticketValidationResponse.attributes.keySet())
+          #foreach($value in $ticketValidationResponse.attributes.get($attr))
+            <cas:$escapeUtils.escapeXml($attr)>$escapeUtils.escapeXml($value)</cas:$escapeUtils.escapeXml($attr)>
+          #end
+        #end
+      </cas:attributes>
+    #end
+    #if($ticketValidationResponse.proxies.size() > 0)
+      <cas:proxies>
+        #foreach($proxy in $ticketValidationResponse.proxies)
+          <cas:proxy>$escapeUtils.escapeXml($proxy)</cas:proxy>
+        #end
+      </cas:proxies>
+    #end
+  </cas:authenticationSuccess>
+#include("cas/footer.vm")
diff -rupN shibboleth-idp/system/views/client-storage/read.vm shibboleth-idp/system/views/client-storage/read.vm
--- shibboleth-idp/system/views/client-storage/read.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/client-storage/read.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,44 +1,44 @@
-##
-## Velocity template to read from local storage.
-##
-## Velocity context will contain the following properties
-## flowExecutionUrl - the form action location
-## flowRequestContext - the Spring Web Flow RequestContext
-## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
-## profileRequestContext - root of context tree
-## loadContext - context with details about the storage keys to load
-## encoder - HTMLEncoder class
-## request - HttpServletRequest
-## response - HttpServletResponse
-## environment - Spring Environment object for property resolution
-##
-## This is the generated form containing a field set for each storage service,
-## pairing with the doLoad() function that populates the fields.
-##
-<form name="form1" action="${flowExecutionUrl}" method="post">
-    #foreach ($key in $loadContext.getStorageKeys())
-        <input name="shib_idp_ls_exception.$key" type="hidden" />
-        <input name="shib_idp_ls_success.$key" type="hidden" value="false" />
-        <input name="shib_idp_ls_value.$key" type="hidden" />
-    #end
-    <input name="shib_idp_ls_supported" type="hidden" />
-    <input name="_eventId_proceed" type="hidden" />
-    <noscript>
-        <input type="submit" value="Continue" />
-    </noscript>
-</form>
-
-<script>
-<!--
-function doLoad() {
-    var localStorageSupported = isLocalStorageSupported();
-    document.form1["shib_idp_ls_supported"].value = localStorageSupported;
-    if (localStorageSupported) {
-    #foreach ($key in $loadContext.getStorageKeys())
-        readLocalStorage("$key");
-    #end
-    }
-    document.form1.submit();
-}
-// -->
+##
+## Velocity template to read from local storage.
+##
+## Velocity context will contain the following properties
+## flowExecutionUrl - the form action location
+## flowRequestContext - the Spring Web Flow RequestContext
+## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
+## profileRequestContext - root of context tree
+## loadContext - context with details about the storage keys to load
+## encoder - HTMLEncoder class
+## request - HttpServletRequest
+## response - HttpServletResponse
+## environment - Spring Environment object for property resolution
+##
+## This is the generated form containing a field set for each storage service,
+## pairing with the doLoad() function that populates the fields.
+##
+<form name="form1" action="${flowExecutionUrl}" method="post">
+    #foreach ($key in $loadContext.getStorageKeys())
+        <input name="shib_idp_ls_exception.$key" type="hidden" />
+        <input name="shib_idp_ls_success.$key" type="hidden" value="false" />
+        <input name="shib_idp_ls_value.$key" type="hidden" />
+    #end
+    <input name="shib_idp_ls_supported" type="hidden" />
+    <input name="_eventId_proceed" type="hidden" />
+    <noscript>
+        <input type="submit" value="Continue" />
+    </noscript>
+</form>
+
+<script>
+<!--
+function doLoad() {
+    var localStorageSupported = isLocalStorageSupported();
+    document.form1["shib_idp_ls_supported"].value = localStorageSupported;
+    if (localStorageSupported) {
+    #foreach ($key in $loadContext.getStorageKeys())
+        readLocalStorage("$key");
+    #end
+    }
+    document.form1.submit();
+}
+// -->
 </script>
\ No newline at end of file
diff -rupN shibboleth-idp/system/views/client-storage/write.vm shibboleth-idp/system/views/client-storage/write.vm
--- shibboleth-idp/system/views/client-storage/write.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/client-storage/write.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,39 +1,39 @@
-##
-## Velocity template to write to local storage.
-##
-## Velocity context will contain the following properties
-## flowExecutionUrl - the form action location
-## flowRequestContext - the Spring Web Flow RequestContext
-## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
-## profileRequestContext - root of context tree
-## saveContext - context with details about the storage data to save
-## encoder - HTMLEncoder class
-## request - HttpServletRequest
-## response - HttpServletResponse
-## environment - Spring Environment object for property resolution
-##
-## This is the generated form containing a field set for each storage service,
-## pairing with the doSave() function that reports on the status of the save
-## to those fields.
-##
-<form name="form1" action="${flowExecutionUrl}" method="post">
-    #foreach ($op in $saveContext.getStorageOperations())
-        <input name="shib_idp_ls_exception.$op.getKey()" type="hidden" />
-        <input name="shib_idp_ls_success.$op.getKey()" type="hidden" value="false" />
-    #end
-    <input name="_eventId_proceed" type="hidden" />
-    <noscript>
-        <input type="submit" value="Continue" />
-    </noscript>
-</form>
-
-<script>
-<!--
-function doSave() {
-    #foreach ($op in $saveContext.getStorageOperations())
-        writeLocalStorage("$op.getKey()", "$op.getValue()");
-    #end
-    document.form1.submit();
-}
-// -->
-</script>
+##
+## Velocity template to write to local storage.
+##
+## Velocity context will contain the following properties
+## flowExecutionUrl - the form action location
+## flowRequestContext - the Spring Web Flow RequestContext
+## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
+## profileRequestContext - root of context tree
+## saveContext - context with details about the storage data to save
+## encoder - HTMLEncoder class
+## request - HttpServletRequest
+## response - HttpServletResponse
+## environment - Spring Environment object for property resolution
+##
+## This is the generated form containing a field set for each storage service,
+## pairing with the doSave() function that reports on the status of the save
+## to those fields.
+##
+<form name="form1" action="${flowExecutionUrl}" method="post">
+    #foreach ($op in $saveContext.getStorageOperations())
+        <input name="shib_idp_ls_exception.$op.getKey()" type="hidden" />
+        <input name="shib_idp_ls_success.$op.getKey()" type="hidden" value="false" />
+    #end
+    <input name="_eventId_proceed" type="hidden" />
+    <noscript>
+        <input type="submit" value="Continue" />
+    </noscript>
+</form>
+
+<script>
+<!--
+function doSave() {
+    #foreach ($op in $saveContext.getStorageOperations())
+        writeLocalStorage("$op.getKey()", "$op.getValue()");
+    #end
+    document.form1.submit();
+}
+// -->
+</script>
diff -rupN shibboleth-idp/system/views/logout/propagate.vm shibboleth-idp/system/views/logout/propagate.vm
--- shibboleth-idp/system/views/logout/propagate.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/logout/propagate.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,103 +1,103 @@
-##
-## Velocity Template containing logout propagation machinery.
-##
-## Velocity context will contain the following properties
-## flowExecutionUrl - the form action location
-## flowRequestContext - the Spring Web Flow RequestContext
-## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
-## profileRequestContext - root of context tree
-## logoutContext - context with SPSession details for logout operation
-## flowSelector - bean that maps an SPSession to a logout propagation flow
-## multiRPContext - context with RelyingPartyContexts and possibly SP UI information from the metadata
-## htmlEncoder - HTMLEncoder class
-## urlEncoder - urlEncoder class
-## codecUtil - CodecUtil class
-## request - HttpServletRequest
-## response - HttpServletResponse
-## environment - Spring Environment object for property resolution
-## custom - arbitrary object injected by deployer
-##
-## The <li> items are an enumeration of the relying parties among the sessions
-## and are identified by an encoding of the name of the relying party.
-##
-## The iframes are bound to a single session and are associated back to the <li>
-## element for the relying party of their session.
-##
-#if ($logoutContext and !$logoutContext.getSessionMap().isEmpty())
-    <ol>
-        #foreach ($sp in $logoutContext.getSessionMap().keySet())
-            #set ($rpCtx = $multiRPContext.getRelyingPartyContextById($sp))
-            #if ($rpCtx)
-                #set ($rpUIContext = $rpCtx.getSubcontext("net.shibboleth.idp.ui.context.RelyingPartyUIContext"))
-            #end
-            #if ($rpUIContext and $rpUIContext.getServiceName())
-                <li id="result_$codecUtil.hex($sp.getBytes())" title="Logout pending">$htmlEncoder.encodeForHTML($rpUIContext.getServiceName())</li>
-            #else
-                <li id="result_$codecUtil.hex($sp.getBytes())" title="Logout pending">$htmlEncoder.encodeForHTML($sp)</li>
-            #end
-        #end
-    </ol>
-    <script src="$request.getContextPath()/js/jquery-2.1.4.min.js"></script>
-    <script>
-    <!--
-        function check_status() {
-            // Check every property of the object.
-            for (flag in this) {
-                if (!this[flag]) {
-                    return false;
-                }
-            }
-            return true;
-        }
-
-        // Associative array keyed by SP name. Entries are an array keyed by session key.
-        var sessionTracker = new Object();
-        #foreach ($sp in $logoutContext.getSessionMap().keySet())
-            spTracker = new Object();
-            spTracker.status = check_status;
-            sessionTracker['result_$codecUtil.hex($sp.getBytes())'] = spTracker;
-        #end
-    
-        function onLoad(src, target, trackerId, sessionKey) {
-            try {
-                var content = src.contents().text();
-                if (content && jQuery.parseJSON(content).result == "Success") {
-                    sessionTracker[trackerId]['_' + sessionKey] = true;
-                } else {
-                    sessionTracker[trackerId]['_' + sessionKey] = false;
-                }
-            } catch (e) {
-                sessionTracker[trackerId]['_' + sessionKey] = false;
-            }
-            target.removeClass("success failure");
-            if (sessionTracker[trackerId].status()) {
-                target.addClass("success");
-                target.prop("title", "Successful logout");
-            } else {
-                target.addClass("failure");
-                target.prop("title", "Failed logout")
-            }
-            if (typeof(Storage) !== "undefined" ) {
-                var url = sessionStorage.getItem(sessionKey);
-                if (url != null) {
-                    sessionStorage.removeItem(sessionKey);
-                    setTimeout(function() { src.prop("src", url) }, 1500);
-                }
-            }
-        }
-    // -->
-    </script>
-    #foreach ($entry in $logoutContext.getKeyedSessionMap().entrySet())
-        #if ($flowSelector.apply($entry.getValue()))
-            #set ($trackerId = "result_$codecUtil.hex($entry.getValue().getId().getBytes())")
-            <iframe id="sender_$codecUtil.hex($entry.getKey().getBytes())"
-                src="$request.contextPath/profile/PropagateLogout?SessionKey=$urlEncoder.encode($entry.getKey())"
-                style="display:none" onload="onLoad($(this), $('#$trackerId'), '$trackerId', '$entry.getKey()')"></iframe>
-        #end
-    #end
-#end
-
-<!-- If SAML logout, complete the flow by adding a hidden iframe. -->
-#if ( $profileRequestContext.getProfileId().contains("saml2/logout") )
-    <iframe style="display:none" src="$flowExecutionUrl&_eventId=proceed"></iframe>
-#end
+##
+## Velocity Template containing logout propagation machinery.
+##
+## Velocity context will contain the following properties
+## flowExecutionUrl - the form action location
+## flowRequestContext - the Spring Web Flow RequestContext
+## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
+## profileRequestContext - root of context tree
+## logoutContext - context with SPSession details for logout operation
+## flowSelector - bean that maps an SPSession to a logout propagation flow
+## multiRPContext - context with RelyingPartyContexts and possibly SP UI information from the metadata
+## htmlEncoder - HTMLEncoder class
+## urlEncoder - urlEncoder class
+## codecUtil - CodecUtil class
+## request - HttpServletRequest
+## response - HttpServletResponse
+## environment - Spring Environment object for property resolution
+## custom - arbitrary object injected by deployer
+##
+## The <li> items are an enumeration of the relying parties among the sessions
+## and are identified by an encoding of the name of the relying party.
+##
+## The iframes are bound to a single session and are associated back to the <li>
+## element for the relying party of their session.
+##
+#if ($logoutContext and !$logoutContext.getSessionMap().isEmpty())
+    <ol>
+        #foreach ($sp in $logoutContext.getSessionMap().keySet())
+            #set ($rpCtx = $multiRPContext.getRelyingPartyContextById($sp))
+            #if ($rpCtx)
+                #set ($rpUIContext = $rpCtx.getSubcontext("net.shibboleth.idp.ui.context.RelyingPartyUIContext"))
+            #end
+            #if ($rpUIContext and $rpUIContext.getServiceName())
+                <li id="result_$codecUtil.hex($sp.getBytes())" title="Logout pending">$htmlEncoder.encodeForHTML($rpUIContext.getServiceName())</li>
+            #else
+                <li id="result_$codecUtil.hex($sp.getBytes())" title="Logout pending">$htmlEncoder.encodeForHTML($sp)</li>
+            #end
+        #end
+    </ol>
+    <script src="$request.getContextPath()/js/jquery-2.1.4.min.js"></script>
+    <script>
+    <!--
+        function check_status() {
+            // Check every property of the object.
+            for (flag in this) {
+                if (!this[flag]) {
+                    return false;
+                }
+            }
+            return true;
+        }
+
+        // Associative array keyed by SP name. Entries are an array keyed by session key.
+        var sessionTracker = new Object();
+        #foreach ($sp in $logoutContext.getSessionMap().keySet())
+            spTracker = new Object();
+            spTracker.status = check_status;
+            sessionTracker['result_$codecUtil.hex($sp.getBytes())'] = spTracker;
+        #end
+    
+        function onLoad(src, target, trackerId, sessionKey) {
+            try {
+                var content = src.contents().text();
+                if (content && jQuery.parseJSON(content).result == "Success") {
+                    sessionTracker[trackerId]['_' + sessionKey] = true;
+                } else {
+                    sessionTracker[trackerId]['_' + sessionKey] = false;
+                }
+            } catch (e) {
+                sessionTracker[trackerId]['_' + sessionKey] = false;
+            }
+            target.removeClass("success failure");
+            if (sessionTracker[trackerId].status()) {
+                target.addClass("success");
+                target.prop("title", "Successful logout");
+            } else {
+                target.addClass("failure");
+                target.prop("title", "Failed logout")
+            }
+            if (typeof(Storage) !== "undefined" ) {
+                var url = sessionStorage.getItem(sessionKey);
+                if (url != null) {
+                    sessionStorage.removeItem(sessionKey);
+                    setTimeout(function() { src.prop("src", url) }, 1500);
+                }
+            }
+        }
+    // -->
+    </script>
+    #foreach ($entry in $logoutContext.getKeyedSessionMap().entrySet())
+        #if ($flowSelector.apply($entry.getValue()))
+            #set ($trackerId = "result_$codecUtil.hex($entry.getValue().getId().getBytes())")
+            <iframe id="sender_$codecUtil.hex($entry.getKey().getBytes())"
+                src="$request.contextPath/profile/PropagateLogout?SessionKey=$urlEncoder.encode($entry.getKey())"
+                style="display:none" onload="onLoad($(this), $('#$trackerId'), '$trackerId', '$entry.getKey()')"></iframe>
+        #end
+    #end
+#end
+
+<!-- If SAML logout, complete the flow by adding a hidden iframe. -->
+#if ( $profileRequestContext.getProfileId().contains("saml2/logout") )
+    <iframe style="display:none" src="$flowExecutionUrl&_eventId=proceed"></iframe>
+#end
diff -rupN shibboleth-idp/system/views/logout/result.vm shibboleth-idp/system/views/logout/result.vm
--- shibboleth-idp/system/views/logout/result.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/logout/result.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,8 +1,8 @@
-##
-## Velocity Template for communicating the logout propagation result to the master controller
-##
-## Velocity context will contain the following properties
-## logoutPropCtx - LogoutPropagationContext
-## encoder - HTMLEncoder class
-##
-{ "result": "$logoutPropCtx.result"#if($logoutPropCtx.detail), "detail": "$encoder.encodeForHTML($logoutPropCtx.detail)"#end }
+##
+## Velocity Template for communicating the logout propagation result to the master controller
+##
+## Velocity context will contain the following properties
+## logoutPropCtx - LogoutPropagationContext
+## encoder - HTMLEncoder class
+##
+{ "result": "$logoutPropCtx.result"#if($logoutPropCtx.detail), "detail": "$encoder.encodeForHTML($logoutPropCtx.detail)"#end }
diff -rupN shibboleth-idp/system/views/logout/saml-async.vm shibboleth-idp/system/views/logout/saml-async.vm
--- shibboleth-idp/system/views/logout/saml-async.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/logout/saml-async.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,20 +1,20 @@
-##
-## Velocity Template for terminating a SAML2 LogoutRequest profile request containing the Async extension
-##
-## Velocity context will contain the following properties
-## profileRequestContext - root of context tree
-## encoder - HTMLEncoder class
-## request - HttpServletRequest
-## response - HttpServletResponse
-## environment - Spring Environment object for property resolution
-## custom - arbitrary object injected by deployer
-##
-<!DOCTYPE html>
-<html>
-<head>
-    <title>Logout Complete</title>
-</head>
-<body>
-    Logout complete. Service provider requested no response.
-</body>
-</html>
+##
+## Velocity Template for terminating a SAML2 LogoutRequest profile request containing the Async extension
+##
+## Velocity context will contain the following properties
+## profileRequestContext - root of context tree
+## encoder - HTMLEncoder class
+## request - HttpServletRequest
+## response - HttpServletResponse
+## environment - Spring Environment object for property resolution
+## custom - arbitrary object injected by deployer
+##
+<!DOCTYPE html>
+<html>
+<head>
+    <title>Logout Complete</title>
+</head>
+<body>
+    Logout complete. Service provider requested no response.
+</body>
+</html>
diff -rupN shibboleth-idp/system/views/logout/saml-result.vm shibboleth-idp/system/views/logout/saml-result.vm
--- shibboleth-idp/system/views/logout/saml-result.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/logout/saml-result.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,25 +1,25 @@
-##
-## Velocity Template for generating the result of a SAML2 LogoutResponse received by the IdP
-##
-## Velocity context will contain the following properties
-## profileRequestContext - root of context tree
-## encoder - HTMLEncoder class
-## request - HttpServletRequest
-## response - HttpServletResponse
-## environment - Spring Environment object for property resolution
-## custom - arbitrary object injected by deployer
-##
-#set ( $success = false )
-#set ( $detail = "" )
-#set ( $logout = $profileRequestContext.getInboundMessageContext().getMessage() )
-#if ( $logout and $logout.getStatus() )
-    #set ( $sc = $logout.getStatus().getStatusCode() )
-    #if ( $sc and $sc.getValue() and $sc.getValue().contains('Success') )
-        #set ( $success = true )
-    #end
-    #set ( $sm = $logout.getStatus().getStatusMessage() )
-    #if ($sm and $sm.getStatusMessage() )
-        #set ( $detail = $sm.getStatusMessage().getMessage() )
-    #end
-#end
-{ "result": #if ( $success ) "Success" #else "Failure" #end#if ( $detail != "" ), "detail": "$encoder.encodeForHTML($detail)"#end }
+##
+## Velocity Template for generating the result of a SAML2 LogoutResponse received by the IdP
+##
+## Velocity context will contain the following properties
+## profileRequestContext - root of context tree
+## encoder - HTMLEncoder class
+## request - HttpServletRequest
+## response - HttpServletResponse
+## environment - Spring Environment object for property resolution
+## custom - arbitrary object injected by deployer
+##
+#set ( $success = false )
+#set ( $detail = "" )
+#set ( $logout = $profileRequestContext.getInboundMessageContext().getMessage() )
+#if ( $logout and $logout.getStatus() )
+    #set ( $sc = $logout.getStatus().getStatusCode() )
+    #if ( $sc and $sc.getValue() and $sc.getValue().contains('Success') )
+        #set ( $success = true )
+    #end
+    #set ( $sm = $logout.getStatus().getStatusMessage() )
+    #if ($sm and $sm.getStatusMessage() )
+        #set ( $detail = $sm.getStatusMessage().getMessage() )
+    #end
+#end
+{ "result": #if ( $success ) "Success" #else "Failure" #end#if ( $detail != "" ), "detail": "$encoder.encodeForHTML($detail)"#end }
diff -rupN shibboleth-idp/system/views/resolvertest.vm shibboleth-idp/system/views/resolvertest.vm
--- shibboleth-idp/system/views/resolvertest.vm	2018-05-14 23:49:38.000000000 -0400
+++ shibboleth-idp/system/views/resolvertest.vm	2019-07-01 13:03:37.453960938 -0400
@@ -1,47 +1,47 @@
-##
-## Velocity Template for aacli/resolvertest Utility Output
-##
-## Velocity context will contain the following properties
-## flowRequestContext - the Spring Web Flow RequestContext
-## request - HttpServletRequest
-## response - HttpServletResponse
-## profileRequestContext
-## attributeContext
-## XMLObjectSupport
-## SerializeSupport
-## environment - Spring Environment object for property resolution
-## custom - arbitrary object injected by deployer
-##
-#if ($flowRequestContext.getCurrentEvent() and !$flowRequestContext.getCurrentEvent().getId().equals("proceed"))
-    { "error": "$flowRequestContext.getCurrentEvent().getId()" }
-    $response.setContentType("application/json")
-    #stop
-#end
-#if ($profileRequestContext.getOutboundMessageContext() and $profileRequestContext.getOutboundMessageContext().getMessage())
-$SerializeSupport.prettyPrintXML($XMLObjectSupport.marshall($profileRequestContext.getOutboundMessageContext().getMessage()))
-    $response.setContentType("text/xml")
-    #stop
-#end 
-
-{
-"requester": "$profileRequestContext.getInboundMessageContext().getMessage().getRequesterId()",
-"principal": "$profileRequestContext.getInboundMessageContext().getMessage().getPrincipal()",
-"attributes": [
-
-#foreach ($attribute in $attributeContext.getIdPAttributes())
-
-  {
-    "name": "$attribute.getId()",
-    "values": [
-      #foreach ($value in $attribute.getValues())
-        "$value.toString().replace('"','\"')"#if( $foreach.hasNext ),#end
-      #end
-    ]
-  }#if( $foreach.hasNext ),#end
-  
-#end
-
-]
-}
-
-$response.setContentType("application/json")
+##
+## Velocity Template for aacli/resolvertest Utility Output
+##
+## Velocity context will contain the following properties
+## flowRequestContext - the Spring Web Flow RequestContext
+## request - HttpServletRequest
+## response - HttpServletResponse
+## profileRequestContext
+## attributeContext
+## XMLObjectSupport
+## SerializeSupport
+## environment - Spring Environment object for property resolution
+## custom - arbitrary object injected by deployer
+##
+#if ($flowRequestContext.getCurrentEvent() and !$flowRequestContext.getCurrentEvent().getId().equals("proceed"))
+    { "error": "$flowRequestContext.getCurrentEvent().getId()" }
+    $response.setContentType("application/json")
+    #stop
+#end
+#if ($profileRequestContext.getOutboundMessageContext() and $profileRequestContext.getOutboundMessageContext().getMessage())
+$SerializeSupport.prettyPrintXML($XMLObjectSupport.marshall($profileRequestContext.getOutboundMessageContext().getMessage()))
+    $response.setContentType("text/xml")
+    #stop
+#end 
+
+{
+"requester": "$profileRequestContext.getInboundMessageContext().getMessage().getRequesterId()",
+"principal": "$profileRequestContext.getInboundMessageContext().getMessage().getPrincipal()",
+"attributes": [
+
+#foreach ($attribute in $attributeContext.getIdPAttributes())
+
+  {
+    "name": "$attribute.getId()",
+    "values": [
+      #foreach ($value in $attribute.getValues())
+        "$value.toString().replace('"','\"')"#if( $foreach.hasNext ),#end
+      #end
+    ]
+  }#if( $foreach.hasNext ),#end
+  
+#end
+
+]
+}
+
+$response.setContentType("application/json")
